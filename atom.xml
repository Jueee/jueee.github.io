<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小决的专栏</title>
  
  <subtitle>进一寸有一寸的欢喜</subtitle>
  <link href="https://jueee.github.io/atom.xml" rel="self"/>
  
  <link href="https://jueee.github.io/"/>
  <updated>2020-12-17T08:47:38.108Z</updated>
  <id>https://jueee.github.io/</id>
  
  <author>
    <name>小决</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot 集成 Zookeeper</title>
    <link href="https://jueee.github.io/2020/12/2020-12-19-SpringBoot%E9%9B%86%E6%88%90Zookeeper/"/>
    <id>https://jueee.github.io/2020/12/2020-12-19-SpringBoot%E9%9B%86%E6%88%90Zookeeper/</id>
    <published>2020-12-19T00:00:00.000Z</published>
    <updated>2020-12-17T08:47:38.108Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>pom.xml 引入 Zookeeper 依赖</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><a id="more"></a><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>在 <code>application.properties</code> 文件中添加 zookeeper 配置：</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">zookeeper.address</span><span class="token punctuation">=</span><span class="token attr-value">127.0.0.1:2181</span><span class="token attr-name">zookeeper.timeout</span><span class="token punctuation">=</span><span class="token attr-value">4000</span></code></pre><h3 id="连接配置类"><a href="#连接配置类" class="headerlink" title="连接配置类"></a>连接配置类</h3><p>新建 ZookeeperConfig 连接配置类</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token punctuation">.</span></span><span class="token class-name">WatchedEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token punctuation">.</span></span><span class="token class-name">Watcher</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token punctuation">.</span></span><span class="token class-name">ZooKeeper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CountDownLatch</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${zookeeper.address}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> connectString<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${zookeeper.timeout}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> timeout<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"zkClient"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ZooKeeper</span> <span class="token function">zkClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ZooKeeper</span> zooKeeper<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 连接成功后，会回调watcher监听，此连接操作是异步的，执行完new语句后，直接调用后续代码</span>            <span class="token comment">// 可指定多台服务地址 127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183</span>            zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span>connectString<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Event</span><span class="token punctuation">.</span><span class="token class-name">KeeperState</span><span class="token punctuation">.</span><span class="token class-name">SyncConnected</span><span class="token operator">==</span>event<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token comment">//如果收到了服务端的响应事件,连接成功</span>                        countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"【初始化ZooKeeper连接状态....】={}"</span><span class="token punctuation">,</span>zooKeeper<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// CONNECTED</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"初始化ZooKeeper连接异常....】={}"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span>  zooKeeper<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h3><h4 id="获取子节点"><a href="#获取子节点" class="headerlink" title="获取子节点"></a>获取子节点</h4><p>获取当前节点的子节点 (不包含孙子节点)</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KeeperException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> list<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h4><p>创建持久化节点</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createNode</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token class-name">String</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        zkClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs</span><span class="token punctuation">.</span><span class="token class-name">Ids</span><span class="token punctuation">.</span>OPEN_ACL_UNSAFE<span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span>PERSISTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"【创建持久化节点异常】{},{},{}"</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>data<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="修改节点"><a href="#修改节点" class="headerlink" title="修改节点"></a>修改节点</h4><p>修改持久化节点</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">updateNode</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token class-name">String</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token comment">//zk的数据版本是从0开始计数的。如果客户端传入的是-1，则表示zk服务器需要基于最新的数据进行更新。</span>        <span class="token comment">//如果对zk的数据节点的更新操作没有原子性要求则可以使用-1.</span>        <span class="token comment">//version参数指定要更新的数据的版本, 如果version和真实的版本不同, 更新操作将失败. 指定version为-1则忽略版本检查</span>        zkClient<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"【修改持久化节点异常】{},{},{}"</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>data<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="获取节点值"><a href="#获取节点值" class="headerlink" title="获取节点值"></a>获取节点值</h4><p>获取指定节点的值</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span>  <span class="token class-name">String</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token class-name">Watcher</span> watcher<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">Stat</span> stat<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Stat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token operator">=</span>zkClient<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>watcher<span class="token punctuation">,</span>stat<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="判断节点是否存在"><a href="#判断节点是否存在" class="headerlink" title="判断节点是否存在"></a>判断节点是否存在</h4><p>判断指定节点是否存在</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">// @param needWatch  指定是否复用zookeeper中默认的Watcher</span><span class="token keyword">public</span> <span class="token class-name">Stat</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">boolean</span> needWatch<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>needWatch<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"【断指定节点是否存在异常】{},{}"</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 检测结点是否存在 并设置监听事件（三种监听类型： 创建，删除，更新）</span><span class="token comment">// @param watcher  传入指定的监听类</span><span class="token keyword">public</span> <span class="token class-name">Stat</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">,</span><span class="token class-name">Watcher</span> watcher <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"【断指定节点是否存在异常】{},{}"</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>返回的 Stat 节点示例如下：</p><pre class="language-java" data-language="java"><code class="language-java">log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"[isExists]"</span><span class="token operator">+</span>isExists<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [isExists]262,262,1608169108777,1608169108777,0,0,0,0,8,0,262</span></code></pre><p>这几个数字对应的类型分别如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token class-name">ByteArrayOutputStream</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CsvOutputArchive</span> a_ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CsvOutputArchive</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        a_<span class="token punctuation">.</span><span class="token function">startRecord</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>czxid<span class="token punctuation">,</span> <span class="token string">"czxid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zookeeper为节点分配的Id</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mzxid<span class="token punctuation">,</span> <span class="token string">"mzxid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修改后的id</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ctime<span class="token punctuation">,</span> <span class="token string">"ctime"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 节点创建时间</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mtime<span class="token punctuation">,</span> <span class="token string">"mtime"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修改时间</span>        a_<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>version<span class="token punctuation">,</span> <span class="token string">"version"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 节点的更新次数</span>        a_<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cversion<span class="token punctuation">,</span> <span class="token string">"cversion"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 子节点的更新次数</span>        a_<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>aversion<span class="token punctuation">,</span> <span class="token string">"aversion"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 节点ACL(授权信息)的更新次数</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ephemeralOwner<span class="token punctuation">,</span> <span class="token string">"ephemeralOwner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果该节点为临时节点,ephemeralOwner值表示与该节点绑定的session id. 如果该节点不是临时节点,ephemeralOwner值为0</span>        a_<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataLength<span class="token punctuation">,</span> <span class="token string">"dataLength"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 数据长度</span>        a_<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numChildren<span class="token punctuation">,</span> <span class="token string">"numChildren"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 子节点个数</span>        a_<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pzxid<span class="token punctuation">,</span> <span class="token string">"pzxid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_<span class="token punctuation">.</span><span class="token function">endRecord</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>        var3<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ERROR"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>与 get 或 stat 命令行的返回结果一致：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ get /testtestdatacZxid <span class="token operator">=</span> 0x106ctime <span class="token operator">=</span> Thu Dec <span class="token number">17</span> 09:38:28 CST <span class="token number">2020</span>mZxid <span class="token operator">=</span> 0x106mtime <span class="token operator">=</span> Thu Dec <span class="token number">17</span> 09:38:28 CST <span class="token number">2020</span>pZxid <span class="token operator">=</span> 0x106cversion <span class="token operator">=</span> <span class="token number">0</span>dataVersion <span class="token operator">=</span> <span class="token number">0</span>aclVersion <span class="token operator">=</span> <span class="token number">0</span>ephemeralOwner <span class="token operator">=</span> 0x0dataLength <span class="token operator">=</span> <span class="token number">8</span>numChildren <span class="token operator">=</span> <span class="token number">0</span>$ <span class="token function">stat</span> /testcZxid <span class="token operator">=</span> 0x106ctime <span class="token operator">=</span> Thu Dec <span class="token number">17</span> 09:38:28 CST <span class="token number">2020</span>mZxid <span class="token operator">=</span> 0x106mtime <span class="token operator">=</span> Thu Dec <span class="token number">17</span> 09:38:28 CST <span class="token number">2020</span>pZxid <span class="token operator">=</span> 0x106cversion <span class="token operator">=</span> <span class="token number">0</span>dataVersion <span class="token operator">=</span> <span class="token number">0</span>aclVersion <span class="token operator">=</span> <span class="token number">0</span>ephemeralOwner <span class="token operator">=</span> 0x0dataLength <span class="token operator">=</span> <span class="token number">8</span>numChildren <span class="token operator">=</span> <span class="token number">0</span></code></pre><h4 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4><p>删除持久化节点</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token comment">//version参数指定要更新的数据的版本, 如果version和真实的版本不同, 更新操作将失败. 指定version为-1则忽略版本检查</span>        zkClient<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"【删除持久化节点异常】{},{}"</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="自定义监听"><a href="#自定义监听" class="headerlink" title="自定义监听"></a>自定义监听</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token punctuation">.</span></span><span class="token class-name">WatchedEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token punctuation">.</span></span><span class="token class-name">Watcher</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperWatcher</span> <span class="token keyword">implements</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"【Watcher监听事件】={}"</span><span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"【监听路径为】={}"</span><span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"【监听的类型为】={}"</span><span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  三种监听类型： 创建，删除，更新</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>删除节点时，打印结果为：</p><pre class="language-none"><code class="language-none">【监听的类型为】=NodeDeleted【Watcher监听事件】=SyncConnected【监听路径为】=/test【监听的类型为】=NodeDeleted</code></pre><p>event.getState () 的 返回类型见 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXIvYmxvYi9tYXN0ZXIvem9va2VlcGVyLXNlcnZlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvem9va2VlcGVyL1dhdGNoZXIuamF2YQ==">Watcher.KeeperState<i class="fa fa-external-link-alt"></i></span> 子类。</p><p>event.getType () 的 返回类型见 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXIvYmxvYi9tYXN0ZXIvem9va2VlcGVyLXNlcnZlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvem9va2VlcGVyL1dhdGNoZXIuamF2YQ==">Watcher.EventType<i class="fa fa-external-link-alt"></i></span>&nbsp;子类。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;引入依赖&quot;&gt;&lt;a href=&quot;#引入依赖&quot; class=&quot;headerlink&quot; title=&quot;引入依赖&quot;&gt;&lt;/a&gt;引入依赖&lt;/h3&gt;&lt;p&gt;pom.xml 引入 Zookeeper 依赖&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot; data-language=&quot;xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.apache.zookeeper&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;zookeeper&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;3.4.14&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaJar" scheme="https://jueee.github.io/categories/Java/JavaJar/"/>
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/categories/Java/SpringBoot/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/categories/Apache/Zookeeper/"/>
    
    
    <category term="Apache" scheme="https://jueee.github.io/tags/Apache/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/tags/SpringBoot/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>使用 RSA 在 Web 前端加密传输至后台解密</title>
    <link href="https://jueee.github.io/2020/12/2020-12-18-%E4%BD%BF%E7%94%A8RSA%E5%9C%A8Web%E5%89%8D%E7%AB%AF%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93%E8%87%B3%E5%90%8E%E5%8F%B0%E8%A7%A3%E5%AF%86/"/>
    <id>https://jueee.github.io/2020/12/2020-12-18-%E4%BD%BF%E7%94%A8RSA%E5%9C%A8Web%E5%89%8D%E7%AB%AF%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93%E8%87%B3%E5%90%8E%E5%8F%B0%E8%A7%A3%E5%AF%86/</id>
    <published>2020-12-18T00:00:00.000Z</published>
    <updated>2020-12-17T09:10:57.524Z</updated>
    
    <content type="html"><![CDATA[<p>在自定义登录过程中，用户名和密码通常是作为 form 表单中的 input 控件进行输入，然后明文传输到服务端进行校验登录的。</p><p>此时，可能会出现密码明文传输问题。如下图示例所示：</p><p><img src="/images/2020/12/image-20201217163137695.png" alt="image-20201217163137695" loading="lazy"></p><p>通常跟服务器的交互中，为保障数据传输的安全性，避免被人抓包篡改数据，除了 https 的应用，还需要对传输数据进行加解密。</p><p>本文介绍一种 <strong>RSA 加密 web 前端用户名密码加密传输至后台并解密</strong> 的方法。</p><a id="more"></a><h3 id="公共类RSAUtils"><a href="#公共类RSAUtils" class="headerlink" title="公共类RSAUtils"></a>公共类 RSAUtils</h3><p>可能需要引入 Jar 包：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.bouncycastle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>bcprov-jdk15on<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.67<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><p>编写加解密公共方法类 RSAUtils</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>codec<span class="token punctuation">.</span>binary<span class="token punctuation">.</span></span><span class="token class-name">Base64</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Cipher</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">RSAPublicKey</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RSAUtils</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">KeyPair</span> keyPair <span class="token operator">=</span> <span class="token function">initKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">KeyPair</span> <span class="token function">initKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token class-name">Provider</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span><span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Security</span><span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SecureRandom</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KeyPairGenerator</span> generator <span class="token operator">=</span> <span class="token class-name">KeyPairGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"RSA"</span><span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span>generator<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> random<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> generator<span class="token punctuation">.</span><span class="token function">generateKeyPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generateBase64PublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">PublicKey</span> publicKey <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RSAPublicKey</span><span class="token punctuation">)</span> keyPair<span class="token punctuation">.</span><span class="token function">getPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encodeBase64</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">.</span><span class="token function">getEncoded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decryptBase64</span><span class="token punctuation">(</span><span class="token class-name">String</span> string<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decodeBase64</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token class-name">Provider</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span><span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Security</span><span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"RSA/ECB/PKCS1Padding"</span><span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">PrivateKey</span> privateKey <span class="token operator">=</span> keyPair<span class="token punctuation">.</span><span class="token function">getPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span>DECRYPT_MODE<span class="token punctuation">,</span> privateKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> plainText <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> plainText<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="后台生成公钥方法"><a href="#后台生成公钥方法" class="headerlink" title="后台生成公钥方法"></a>后台生成公钥方法</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"getPublicKey"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@ResponseBody</span> <span class="token class-name">String</span> <span class="token function">getPublicKey</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">String</span> publicKey <span class="token operator">=</span> <span class="token class-name">RSAUtils</span><span class="token punctuation">.</span><span class="token function">generateBase64PublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> publicKey<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="前端获取公钥"><a href="#前端获取公钥" class="headerlink" title="前端获取公钥"></a>前端获取公钥</h3><p>前端在向后台发起登录请求之前，先请求后台获取公钥的方法</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> publicKey<span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token operator">:</span> <span class="token string">"getPublicKey"</span><span class="token punctuation">,</span>    type<span class="token operator">:</span> <span class="token string">"get"</span><span class="token punctuation">,</span>    async<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    dataType<span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>            publicKey <span class="token operator">=</span> data<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="前端引入加密依赖"><a href="#前端引入加密依赖" class="headerlink" title="前端引入加密依赖"></a>前端引入加密依赖</h3><p>前端引入 jsencrypt.min.js 文件：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/jsencrypt.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><ul><li>官网：<span class="exturl" data-url="aHR0cDovL3RyYXZpc3RpZHdlbGwuY29tL2pzZW5jcnlwdC8=">http://travistidwell.com/jsencrypt/<i class="fa fa-external-link-alt"></i></span></li><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RyYXZpc3QvanNlbmNyeXB0">https://github.com/travist/jsencrypt<i class="fa fa-external-link-alt"></i></span></li><li>npm：<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvanNlbmNyeXB0">https://www.npmjs.com/package/jsencrypt<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="前端加密"><a href="#前端加密" class="headerlink" title="前端加密"></a>前端加密</h3><p>通过公钥对用户名和密码加密</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> encrypt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSEncrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>encrypt<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> loginaccount <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#loginaccount'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> loginpassword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#loginpassword'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loginaccount <span class="token operator">=</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>loginaccount<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loginpassword <span class="token operator">=</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>loginpassword<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="加密请求后台"><a href="#加密请求后台" class="headerlink" title="加密请求后台"></a>加密请求后台</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>通过 ajax 用加密后的用户名密码请求后台</p><pre class="language-js" data-language="js"><code class="language-js">$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">,</span>url<span class="token operator">:</span> <span class="token string">"xxxxxx"</span><span class="token punctuation">,</span>data<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token operator">:</span>username<span class="token punctuation">,</span><span class="token string">"password"</span><span class="token operator">:</span>password<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span><span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//登录成功</span>parent<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'index.html'</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>vm<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>vm<span class="token punctuation">.</span>errorMsg <span class="token operator">=</span> result<span class="token punctuation">.</span>msg<span class="token punctuation">;</span>vm<span class="token punctuation">.</span><span class="token function">refreshCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>使用 form 表单请求后台</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loginForm<span class="token punctuation">"</span></span> <span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>return checkLoginTask()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(<span class="token punctuation">'</span>#loginForm<span class="token punctuation">'</span>).submit()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>其中 checkLoginTask 方法如下：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">checkLoginTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> publicKey<span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token operator">:</span> <span class="token string">"getPublicKey"</span><span class="token punctuation">,</span>        type<span class="token operator">:</span> <span class="token string">"get"</span><span class="token punctuation">,</span>        async<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        dataType<span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                publicKey <span class="token operator">=</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>publicKey <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> encrypt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSEncrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    encrypt<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span>publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> loginaccount <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#loginaccount'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> loginpassword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#loginpassword'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loginaccount <span class="token operator">=</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>loginaccount<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loginpassword <span class="token operator">=</span> encrypt<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>loginpassword<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#account'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>loginaccount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>loginpassword<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="/images/2020/12/image-20201217164715019.png" alt="image-20201217164715019" loading="lazy"></p><p>从而可以避免出现密码明文传输问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在自定义登录过程中，用户名和密码通常是作为 form 表单中的 input 控件进行输入，然后明文传输到服务端进行校验登录的。&lt;/p&gt;
&lt;p&gt;此时，可能会出现密码明文传输问题。如下图示例所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/12/image-20201217163137695.png&quot; alt=&quot;image-20201217163137695&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;
&lt;p&gt;通常跟服务器的交互中，为保障数据传输的安全性，避免被人抓包篡改数据，除了 https 的应用，还需要对传输数据进行加解密。&lt;/p&gt;
&lt;p&gt;本文介绍一种 &lt;strong&gt;RSA 加密 web 前端用户名密码加密传输至后台并解密&lt;/strong&gt; 的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaClass" scheme="https://jueee.github.io/categories/Java/JavaClass/"/>
    
    
    <category term="JavaClass" scheme="https://jueee.github.io/tags/JavaClass/"/>
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="RSA" scheme="https://jueee.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper 客户端错误：Packet len* is out of range!</title>
    <link href="https://jueee.github.io/2020/12/2020-12-17-Zookeeper%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%94%99%E8%AF%AF%EF%BC%9APacket-len-is-out-of-range!/"/>
    <id>https://jueee.github.io/2020/12/2020-12-17-Zookeeper%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%94%99%E8%AF%AF%EF%BC%9APacket-len-is-out-of-range!/</id>
    <published>2020-12-17T00:00:00.000Z</published>
    <updated>2020-12-16T09:16:52.320Z</updated>
    
    <content type="html"><![CDATA[<h3 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h3><p>zookeeper 客户端出现异常：</p><pre class="language-none"><code class="language-none">2020-12-16 14:47:52,219 [main-SendThread(127.0.0.1:2181)] WARN  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1161) - Session 0x1766a4799830001 for server localhost/127.0.0.1:2181, unexpected error, closing socket connection and attempting reconnectjava.io.IOException: Packet len5605464 is out of range!        at org.apache.zookeeper.ClientCnxn$SendThread.readLength(ClientCnxn.java:710)        at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:869)        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1130)</code></pre><a id="more"></a><h3 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h3><p>根据错误提示，<code>java.io.IOException: Packet len8854970 is out of range!</code>，out of range 就是超过了某个限制，查看源码。</p><p>根据相应的关键词，找到报错的类：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXIvYmxvYi9tYXN0ZXIvem9va2VlcGVyLXNlcnZlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvem9va2VlcGVyL0NsaWVudENueG5Tb2NrZXQuamF2YQ==">ClientCnxnSocket.java<i class="fa fa-external-link-alt"></i></span></p><p>对应方法如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">int</span> packetLen <span class="token operator">=</span> <span class="token class-name">ZKClientConfig</span><span class="token punctuation">.</span>CLIENT_MAX_PACKET_LENGTH_DEFAULT<span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        packetLen <span class="token operator">=</span> clientConfig<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>            <span class="token class-name">ZKConfig</span><span class="token punctuation">.</span>JUTE_MAXBUFFER<span class="token punctuation">,</span>            <span class="token class-name">ZKClientConfig</span><span class="token punctuation">.</span>CLIENT_MAX_PACKET_LENGTH_DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>        LOG<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} value is {} Bytes"</span><span class="token punctuation">,</span> <span class="token class-name">ZKConfig</span><span class="token punctuation">.</span>JUTE_MAXBUFFER<span class="token punctuation">,</span> packetLen<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token class-name">MessageFormat</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>            <span class="token string">"Configured value {0} for property {1} can not be parsed to int"</span><span class="token punctuation">,</span>            clientConfig<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">ZKConfig</span><span class="token punctuation">.</span>JUTE_MAXBUFFER<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">ZKConfig</span><span class="token punctuation">.</span>JUTE_MAXBUFFER<span class="token punctuation">)</span><span class="token punctuation">;</span>        LOG<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">readLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> len <span class="token operator">=</span> incomingBuffer<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> len <span class="token operator">&gt;=</span> packetLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">"Packet len "</span> <span class="token operator">+</span> len <span class="token operator">+</span> <span class="token string">" is out of range!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    incomingBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>其中，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXIvYmxvYi9tYXN0ZXIvem9va2VlcGVyLXNlcnZlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvem9va2VlcGVyL2NvbW1vbi9aS0NvbmZpZy5qYXZhI0w0NQ==">ZKConfig.JUTE_MAXBUFFER<i class="fa fa-external-link-alt"></i></span> 的定义如下</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> JUTE_MAXBUFFER <span class="token operator">=</span> <span class="token string">"jute.maxbuffer"</span><span class="token punctuation">;</span></code></pre><p>默认值 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXIvYmxvYi9tYXN0ZXIvem9va2VlcGVyLXNlcnZlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvem9va2VlcGVyL2NsaWVudC9aS0NsaWVudENvbmZpZy5qYXZhI0w2MA==">ZKClientConfig.CLIENT_MAX_PACKET_LENGTH_DEFAULT<i class="fa fa-external-link-alt"></i></span> 为：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CLIENT_MAX_PACKET_LENGTH_DEFAULT <span class="token operator">=</span> <span class="token number">0xfffff</span><span class="token punctuation">;</span> <span class="token comment">/* 1 MB */</span></code></pre><p>从代码就能够很容易的看出，这个错误是因为 <code>len</code> 小于 0 或大于 <code>packetLen</code>，根据代码逻辑，<code>len</code> 不小于 0，那就是大于 <code>packetLen</code>。</p><p>而 <code>packetLen</code> 的值是 <code>jute.maxbuffer</code> 系统变量定义或默认的 4096 * 1024（4M）。</p><p>16 进制的 <code>0xfffff</code> 为 10 进制的 <code>1048575</code>，即 1M。</p><p>源码的大体逻辑就是，创建与 zookeeper 连接之后，要对某个节点进行读写操作，为了提高吞吐量，先判断下该节点数据量大小是否超过设置的 <code>jute.maxbuffer</code>，如果是，就抛出异常。</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>根据上面的纠错，答案就很明显了。只有两种方案：</p><ul><li>把待操作节点的大小减下来，小于默认的 4M</li><li> 把默认的 <code>jute.maxbuffer</code> 大小提高</li></ul><p>对于第一种方式，需要根据自身具体情况具体操作。这里没有什么有效建议。</p><p>对于第二种方式，server 和 client 根据情况进行修改，解决方案如下：</p><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>zkServer 修改配置文件，增加内存配置 <code>jute.maxbuffer</code>，重启 zk 使配置生效。</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> zoo.cfgjute.maxbuffer<span class="token operator">=</span>0x400000 <span class="token comment">#增加此配置到 4M 内存</span></code></pre><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>client 端启动的时候增加参数</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">JAVA_OPTS</span><span class="token operator">=</span><span class="token string">" -Djute.maxbuffer=0x400000 "</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;出现问题&quot;&gt;&lt;a href=&quot;#出现问题&quot; class=&quot;headerlink&quot; title=&quot;出现问题&quot;&gt;&lt;/a&gt;出现问题&lt;/h3&gt;&lt;p&gt;zookeeper 客户端出现异常：&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;2020-12-16 14:47:52,219 [main-SendThread(127.0.0.1:2181)] WARN  org.apache.zookeeper.ClientCnxn$SendThread (ClientCnxn.java:1161) - Session 0x1766a4799830001 for server localhost/127.0.0.1:2181, unexpected error, closing socket connection and attempting reconnect
java.io.IOException: Packet len5605464 is out of range!
        at org.apache.zookeeper.ClientCnxn$SendThread.readLength(ClientCnxn.java:710)
        at org.apache.zookeeper.ClientCnxn$SendThread.doIO(ClientCnxn.java:869)
        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1130)&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/categories/Apache/Zookeeper/"/>
    
    
    <category term="Apache" scheme="https://jueee.github.io/tags/Apache/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装使用 iostat 命令</title>
    <link href="https://jueee.github.io/2020/12/2020-12-16-Linux%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8iostat%E5%91%BD%E4%BB%A4/"/>
    <id>https://jueee.github.io/2020/12/2020-12-16-Linux%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8iostat%E5%91%BD%E4%BB%A4/</id>
    <published>2020-12-16T00:00:00.000Z</published>
    <updated>2020-12-16T07:57:45.396Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iostat-介绍"><a href="#iostat-介绍" class="headerlink" title="iostat 介绍"></a>iostat 介绍</h3><p><strong>iostat 命令</strong> 被用于监视系统输入输出设备和 CPU 的使用情况。</p><p>它的特点是汇报磁盘活动统计情况，同时也会汇报出 CPU 使用情况。</p><p>同 vmstat 一样，iostat 也有一个弱点，就是它不能对某个进程进行深入分析，仅对系统的整体情况进行分析。</p><a id="more"></a><h3 id="安装-iostat"><a href="#安装-iostat" class="headerlink" title="安装 iostat"></a>安装 iostat</h3><p>centos 安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> sysstat</code></pre><p>Debian 安装：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> sysstat</code></pre><p>包下载：</p><ul><li>Debian 8：<span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2plc3NpZS9zeXNzdGF0">https://packages.debian.org/jessie/sysstat<i class="fa fa-external-link-alt"></i></span></li><li>Debian 9：<span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL3N0cmV0Y2gvc3lzc3RhdA==">https://packages.debian.org/stretch/sysstat<i class="fa fa-external-link-alt"></i></span></li><li>Debian 10：<span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1c3Rlci9zeXNzdGF0">https://packages.debian.org/buster/sysstat<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="使用-iostat"><a href="#使用-iostat" class="headerlink" title="使用 iostat"></a>使用 iostat</h3><p>选项</p><ul><li>-c：仅显示 CPU 使用情况；</li><li>-d：仅显示设备利用率；</li><li>-k：显示状态以千字节每秒为单位，而不使用块每秒；</li><li>-m：显示状态以兆字节每秒为单位；</li><li>-p：仅显示块设备和所有被使用的其他分区的状态；</li><li>-t：显示每个报告产生时的时间；</li><li>-V：显示版号并退出；</li><li>-x：显示扩展状态。</li></ul><p>参数：</p><ul><li>间隔时间：每次报告的间隔时间（秒）；</li><li>次数：显示报告的次数。</li></ul><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><h4 id="d-参数"><a href="#d-参数" class="headerlink" title="-d 参数"></a>-d 参数</h4><p>参数 -d 表示，显示设备（磁盘）使用状态。</p><pre class="language-none"><code class="language-none">$ iostat -d 10Linux 4.9.0-8-amd64 (mant)      2020年12月16日  _x86_64_        (4 CPU)Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtnsda               1.55        16.98        28.18    8690027   14417430sdb              10.62        21.86       192.73   11187053   98614636</code></pre><p>输出信息的含义：</p><ul><li>tps：该设备每秒的传输次数。"一次传输" 意思是 "一次 I/O 请求"。多个逻辑请求可能会被合并为 "一次 I/O 请求"。"一次传输" 请求的大小是未知的。</li><li>kB_read/s：每秒从设备读取的数据量；</li><li>kB_wrtn/s：每秒向设备写入的数据量；</li><li>kB_read：读取的总数据量；</li><li>kB_wrtn：写入的总数量数据量。</li></ul><p>这些单位都为 Kilobytes。</p><h4 id="c-参数"><a href="#c-参数" class="headerlink" title="-c 参数"></a>-c 参数</h4><p>-c 参数显示 CPU 使用情况：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ iostat -cLinux <span class="token number">4.9</span>.0-8-amd64 <span class="token punctuation">(</span>mant<span class="token punctuation">)</span>      <span class="token number">2020</span>年12月16日  _x86_64_        <span class="token punctuation">(</span><span class="token number">4</span> CPU<span class="token punctuation">)</span>avg-cpu:  %user   %nice %system %iowait  %steal   %idle          <span class="token number">58.94</span>    <span class="token number">0.00</span>    <span class="token number">2.70</span>    <span class="token number">1.26</span>    <span class="token number">0.00</span>   <span class="token number">37.10</span></code></pre><p>输出信息的含义：</p><ul><li>% user：CPU 处在用户模式下的时间百分比。</li><li>% nice：CPU 处在带 NICE 值的用户模式下的时间百分比。</li><li>% system：CPU 处在系统模式下的时间百分比。</li><li>% iowait：CPU 等待输入输出完成时间的百分比。</li><li>% steal：管理程序维护另一个虚拟处理器时，虚拟 CPU 的无意识等待时间百分比。</li><li>% idle：CPU 空闲时间百分比。</li></ul><p><strong>备注：</strong>如果 % iowait 的值过高，表示硬盘存在 I/O 瓶颈，% idle 值高，表示 CPU 较空闲，如果 % idle 值高但系统响应慢时，有可能是 CPU 等待分配内存，此时应加大内存容量。% idle 值如果持续低于 10，那么系统的 CPU 处理能力相对较低，表明系统中最需要解决的资源是 CPU。</p><h4 id="x-参数"><a href="#x-参数" class="headerlink" title="-x 参数"></a>-x 参数</h4><p>每隔三秒查看一次完整信息：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ iostat -x <span class="token number">3</span>Linux <span class="token number">4.9</span>.0-8-amd64 <span class="token punctuation">(</span>mant<span class="token punctuation">)</span>      <span class="token number">2020</span>年12月16日  _x86_64_        <span class="token punctuation">(</span><span class="token number">4</span> CPU<span class="token punctuation">)</span>avg-cpu:  %user   %nice %system %iowait  %steal   %idle          <span class="token number">58.88</span>    <span class="token number">0.00</span>    <span class="token number">2.71</span>    <span class="token number">1.26</span>    <span class="token number">0.00</span>   <span class="token number">37.16</span>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %utilsda               <span class="token number">1.48</span>     <span class="token number">5.77</span>    <span class="token number">1.07</span>    <span class="token number">0.47</span>    <span class="token number">17.03</span>    <span class="token number">28.25</span>    <span class="token number">58.50</span>     <span class="token number">0.00</span>    <span class="token number">1.86</span>    <span class="token number">0.99</span>    <span class="token number">3.83</span>   <span class="token number">0.92</span>   <span class="token number">0.14</span>sdb               <span class="token number">0.08</span>    <span class="token number">15.77</span>    <span class="token number">0.68</span>    <span class="token number">9.95</span>    <span class="token number">21.93</span>   <span class="token number">193.02</span>    <span class="token number">40.43</span>     <span class="token number">0.27</span>   <span class="token number">25.60</span>   <span class="token number">36.17</span>   <span class="token number">24.88</span>   <span class="token number">6.47</span>   <span class="token number">6.88</span></code></pre><p>输出信息的含义：</p><ul><li>rrqm/s：每秒这个设备相关的读取请求有多少被 Merge 了（当系统调用需要读取数据的时候，VFS 将请求发到各个 FS，如果 FS 发现不同的读取请求读取的是相同 Block 的数据，FS 会将这个请求合并 Merge）；</li><li>wrqm/s：每秒这个设备相关的写入请求有多少被 Merge 了。</li><li>r/s：每秒读取的扇区数；</li><li>w/s：每秒写入的扇区数。</li><li>rKB/s：每秒发送到设备的读取请求数。</li><li>wKB/s：每秒向设备发出的写请求数。</li><li>avgrq-sz 平均请求扇区的大小</li><li> avgqu-sz 是平均请求队列的长度。毫无疑问，队列长度越短越好。    </li><li>await：  每一个 IO 请求的处理的平均时间（单位是微秒毫秒）。这里可以理解为 IO 的响应时间，一般地系统 IO 响应时间应该低于 5ms，如果大于 10ms 就比较大了。这个时间包括了队列时间和服务时间，也就是说，一般情况下，await 大于 svctm，它们的差值越小，则说明队列时间越短，反之差值越大，队列时间越长，说明系统出了问题。</li><li>svctm    表示平均每次设备 I/O 操作的服务时间（以毫秒为单位）。如果 svctm 的值与 await 很接近，表示几乎没有 I/O 等待，磁盘性能很好，如果 await 的值远高于 svctm 的值，则表示 I/O 队列等待太长，         系统上运行的应用程序将变慢。</li><li>% util： 在统计时间内所有处理 IO 时间，除以总共统计时间。例如，如果统计间隔 1 秒，该设备有 0.8 秒在处理 IO，而 0.2 秒闲置，那么该设备的 % util = 0.8/1 = 80%，所以该参数暗示了设备的繁忙程度。一般地，如果该参数是 100% 表示设备已经接近满负荷运行了（当然如果是多磁盘，即使 % util 是 100%，因为磁盘的并发能力，所以磁盘使用未必就到了瓶颈）。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;iostat-介绍&quot;&gt;&lt;a href=&quot;#iostat-介绍&quot; class=&quot;headerlink&quot; title=&quot;iostat 介绍&quot;&gt;&lt;/a&gt;iostat 介绍&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;iostat 命令&lt;/strong&gt; 被用于监视系统输入输出设备和 CPU 的使用情况。&lt;/p&gt;
&lt;p&gt;它的特点是汇报磁盘活动统计情况，同时也会汇报出 CPU 使用情况。&lt;/p&gt;
&lt;p&gt;同 vmstat 一样，iostat 也有一个弱点，就是它不能对某个进程进行深入分析，仅对系统的整体情况进行分析。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/categories/Linux/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="iostat" scheme="https://jueee.github.io/tags/iostat/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper 简要介绍及单机版安装</title>
    <link href="https://jueee.github.io/2020/12/2020-12-10-Zookeeper%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%8D%95%E6%9C%BA%E7%89%88%E5%AE%89%E8%A3%85/"/>
    <id>https://jueee.github.io/2020/12/2020-12-10-Zookeeper%E7%AE%80%E8%A6%81%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%8D%95%E6%9C%BA%E7%89%88%E5%AE%89%E8%A3%85/</id>
    <published>2020-12-16T00:00:00.000Z</published>
    <updated>2020-12-17T08:47:38.020Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Zookeeper-介绍"><a href="#Zookeeper-介绍" class="headerlink" title="Zookeeper 介绍"></a>Zookeeper 介绍</h3><p>ZooKeeper 是 Hadoop 的正式子项目，它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。</p><p>ZooKeeper 的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。</p><ul><li>官网：<span class="exturl" data-url="aHR0cHM6Ly96b29rZWVwZXIuYXBhY2hlLm9yZy9pbmRleC5odG1s">https://zookeeper.apache.org/index.html<i class="fa fa-external-link-alt"></i></span></li><li> 下载：<span class="exturl" data-url="aHR0cHM6Ly96b29rZWVwZXIuYXBhY2hlLm9yZy9yZWxlYXNlcy5odG1s">https://zookeeper.apache.org/releases.html<i class="fa fa-external-link-alt"></i></span></li><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS96b29rZWVwZXI=">https://github.com/apache/zookeeper<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h3 id="Zookeeper-单机版安装"><a href="#Zookeeper-单机版安装" class="headerlink" title="Zookeeper 单机版安装"></a>Zookeeper 单机版安装</h3><ol><li><p>下载</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz </code></pre></li><li><p>解压</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -xvf zookeeper-3.4.14.tar.gz</code></pre></li><li><p>修改配置文件 <code>zookeeper-3.4.14/conf/zoo.cfg </code></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">tickTime</span><span class="token operator">=</span><span class="token number">2000</span><span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/home/dir/zookeeper-3.4.14/zklog<span class="token assign-left variable">clientPort</span><span class="token operator">=</span><span class="token number">2181</span><span class="token assign-left variable">initLimit</span><span class="token operator">=</span><span class="token number">30</span><span class="token assign-left variable">syncLimit</span><span class="token operator">=</span><span class="token number">15</span><span class="token assign-left variable">maxClientCnxns</span><span class="token operator">=</span><span class="token number">1000</span></code></pre></li><li><p>启动服务端</p><pre class="language-bash" data-language="bash"><code class="language-bash">~/zookeeper-3.4.14/bin$ ./zkServer.sh start</code></pre></li><li><p>客户端连接</p><pre class="language-bash" data-language="bash"><code class="language-bash">~/zookeeper-3.4.14/bin$ ./zkCli.sh</code></pre><p>客户端远程连接</p><pre class="language-bash" data-language="bash"><code class="language-bash">~/zookeeper-3.4.14/bin$ ./zkCli.sh -server <span class="token number">192.168</span>.0.1:2181</code></pre></li></ol><h3 id="服务端常用命令"><a href="#服务端常用命令" class="headerlink" title="服务端常用命令"></a>服务端常用命令</h3><ul><li>启动 ZK 服务: sh bin/zkServer.sh start</li><li> 查看 ZK 服务状态: sh bin/zkServer.sh status</li><li> 停止 ZK 服务: sh bin/zkServer.sh stop</li><li> 重启 ZK 服务: sh bin/zkServer.sh restart</li></ul><h3 id="客户端常用命令"><a href="#客户端常用命令" class="headerlink" title="客户端常用命令"></a>客户端常用命令</h3><p>使用 zkCli.sh -server <strong>ip:port</strong> 连接到 ZooKeeper 服务，连接成功后，系统会输 出 ZooKeeper 的相关环境以及配置信息。 </p><p>命令行工具的一些简单操作如下:</p><ul><li><p>显示根目录下、文件：ls/ 使用 ls 命令来查看当前 ZooKeeper 中所包含的内容</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ls</span> /dubbo/com.alibaba.dubbo.monitor.MonitorService<span class="token punctuation">[</span>consumers, routers, providers, configurators<span class="token punctuation">]</span></code></pre></li><li><p>显示根目录下、文件：ls2 / 查看当前节点数据并能看到更新次数等数据</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ ls2 /dubbo/com.alibaba.dubbo.monitor.MonitorService<span class="token punctuation">[</span>consumers, routers, providers, configurators<span class="token punctuation">]</span>cZxid <span class="token operator">=</span> 0x27f017fae11ctime <span class="token operator">=</span> Wed Dec <span class="token number">16</span> <span class="token number">14</span>:03:48 CST <span class="token number">2020</span>mZxid <span class="token operator">=</span> 0x27f017fae11mtime <span class="token operator">=</span> Wed Dec <span class="token number">16</span> <span class="token number">14</span>:03:48 CST <span class="token number">2020</span>pZxid <span class="token operator">=</span> 0x27f017fae23cversion <span class="token operator">=</span> <span class="token number">4</span>dataVersion <span class="token operator">=</span> <span class="token number">0</span>aclVersion <span class="token operator">=</span> <span class="token number">0</span>ephemeralOwner <span class="token operator">=</span> 0x0dataLength <span class="token operator">=</span> <span class="token number">12</span>numChildren <span class="token operator">=</span> <span class="token number">4</span></code></pre></li><li><p>创建文件，并设置初始内容: create /zk “test” 创建一个新的 znode 节点 “ zk ” 以及与它关联的字符串 [-e] [-s] 【-e 零时节点】 【-s 顺序节点】</p></li><li><p>获取文件内容：get /zk 确认 znode 是否包含我们所创建的字符串 [watch【] watch 监听】</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ get /dubbo/com.alibaba.dubbo.monitor.MonitorService/consumers<span class="token number">10.110</span>.20.22cZxid <span class="token operator">=</span> 0x27f017fae1cctime <span class="token operator">=</span> Wed Dec <span class="token number">16</span> <span class="token number">14</span>:03:48 CST <span class="token number">2020</span>mZxid <span class="token operator">=</span> 0x27f017fae1cmtime <span class="token operator">=</span> Wed Dec <span class="token number">16</span> <span class="token number">14</span>:03:48 CST <span class="token number">2020</span>pZxid <span class="token operator">=</span> 0x27f017fae1ccversion <span class="token operator">=</span> <span class="token number">0</span>dataVersion <span class="token operator">=</span> <span class="token number">0</span>aclVersion <span class="token operator">=</span> <span class="token number">0</span>ephemeralOwner <span class="token operator">=</span> 0x0dataLength <span class="token operator">=</span> <span class="token number">12</span>numChildren <span class="token operator">=</span> <span class="token number">0</span></code></pre><ul><li>cZxid：节点创建时的 zxid</li><li>ctime：节点创建时间</li><li> mZxid：节点最近一次更新时的 zxid</li><li>mtime：节点最近一次更新的时间</li><li> cversion：子节点数据更新次数</li><li> dataVersion：本节点数据更新次数</li><li> aclVersion：节点 ACL (授权信息) 的更新次数</li><li> ephemeralOwner：如果该节点为临时节点，ephemeralOwner 值表示与该节点绑定的 session id. 如果该节点不是临时节点，ephemeralOwner 值为 0</li><li>dataLength：节点数据长度，本例中为 hello world 的长度</li><li> numChildren：子节点个数</li></ul></li><li><p>修改文件内容：set /zk “zkbak” 对 zk 所关联的字符串进行设置</p></li><li><p>删除文件：delete/zk 将刚才创建的 znode 删除，如果存在子节点删除失败</p></li><li><p>递归删除：rmr /zk 将刚才创建的 znode 删除，子节点同时删除</p></li><li><p>退出客户端：quit</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ quitQuitting<span class="token punctuation">..</span>.<span class="token number">2020</span>-12-16 <span class="token number">19</span>:14:08,550 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - INFO  <span class="token punctuation">[</span>main:ZooKeeper@684<span class="token punctuation">]</span> - Session: 0x3766a4749cc00e8 closed<span class="token number">2020</span>-12-16 <span class="token number">19</span>:14:08,550 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - INFO  <span class="token punctuation">[</span>main-EventThread:ClientCnxn<span class="token variable">$EventThread</span>@512<span class="token punctuation">]</span> - EventThread shut down</code></pre></li><li><p>帮助命令：help</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">help</span>ZooKeeper -server host:port cmd args        connect host:port        get path <span class="token punctuation">[</span>watch<span class="token punctuation">]</span>        <span class="token function">ls</span> path <span class="token punctuation">[</span>watch<span class="token punctuation">]</span>        <span class="token builtin class-name">set</span> path data <span class="token punctuation">[</span>version<span class="token punctuation">]</span>        rmr path        delquota <span class="token punctuation">[</span>-n<span class="token operator">|</span>-b<span class="token punctuation">]</span> path        quit        printwatches on<span class="token operator">|</span>off        create <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> path data acl        <span class="token function">stat</span> path <span class="token punctuation">[</span>watch<span class="token punctuation">]</span>        close        ls2 path <span class="token punctuation">[</span>watch<span class="token punctuation">]</span>        <span class="token function">history</span>        listquota path        setAcl path acl        getAcl path        <span class="token function">sync</span> path        redo cmdno        addauth scheme auth        delete path <span class="token punctuation">[</span>version<span class="token punctuation">]</span>        setquota -n<span class="token operator">|</span>-b val path</code></pre></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Zookeeper-介绍&quot;&gt;&lt;a href=&quot;#Zookeeper-介绍&quot; class=&quot;headerlink&quot; title=&quot;Zookeeper 介绍&quot;&gt;&lt;/a&gt;Zookeeper 介绍&lt;/h3&gt;&lt;p&gt;ZooKeeper 是 Hadoop 的正式子项目，它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。&lt;/p&gt;
&lt;p&gt;ZooKeeper 的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官网：&lt;a href=&quot;https://zookeeper.apache.org/index.html&quot;&gt;https://zookeeper.apache.org/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; 下载：&lt;a href=&quot;https://zookeeper.apache.org/releases.html&quot;&gt;https://zookeeper.apache.org/releases.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub：&lt;a href=&quot;https://github.com/apache/zookeeper&quot;&gt;https://github.com/apache/zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/categories/Apache/Zookeeper/"/>
    
    
    <category term="Apache" scheme="https://jueee.github.io/tags/Apache/"/>
    
    <category term="Zookeeper" scheme="https://jueee.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 通过 Druid 集成 JPA 数据源</title>
    <link href="https://jueee.github.io/2020/12/2020-12-15-SpringBoot%E9%80%9A%E8%BF%87Druid%E9%9B%86%E6%88%90JPA%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <id>https://jueee.github.io/2020/12/2020-12-15-SpringBoot%E9%80%9A%E8%BF%87Druid%E9%9B%86%E6%88%90JPA%E6%95%B0%E6%8D%AE%E6%BA%90/</id>
    <published>2020-12-15T00:00:00.000Z</published>
    <updated>2020-12-16T01:54:18.732Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JPA-介绍"><a href="#JPA-介绍" class="headerlink" title="JPA 介绍"></a>JPA 介绍</h3><p>JPA 顾名思义就是 Java Persistence API 的意思，是 JDK 5.0 注解或 XML 描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中。</p><p>JPA 具有如下优势：</p><ol><li><p><strong>标准化</strong></p><p>JPA 是 JCP 组织发布的 Java EE 标准之一，因此任何声称符合 JPA 标准的框架都遵循同样的架构，提供相同的访问 API，这保证了基于 JPA 开发的企业应用能够经过少量的修改就能够在不同的 JPA 框架下运行。</p></li><li><p><strong>容器级特性的支持</strong></p><p>JPA 框架中支持大数据集、事务、并发等容器级事务，这使得 JPA 超越了简单持久化框架的局限，在企业应用发挥更大的作用。</p></li><li><p><strong>简单方便</strong></p><p>JPA 的主要目标之一就是提供更加简单的编程模型：在 JPA 框架下创建实体和创建 Java 类一样简单，没有任何的约束和限制，只需要使用 javax.persistence.Entity 进行注释，JPA 的框架和接口也都非常简单，没有太多特别的规则和设计模式的要求，开发者可以很容易的掌握。JPA 基于非侵入式原则设计，因此可以很容易的和其它框架或者容器集成。</p></li><li><p><strong>查询能力</strong></p><p>JPA 的查询语言是面向对象而非面向数据库的，它以面向对象的自然语法构造查询语句，可以看成是 Hibernate HQL 的等价物。JPA 定义了独特的 JPQL（Java Persistence Query Language），JPQL 是 EJB QL 的一种扩展，它是针对实体的一种查询语言，操作对象是实体，而不是关系数据库的表，而且能够支持批量更新和修改、JOIN、GROUP BY、HAVING 等通常只有 SQL 才能够提供的高级查询特性，甚至还能够支持子查询。</p></li><li><p><strong>高级特性</strong></p><p>JPA 中能够支持面向对象的高级特性，如类之间的继承、多态和类之间的复杂关系，这样的支持能够让开发者最大限度的使用面向对象的模型设计企业应用，而不需要自行处理这些特性在关系数据库的持久化。</p></li></ol><a id="more"></a><h3 id="maven-配置"><a href="#maven-配置" class="headerlink" title="maven 配置"></a>maven 配置</h3><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-jpa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="配置单数据源"><a href="#配置单数据源" class="headerlink" title="配置单数据源"></a>配置单数据源</h3><ol><li><p>配置文件</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.datasource.driverClassName</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/test?serverTimezone=UTC</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span></code></pre></li><li><p>Bean</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Id</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>Mapper</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">Query</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"SELECT t FROM User t WHERE username = :username"</span><span class="token punctuation">)</span>    <span class="token class-name">User</span> <span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>Service</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">findUserByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>测试类</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span>user<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// admin-小章鱼</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// admin</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ol><h3 id="配置多数据源"><a href="#配置多数据源" class="headerlink" title="配置多数据源"></a>配置多数据源</h3><p><strong>注意点</strong>：</p><ul><li>@Primary 注解的使用</li><li>目录结构中，JPA 目录和实体类目录建议根据多数据源的配置进行分层，因为在多数据源配置中存在相关配置</li></ul><p>相关配置如下：</p><ol><li><p>配置文件</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.datasource.first.driverClassName</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.first.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://127.0.0.1:3306/vuedb?serverTimezone=UTC</span><span class="token attr-name">spring.datasource.first.username</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span><span class="token attr-name">spring.datasource.first.password</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span><span class="token attr-name">spring.datasource.second.driverClassName</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.second.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC</span><span class="token attr-name">spring.datasource.second.username</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span><span class="token attr-name">spring.datasource.second.password</span><span class="token punctuation">=</span><span class="token attr-value">xxx</span></code></pre></li><li><p>多数据源配置：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Primary</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDataSourceConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.first"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"firstDataSource"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">firstDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.second"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"secondDataSource"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">secondDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><div class="note warning"><p>多数据源配置时，一定要区分主数据源和其他数据源。所以在主数据源初始化时一定要加上注解 @Peimary，其余数据源初始化不可以使用这个注解，否则报错。</p></div></li><li><p>对应不同的数据源，需要匹配不同的 JPA</p><p>主数据源 primary JPA 配置如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Qualifier</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">HibernateProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">HibernateSettings</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">JpaProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">EntityManagerFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Primary</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">EnableJpaRepositories</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">JpaTransactionManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">LocalContainerEntityManagerFactoryBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span></span><span class="token class-name">PlatformTransactionManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">EntityManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableTransactionManagement</span><span class="token annotation punctuation">@EnableJpaRepositories</span><span class="token punctuation">(</span>        entityManagerFactoryRef <span class="token operator">=</span> <span class="token string">"entityManagerFactoryFirst"</span><span class="token punctuation">,</span>        transactionManagerRef <span class="token operator">=</span> <span class="token string">"transactionManagerFirst"</span><span class="token punctuation">,</span>        basePackages <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"com.jueee.druid.mapper.first"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//设置Repository所在位置</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JpaConfigFirst</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">JpaProperties</span> jpaProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">HibernateProperties</span> hibernateProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"firstDataSource"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">DataSource</span> firstDataSource<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"entityManagerFirst"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">EntityManager</span> <span class="token function">entityManager</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">entityManagerFactoryFirst</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createEntityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"entityManagerFactoryFirst"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">LocalContainerEntityManagerFactoryBean</span> <span class="token function">entityManagerFactoryFirst</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> builder                <span class="token punctuation">.</span><span class="token function">dataSource</span><span class="token punctuation">(</span>firstDataSource<span class="token punctuation">)</span><span class="token comment">// 设置数据源</span>                <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>jpaProperties<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 设置jpa配置</span>                <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span><span class="token function">getVendorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 设置hibernate配置</span>                <span class="token punctuation">.</span><span class="token function">packages</span><span class="token punctuation">(</span><span class="token string">"com.jueee.druid.bean.first"</span><span class="token punctuation">)</span> <span class="token comment">//设置实体类所在位置</span>                <span class="token punctuation">.</span><span class="token function">persistenceUnit</span><span class="token punctuation">(</span><span class="token string">"firstPersistenceUnit"</span><span class="token punctuation">)</span><span class="token comment">// 设置持久化单元名，用于@PersistenceContext注解获取EntityManager时指定数据源</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span> <span class="token function">getVendorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hibernateProperties<span class="token punctuation">.</span><span class="token function">determineHibernateProperties</span><span class="token punctuation">(</span>jpaProperties<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HibernateSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"transactionManagerFirst"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">PlatformTransactionManager</span> <span class="token function">transactionManagerFirst</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JpaTransactionManager</span><span class="token punctuation">(</span><span class="token function">entityManagerFactoryFirst</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><div class="note warning"><p>主数据源 JPA 配置中，相对应的注入 bean 一定要加上注解 @Primary，否则报错！</p></div><p>第二数据源 JPA 配置如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Qualifier</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">HibernateProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">HibernateSettings</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">JpaProperties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">EntityManagerFactoryBuilder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Primary</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">EnableJpaRepositories</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">JpaTransactionManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span><span class="token class-name">LocalContainerEntityManagerFactoryBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span></span><span class="token class-name">PlatformTransactionManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">EntityManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableTransactionManagement</span><span class="token annotation punctuation">@EnableJpaRepositories</span><span class="token punctuation">(</span>        entityManagerFactoryRef <span class="token operator">=</span> <span class="token string">"entityManagerFactorySecond"</span><span class="token punctuation">,</span>        transactionManagerRef <span class="token operator">=</span> <span class="token string">"transactionManagerSecond"</span><span class="token punctuation">,</span>        basePackages <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"com.jueee.druid.mapper.second"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//设置Repository所在位置</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JpaConfigSecond</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">JpaProperties</span> jpaProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">HibernateProperties</span> hibernateProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"secondDataSource"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">DataSource</span> secondDataSource<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"entityManagerSecond"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">EntityManager</span> <span class="token function">entityManager</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">entityManagerFactorySecond</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createEntityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"entityManagerFactorySecond"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">LocalContainerEntityManagerFactoryBean</span> <span class="token function">entityManagerFactorySecond</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> builder                <span class="token punctuation">.</span><span class="token function">dataSource</span><span class="token punctuation">(</span>secondDataSource<span class="token punctuation">)</span><span class="token comment">// 设置数据源</span>                <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>jpaProperties<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 设置jpa配置</span>                <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span><span class="token function">getVendorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 设置hibernate配置</span>                <span class="token punctuation">.</span><span class="token function">packages</span><span class="token punctuation">(</span><span class="token string">"com.jueee.druid.bean.second"</span><span class="token punctuation">)</span> <span class="token comment">//设置实体类所在位置</span>                <span class="token punctuation">.</span><span class="token function">persistenceUnit</span><span class="token punctuation">(</span><span class="token string">"secondPersistenceUnit"</span><span class="token punctuation">)</span><span class="token comment">// 设置持久化单元名，用于@PersistenceContext注解获取EntityManager时指定数据源</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token class-name">Map</span> <span class="token function">getVendorProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hibernateProperties<span class="token punctuation">.</span><span class="token function">determineHibernateProperties</span><span class="token punctuation">(</span>jpaProperties<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HibernateSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"transactionManagerSecond"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">PlatformTransactionManager</span> <span class="token function">transactionManagerSecond</span><span class="token punctuation">(</span><span class="token class-name">EntityManagerFactoryBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JpaTransactionManager</span><span class="token punctuation">(</span><span class="token function">entityManagerFactorySecond</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>Bean</p><p><code>com.jueee.druid.bean.first.User</code> 类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Id</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><code>com.jueee.druid.bean.second.Book</code> 类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Id</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Book</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> author<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> description<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>Mapper</p><p><code>com.jueee.druid.mapper.first</code> 类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>first<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">Query</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"SELECT t FROM User t WHERE username = :username"</span><span class="token punctuation">)</span>    <span class="token class-name">User</span> <span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><code>com.jueee.druid.mapper.second</code> 类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>jueee<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>second<span class="token punctuation">.</span></span><span class="token class-name">Book</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">Query</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BookMapper</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"SELECT t FROM Book t WHERE title = :title"</span><span class="token punctuation">)</span>    <span class="token class-name">Book</span> <span class="token function">findUserByTitle</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>Service 和 Test 与单数据源一致，不再赘述。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;JPA-介绍&quot;&gt;&lt;a href=&quot;#JPA-介绍&quot; class=&quot;headerlink&quot; title=&quot;JPA 介绍&quot;&gt;&lt;/a&gt;JPA 介绍&lt;/h3&gt;&lt;p&gt;JPA 顾名思义就是 Java Persistence API 的意思，是 JDK 5.0 注解或 XML 描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中。&lt;/p&gt;
&lt;p&gt;JPA 具有如下优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;标准化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JPA 是 JCP 组织发布的 Java EE 标准之一，因此任何声称符合 JPA 标准的框架都遵循同样的架构，提供相同的访问 API，这保证了基于 JPA 开发的企业应用能够经过少量的修改就能够在不同的 JPA 框架下运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;容器级特性的支持&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JPA 框架中支持大数据集、事务、并发等容器级事务，这使得 JPA 超越了简单持久化框架的局限，在企业应用发挥更大的作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;简单方便&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JPA 的主要目标之一就是提供更加简单的编程模型：在 JPA 框架下创建实体和创建 Java 类一样简单，没有任何的约束和限制，只需要使用 javax.persistence.Entity 进行注释，JPA 的框架和接口也都非常简单，没有太多特别的规则和设计模式的要求，开发者可以很容易的掌握。JPA 基于非侵入式原则设计，因此可以很容易的和其它框架或者容器集成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查询能力&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JPA 的查询语言是面向对象而非面向数据库的，它以面向对象的自然语法构造查询语句，可以看成是 Hibernate HQL 的等价物。JPA 定义了独特的 JPQL（Java Persistence Query Language），JPQL 是 EJB QL 的一种扩展，它是针对实体的一种查询语言，操作对象是实体，而不是关系数据库的表，而且能够支持批量更新和修改、JOIN、GROUP BY、HAVING 等通常只有 SQL 才能够提供的高级查询特性，甚至还能够支持子查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;高级特性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JPA 中能够支持面向对象的高级特性，如类之间的继承、多态和类之间的复杂关系，这样的支持能够让开发者最大限度的使用面向对象的模型设计企业应用，而不需要自行处理这些特性在关系数据库的持久化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaJar" scheme="https://jueee.github.io/categories/Java/JavaJar/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/categories/Java/SpringBoot/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="JavaJar" scheme="https://jueee.github.io/tags/JavaJar/"/>
    
    <category term="Alibaba" scheme="https://jueee.github.io/tags/Alibaba/"/>
    
    <category term="druid" scheme="https://jueee.github.io/tags/druid/"/>
    
    <category term="JPA" scheme="https://jueee.github.io/tags/JPA/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 性能优化命令 Explain 的使用</title>
    <link href="https://jueee.github.io/2020/12/2020-12-14-MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%91%BD%E4%BB%A4Explain%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://jueee.github.io/2020/12/2020-12-14-MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%91%BD%E4%BB%A4Explain%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-12-14T00:00:00.000Z</published>
    <updated>2020-12-14T06:29:36.485Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL 提供了一个 Explain 命令，它可以对 <code>SELECT</code> 语句进行分析，并输出 <code>SELECT</code> 执行的详细信息，以供开发人员针对性优化.</p><p>EXPLAIN 命令用法十分简单，在 SELECT 语句前加上 Explain 就可以了，例如:</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">EXPLAIN SELECT * from user_info WHERE id &lt; 300;</code></pre><a id="more"></a><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>EXPLAIN 命令的输出内容大致如下:</p><pre class="language-bash" data-language="bash"><code class="language-bash">mysql<span class="token operator">&gt;</span> explain <span class="token keyword">select</span> * from user_info where <span class="token function">id</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">\</span>G*************************** <span class="token number">1</span>. row ***************************           id: <span class="token number">1</span>  select_type: SIMPLE        table: user_info         type: constpossible_keys: PRIMARY          key: PRIMARY      key_len: <span class="token number">8</span>          ref: const         rows: <span class="token number">1</span>        Extra:<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="字段含义"><a href="#字段含义" class="headerlink" title="字段含义"></a>字段含义</h3><p>各列的含义如下:</p><ul><li>id: SELECT 查询的标识符。每个 SELECT 都会自动分配一个唯一的标识符.</li><li>select_type: SELECT 查询的类型.</li><li>table: 查询的是哪个表</li><li> partitions: 匹配的分区</li><li> type: join 类型</li><li> possible_keys: 此次查询中可能选用的索引</li><li> key: 此次查询中确切使用到的索引.</li><li>ref: 哪个字段或常数与 key 一起被使用</li><li> rows: 显示此查询一共扫描了多少行。这个是一个估计值.</li><li>filtered: 表示此查询条件所过滤的数据的百分比</li><li> extra: 额外的信息</li></ul><h4 id="select-type"><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h4><p><code>select_type</code> 表示了查询的类型，它的常用取值有:</p><ul><li>SIMPLE, 表示此查询不包含 UNION 查询或子查询</li><li> PRIMARY, 表示此查询是最外层的查询</li><li> UNION, 表示此查询是 UNION 的第二或随后的查询</li><li> DEPENDENT UNION, UNION 中的第二个或后面的查询语句，取决于外面的查询</li><li> UNION RESULT, UNION 的结果</li><li> SUBQUERY, 子查询中的第一个 SELECT</li><li>DEPENDENT SUBQUERY: 子查询中的第一个 SELECT, 取决于外面的查询。即子查询依赖于外层查询的结果.</li></ul><p>如果我们使用了 UNION 查询，那么 EXPLAIN 输出 的结果类似如下：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; EXPLAIN (SELECT * FROM user_info  WHERE id IN (1, 2, 3)) UNION (SELECT * FROM user_info WHERE id IN (3, 4, 5));+----+--------------+------------+-------+---------------+---------+---------+------+------+-------------+| id | select_type  | table      | type  | possible_keys | key     | key_len | ref  | rows | Extra       |+----+--------------+------------+-------+---------------+---------+---------+------+------+-------------+|  1 | PRIMARY      | user_info  | range | PRIMARY       | PRIMARY | 8       | NULL |    3 | Using where ||  2 | UNION        | user_info  | range | PRIMARY       | PRIMARY | 8       | NULL |    3 | Using where || NULL | UNION RESULT | &lt;union1,2&gt; | ALL   | NULL          | NULL    | NULL    | NULL | NULL |             |+----+--------------+------------+-------+---------------+---------+---------+------+------+-------------+3 rows in set (0.01 sec)</code></pre><h4 id="table"><a href="#table" class="headerlink" title="table"></a>table</h4><p>表示查询涉及的表或衍生表</p><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p><code>type</code> 字段比较重要，它提供了判断查询是否高效的重要依据依据。通过 <code>type</code> 字段，我们判断此次查询是 <code>全表扫描</code> 还是 <code>索引扫描</code> 等。</p><h5 id="常用类型"><a href="#常用类型" class="headerlink" title="常用类型"></a>常用类型</h5><p>type 常用的取值有:</p><ul><li><code>system</code>: 表中只有一条数据。这个类型是特殊的 <code>const</code> 类型.</li><li><code>const</code>: 针对主键或唯一索引的等值查询扫描，最多只返回一行数据. const 查询速度非常快，因为它仅仅读取一次即可.</li><li><code>eq_ref</code>: 此类型通常出现在多表的 join 查询，表示对于前表的每一个结果，都只能匹配到后表的一行结果。并且查询的比较操作通常是 <code>=</code>, 查询效率较高. </li><li><code>ref</code>: 此类型通常出现在多表的 join 查询，针对于非唯一或非主键索引，或者是使用了 <code>最左前缀</code> 规则索引的查询.</li><li><code>range</code>: 表示使用索引范围查询，通过索引字段范围获取表中部分数据记录。这个类型通常出现在 =, &lt;&gt;,&gt;, &gt;=, &lt;, &lt;=, IS NULL, &lt;=&gt;, BETWEEN, IN () 操作中.<br>当 <code>type</code> 是 <code>range</code> 时，那么 EXPLAIN 输出的 <code>ref</code> 字段为 NULL, 并且 <code>key_len</code> 字段是此次查询中使用到的索引的最长的那个.</li><li><code>index</code>: 表示全索引扫描 (full index scan), 和 ALL 类型类似，只不过 ALL 类型是全表扫描，而 index 类型则仅仅扫描所有的索引，而不扫描数据.<br><code>index</code> 类型通常出现在：所要查询的数据直接在索引树中就可以获取到，而不需要扫描数据。当是这种情况时，Extra 字段 会显示 <code>Using index</code>.</li><li>ALL: 表示全表扫描，这个类型的查询是性能最差的查询之一。通常来说，我们的查询不应该出现 ALL 类型的查询，因为这样的查询在数据量大的情况下，对数据库的性能是巨大的灾难。如一个查询是 ALL 类型查询，那么一般来说可以对相应的字段添加索引来避免.</li></ul><h5 id="性能比较"><a href="#性能比较" class="headerlink" title="性能比较"></a>性能比较</h5><p>通常来说，不同的 type 类型的性能关系如下:</p><p><code>ALL &lt; index &lt; range ~ index_merge &lt; ref &lt; eq_ref &lt; const &lt; system</code></p><ul><li><code>ALL</code> 类型因为是全表扫描，因此在相同的查询条件下，它是速度最慢的.</li><li><code>index</code> 类型的查询虽然不是全表扫描，但是它扫描了所有的索引，因此比 ALL 类型的稍快.</li><li> 后面的几种类型都是利用了索引来查询数据，因此可以过滤部分或大部分数据，因此查询效率就比较高了.</li></ul><h4 id="possible-keys"><a href="#possible-keys" class="headerlink" title="possible_keys"></a>possible_keys</h4><p><code>possible_keys</code> 表示 MySQL 在查询时，能够使用到的索引。注意，即使有些索引在 <code>possible_keys</code> 中出现，但是并不表示此索引会真正地被 MySQL 使用到. MySQL 在查询时具体使用了哪些索引，由 <code>key</code> 字段决定.</p><h4 id="key"><a href="#key" class="headerlink" title="key"></a>key</h4><p>此字段是 MySQL 在当前查询时所真正使用到的索引.</p><h4 id="key-len"><a href="#key-len" class="headerlink" title="key_len"></a>key_len</h4><p>表示查询优化器使用了索引的字节数。这个字段可以评估组合索引是否完全被使用，或只有最左部分字段被使用到.<br>key_len 的计算规则如下:</p><ul><li>字符串<ul><li> char (n): n 字节长度</li><li> varchar (n): 如果是 utf8 编码，则是 3 <em>n + 2 字节；如果是 utf8mb4 编码，则是 4</em> n + 2 字节.</li></ul></li><li> 数值类型:<ul><li>TINYINT: 1 字节</li><li> SMALLINT: 2 字节</li><li> MEDIUMINT: 3 字节</li><li> INT: 4 字节</li><li> BIGINT: 8 字节</li></ul></li><li>时间类型<ul><li> DATE: 3 字节</li><li> TIMESTAMP: 4 字节</li><li> DATETIME: 8 字节</li></ul></li><li>字段属性: NULL 属性 占用一个字节。如果一个字段是 NOT NULL 的，则没有此属性.</li></ul><h4 id="rows"><a href="#rows" class="headerlink" title="rows"></a>rows</h4><p>rows 也是一个重要的字段. MySQL 查询优化器根据统计信息，估算 SQL 要查找到结果集需要扫描读取的数据行数.<br>这个值非常直观显示 SQL 的效率好坏，原则上 rows 越少越好.</p><h4 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h4><p>EXplain 中的很多额外的信息会在 Extra 字段显示，常见的有以下几种内容:</p><ul><li><p>Using filesort</p><p>当 Extra 中有 <code>Using filesort</code> 时，表示 MySQL 需额外的排序操作，不能通过索引顺序达到排序效果。一般有 <code>Using filesort</code>, 都建议优化去掉，因为这样的查询 CPU 资源消耗大.</p></li><li><p>Using index</p><p>"覆盖索引扫描", 表示查询在索引树中就可查找所需数据，不用扫描表数据文件，往往说明性能不错</p></li><li><p>Using temporary</p><p>查询有使用临时表，一般出现于排序，分组和多表 join 的情况，查询效率不高，建议优化.</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;MySQL 提供了一个 Explain 命令，它可以对 &lt;code&gt;SELECT&lt;/code&gt; 语句进行分析，并输出 &lt;code&gt;SELECT&lt;/code&gt; 执行的详细信息，以供开发人员针对性优化.&lt;/p&gt;
&lt;p&gt;EXPLAIN 命令用法十分简单，在 SELECT 语句前加上 Explain 就可以了，例如:&lt;/p&gt;
&lt;pre class=&quot;language-mysql&quot; data-language=&quot;mysql&quot;&gt;&lt;code class=&quot;language-mysql&quot;&gt;EXPLAIN SELECT * from user_info WHERE id &amp;lt; 300;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="MySQL" scheme="https://jueee.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://jueee.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Vue 可拖拽组件 vue-grid-layout 嵌套页面</title>
    <link href="https://jueee.github.io/2020/12/2020-12-08-Vue%E5%8F%AF%E6%8B%96%E6%8B%BD%E7%BB%84%E4%BB%B6vue-grid-layout%E5%B5%8C%E5%A5%97%E9%A1%B5%E9%9D%A2/"/>
    <id>https://jueee.github.io/2020/12/2020-12-08-Vue%E5%8F%AF%E6%8B%96%E6%8B%BD%E7%BB%84%E4%BB%B6vue-grid-layout%E5%B5%8C%E5%A5%97%E9%A1%B5%E9%9D%A2/</id>
    <published>2020-12-08T00:00:00.000Z</published>
    <updated>2020-12-08T10:52:48.188Z</updated>
    
    <content type="html"><![CDATA[<h3 id="嵌套页面方式"><a href="#嵌套页面方式" class="headerlink" title="嵌套页面方式"></a>嵌套页面方式</h3><ul><li>普通嵌套</li><li> ifream 嵌套</li></ul><a id="more"></a><h3 id="普通嵌套"><a href="#普通嵌套" class="headerlink" title="普通嵌套"></a>普通嵌套</h3><ol><li><p>vue-grid-layout 设置：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-layout</span>            <span class="token attr-name">:layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layoutData<span class="token punctuation">"</span></span>            <span class="token attr-name">:col-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span>            <span class="token attr-name">:row-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-resizable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-mirrored</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">:vertical-compact</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:auto-size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[10, 10]<span class="token punctuation">"</span></span>            <span class="token attr-name">:use-css-transforms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>              <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>              <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>              <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>              <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>              <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>              <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>              <span class="token attr-name">@resize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resizeEvent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid0</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid0</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 5<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>indexGrid5</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>indexGrid5</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span></code></pre></li><li><p>引入页面</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> VueGridLayout <span class="token keyword">from</span> <span class="token string">'vue-grid-layout'</span><span class="token punctuation">;</span><span class="token keyword">import</span> indexGrid0 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid0'</span><span class="token keyword">import</span> indexGrid1 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid1'</span><span class="token keyword">import</span> indexGrid2 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid2'</span><span class="token keyword">import</span> indexGrid3 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid3'</span><span class="token keyword">import</span> indexGrid4 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid4'</span><span class="token keyword">import</span> indexGrid5 <span class="token keyword">from</span> <span class="token string">'@/views/dashboard/index-grid5'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  components<span class="token operator">:</span> <span class="token punctuation">{</span>      GridLayout<span class="token operator">:</span> VueGridLayout<span class="token punctuation">.</span>GridLayout<span class="token punctuation">,</span>      GridItem<span class="token operator">:</span> VueGridLayout<span class="token punctuation">.</span>GridItem<span class="token punctuation">,</span>      <span class="token string">'indexGrid0'</span><span class="token operator">:</span> indexGrid0<span class="token punctuation">,</span>      <span class="token string">'indexGrid1'</span><span class="token operator">:</span> indexGrid1<span class="token punctuation">,</span>      <span class="token string">'indexGrid2'</span><span class="token operator">:</span> indexGrid2<span class="token punctuation">,</span>      <span class="token string">'indexGrid3'</span><span class="token operator">:</span> indexGrid3<span class="token punctuation">,</span>      <span class="token string">'indexGrid4'</span><span class="token operator">:</span> indexGrid4<span class="token punctuation">,</span>      <span class="token string">'indexGrid5'</span><span class="token operator">:</span> indexGrid5  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre></li><li><p>页面示例</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>11111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre></li></ol><h3 id="ifream-嵌套"><a href="#ifream-嵌套" class="headerlink" title="ifream 嵌套"></a>ifream 嵌套</h3><ol><li><p>vue-grid-layout 设置：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-layout</span>             <span class="token attr-name">:layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layoutData<span class="token punctuation">"</span></span>             <span class="token attr-name">:col-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span>             <span class="token attr-name">:row-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>             <span class="token attr-name">:is-draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token attr-name">:is-resizable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token attr-name">:is-mirrored</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>             <span class="token attr-name">:vertical-compact</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token attr-name">:auto-size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token attr-name">:margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[10, 10]<span class="token punctuation">"</span></span>             <span class="token attr-name">:use-css-transforms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>               <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>               <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>               <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>               <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>               <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>               <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>               <span class="token attr-name">@resize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resizeEvent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./indexGrid0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 1<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./indexGrid1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 2<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./indexGrid2<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 3<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./indexGrid3<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 4<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./indexGrid4<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i == 5<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-layout</span><span class="token punctuation">&gt;</span></span>  </code></pre><p>或者：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>                   <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>                   <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>                   <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>                   <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>                   <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">@resize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resizeEvent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>widget-title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{ item.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.src<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>layoutData <span class="token operator">=</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"System Information"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"./indexGrid0"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"System Resources"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"./indexGrid1"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"Scanning Statistics"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"./indexGrid2"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"Threats Distribution - Last 24 Hours"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"./indexGrid3"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"Pending Job Statistics"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"./indexGrid4"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token operator">:</span><span class="token string">"Baidu"</span><span class="token punctuation">,</span><span class="token string">"src"</span><span class="token operator">:</span><span class="token string">"https://www.baidu.com/"</span><span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></li><li><p>路由配置 <code>src\router\index.js</code>：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> constantRouterMap <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid0'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid0'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid1'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid2'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid2'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid3'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid3'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid4'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid4'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token operator">:</span> <span class="token string">'/indexGrid5'</span><span class="token punctuation">,</span>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/dashboard/index-grid5'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    hidden<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">]</span></code></pre></li><li><p>页面效果：</p><p><img src="/images/2020/12/image-20201208155342443.png" alt="image-20201208155342443" loading="lazy"></p></li></ol><h4 id="iframe-按钮刷新"><a href="#iframe-按钮刷新" class="headerlink" title="iframe 按钮刷新"></a>iframe 按钮刷新</h4><p>增加刷新按钮：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>                   <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>                   <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>                   <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>                   <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>                   <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">@resize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resizeEvent<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refresh-button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refreshPage(item.i)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-icon-refresh<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.src<span class="token punctuation">"</span></span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`iframe${(item.i)}`<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span></code></pre><p>对应 JS 方法：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">refreshPage</span><span class="token punctuation">(</span><span class="token parameter">pageNum</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> _iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'iframe'</span><span class="token operator">+</span>pageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>    _iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><div class="note info"><p>Vue 的标签属性 label 中字符串拼接变量：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`参数${(index + 1)}类型`<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index,) in props.row.params<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;嵌套页面方式&quot;&gt;&lt;a href=&quot;#嵌套页面方式&quot; class=&quot;headerlink&quot; title=&quot;嵌套页面方式&quot;&gt;&lt;/a&gt;嵌套页面方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;普通嵌套&lt;/li&gt;
&lt;li&gt; ifream 嵌套&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jueee.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jueee.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch 集成 Spring 之 RestHighLevelClient 示例</title>
    <link href="https://jueee.github.io/2020/12/2020-12-06-ElasticSearch%E9%9B%86%E6%88%90Spring%E4%B9%8BRestHighLevelClient%E7%A4%BA%E4%BE%8B/"/>
    <id>https://jueee.github.io/2020/12/2020-12-06-ElasticSearch%E9%9B%86%E6%88%90Spring%E4%B9%8BRestHighLevelClient%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-12-06T00:00:00.000Z</published>
    <updated>2020-12-09T05:57:08.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RestHighLevelClient"><a href="#RestHighLevelClient" class="headerlink" title="RestHighLevelClient"></a>RestHighLevelClient</h3><p>RestHighLevelClient 是官方指定的连接 API。</p><p>另外一个是 TransportClient，但是 TransportClient 这个是已经废弃不用的，所以会在 ES8.0 之后完全移除，也就是说 8.0 之后就无法使用了。</p><p>引入依赖：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${elasticsearch.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${elasticsearch.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><a id="more"></a><h3 id="配置连接"><a href="#配置连接" class="headerlink" title="配置连接"></a>配置连接</h3><p>配置文件 <code>application.properties</code>：</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.data.elasticsearch.host</span><span class="token punctuation">=</span><span class="token attr-value">192.168.10.31:192.168.10.32:192.168.10.33:192.168.10.34</span><span class="token attr-name">spring.data.elasticsearch.port</span><span class="token punctuation">=</span><span class="token attr-value">9200</span><span class="token attr-name">spring.data.elasticsearch.username</span><span class="token punctuation">=</span><span class="token attr-value">elastic</span><span class="token attr-name">spring.data.elasticsearch.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span></code></pre><p>配置 Java 类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpHost</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>auth<span class="token punctuation">.</span></span><span class="token class-name">AuthScope</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>auth<span class="token punctuation">.</span></span><span class="token class-name">UsernamePasswordCredentials</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">CredentialsProvider</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">BasicCredentialsProvider</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestHighLevelClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">DisposableBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">FactoryBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">InitializingBean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticsearchConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RestHighLevelClient</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">InitializingBean</span><span class="token punctuation">,</span> <span class="token class-name">DisposableBean</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> LOGGER <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">ElasticsearchConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.data.elasticsearch.host}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.data.elasticsearch.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.data.elasticsearch.username}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.data.elasticsearch.password}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">RestHighLevelClient</span> restHighLevelClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Closing elasticSearch client"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>restHighLevelClient <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                restHighLevelClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            LOGGER<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Error closing ElasticSearch client: "</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">RestHighLevelClient</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> restHighLevelClient<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RestHighLevelClient</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">buildClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token class-name">CredentialsProvider</span> credentialsProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicCredentialsProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        credentialsProvider<span class="token punctuation">.</span><span class="token function">setCredentials</span><span class="token punctuation">(</span><span class="token class-name">AuthScope</span><span class="token punctuation">.</span>ANY<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordCredentials</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HttpHost</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hostArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">[</span>host<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> httpHost <span class="token operator">:</span> host<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            hostArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span>httpHost<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>            index<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        restHighLevelClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span><span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>hostArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHttpClientConfigCallback</span><span class="token punctuation">(</span>                httpClientBuilder <span class="token operator">-&gt;</span> httpClientBuilder<span class="token punctuation">.</span><span class="token function">setDefaultCredentialsProvider</span><span class="token punctuation">(</span>credentialsProvider<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"elasticSearch client buildClient..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>引入 RestHighLevelClient</p>   <pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">RestHighLevelClient</span> restHighLevelClient<span class="token punctuation">;</span></code></pre><h3 id="索引相关"><a href="#索引相关" class="headerlink" title="索引相关"></a>索引相关</h3><h4 id="判断索引是否存在"><a href="#判断索引是否存在" class="headerlink" title="判断索引是否存在"></a>判断索引是否存在</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">GetIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetIndexRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> exists <span class="token operator">=</span> restHighLevelClient<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="列出所有索引"><a href="#列出所有索引" class="headerlink" title="列出所有索引"></a>列出所有索引</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">GetAliasesRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetAliasesRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">GetAliasesResponse</span> getAliasesResponse <span class="token operator">=</span>  restHighLevelClient<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAlias</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">AliasMetaData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> getAliasesResponse<span class="token punctuation">.</span><span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> indices <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">CreateIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateIndexRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>request<span class="token punctuation">.</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token class-name">Settings</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"index.number_of_replicas"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 有1个备份</span>                 <span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"index.number_of_shards"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 有5个碎片</span><span class="token class-name">XContentBuilder</span> mappingBuilder <span class="token operator">=</span> <span class="token class-name">JsonXContent</span><span class="token punctuation">.</span><span class="token function">contentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">startObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">startObject</span><span class="token punctuation">(</span><span class="token string">"properties"</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">startObject</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> <span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">startObject</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> <span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"index"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">endObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">endObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>request<span class="token punctuation">.</span><span class="token function">mapping</span><span class="token punctuation">(</span>mappingBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CreateIndexResponse</span> response <span class="token operator">=</span> restHighLevelClient<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">isAcknowledged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>查看索引 Mapping：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">curl</span> http://127.0.0.1:9200/wyqtest/_mapping?pretty<span class="token punctuation">{</span>  <span class="token string">"wyqtest"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>    <span class="token string">"mappings"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>      <span class="token string">"properties"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>        <span class="token string">"content"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>          <span class="token string">"type"</span> <span class="token builtin class-name">:</span> <span class="token string">"text"</span>        <span class="token punctuation">}</span>,        <span class="token string">"title"</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>          <span class="token string">"type"</span> <span class="token builtin class-name">:</span> <span class="token string">"text"</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">DeleteIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteIndexRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>request<span class="token punctuation">.</span><span class="token function">indicesOptions</span><span class="token punctuation">(</span><span class="token class-name">IndicesOptions</span><span class="token punctuation">.</span>LENIENT_EXPAND_OPEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AcknowledgedResponse</span> response <span class="token operator">=</span> restHighLevelClient<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"result: {}"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">isAcknowledged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="查询示例"><a href="#查询示例" class="headerlink" title="查询示例"></a>查询示例</h3><h4 id="聚合汇总"><a href="#聚合汇总" class="headerlink" title="聚合汇总"></a>聚合汇总</h4><ol><li><p>构建 BoolQueryBuilder</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">BoolQueryBuilder</span> bool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoolQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bool<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">"@timestamp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>start<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bool<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">"@timestamp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>设置分组 TermsAggregationBuilder</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">TermsAggregationBuilder</span> aggregationBuilderGroupBy <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">"agg_count"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">"module.keyword"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>分组查询</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trackTotalHits</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>aggregationBuilderGroupBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SearchRequest</span> searchRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span>esIndexName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> restHighLevelClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Aggregations</span> aggregations <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>获取查询结果</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Aggregation</span> sourceType <span class="token operator">=</span> aggregations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"agg_count"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Terms</span><span class="token punctuation">.</span><span class="token class-name">Bucket</span> bucket <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Terms</span><span class="token punctuation">)</span> sourceType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"[LogIndex]"</span><span class="token operator">+</span>bucket<span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"[Count]"</span><span class="token operator">+</span>bucket<span class="token punctuation">.</span><span class="token function">getDocCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>执行结果：</p><pre class="language-none"><code class="language-none">[LogIndex]nlp-model[Count]101520[LogIndex]web-admin[Count]1106</code></pre></li></ol><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><ol><li><p>构建 BoolQueryBuilder</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">BoolQueryBuilder</span> bool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BoolQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bool<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">"module"</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minimumShouldMatch</span><span class="token punctuation">(</span><span class="token string">"100%"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bool<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">"level"</span><span class="token punctuation">,</span> dto<span class="token punctuation">.</span><span class="token function">getLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>设置查询 SearchSourceBuilder</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trackTotalHits</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置查询条件BoolQueryBuilder</span>sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置分组，需注意 es 的分页是从 0 开始的</span>sourceBuilder<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>sourceBuilder<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>perPage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置排序</span>sourceBuilder<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">"@timestamp"</span><span class="token punctuation">,</span> <span class="token class-name">SortOrder</span><span class="token punctuation">.</span>DESC<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>进行查询</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">SearchRequest</span> searchRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>searchRequest<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> restHighLevelClient<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>获取查询结果</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">// 获取结果集</span><span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取总条数</span>paginator<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 转换结果集</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">PhishingLogDto</span> mailServer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhishingLogDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mailServer<span class="token punctuation">.</span><span class="token function">jsonToDto</span><span class="token punctuation">(</span>mailServer<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mailServer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;RestHighLevelClient&quot;&gt;&lt;a href=&quot;#RestHighLevelClient&quot; class=&quot;headerlink&quot; title=&quot;RestHighLevelClient&quot;&gt;&lt;/a&gt;RestHighLevelClient&lt;/h3&gt;&lt;p&gt;RestHighLevelClient 是官方指定的连接 API。&lt;/p&gt;
&lt;p&gt;另外一个是 TransportClient，但是 TransportClient 这个是已经废弃不用的，所以会在 ES8.0 之后完全移除，也就是说 8.0 之后就无法使用了。&lt;/p&gt;
&lt;p&gt;引入依赖：&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot; data-language=&quot;xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.elasticsearch.client&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;elasticsearch-rest-client&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;${elasticsearch.version}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.elasticsearch.client&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;elasticsearch-rest-high-level-client&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;${elasticsearch.version}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaClass" scheme="https://jueee.github.io/categories/Java/JavaClass/"/>
    
    <category term="ElasticSearch" scheme="https://jueee.github.io/categories/ElasticSearch/"/>
    
    
    <category term="JavaClass" scheme="https://jueee.github.io/tags/JavaClass/"/>
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="ElasticSearch" scheme="https://jueee.github.io/tags/ElasticSearch/"/>
    
    <category term="Spring" scheme="https://jueee.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Potplayer 画质增强教程</title>
    <link href="https://jueee.github.io/2020/12/2020-12-02-Potplayer%E7%94%BB%E8%B4%A8%E5%A2%9E%E5%BC%BA%E6%95%99%E7%A8%8B/"/>
    <id>https://jueee.github.io/2020/12/2020-12-02-Potplayer%E7%94%BB%E8%B4%A8%E5%A2%9E%E5%BC%BA%E6%95%99%E7%A8%8B/</id>
    <published>2020-12-02T00:00:00.000Z</published>
    <updated>2020-12-03T01:31:09.173Z</updated>
    
    <content type="html"><![CDATA[<h3 id="madVR-介绍"><a href="#madVR-介绍" class="headerlink" title="madVR 介绍"></a>madVR 介绍</h3><ul><li><strong>madVR</strong> 是一款超强的视频插件，其配合高清播放软件，可以做到目前 <strong>PC</strong> 上播放高清视频的最强画质。</li><li><strong>madVR</strong> 这款视频渲染器比市面上大多数播放器自带的渲染器有着更精确的颜色处理，更高质量的图像缩放缩放、以及更低的颜色错误率。这就使得它所渲染出来的视频在颜色上更趋于真实，在画质细节上也要强于其他渲染器。</li><li><strong>madVR</strong> 支持各类显卡，包括 <strong>NVIDIA</strong> 和 <strong>AMD</strong> 的独显以及英特尔的核芯显卡。不过用户在使用 <strong>madVR</strong> 渲染视频时，会占用大量的 <strong>GPU</strong> 资源和 <strong>CPU</strong> 资源。</li></ul><a id="more"></a><h3 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h3><p>下载：<span class="exturl" data-url="aHR0cHM6Ly9kYXVtcG90cGxheWVyLmNvbS9kb3dubG9hZC8=">https://daumpotplayer.com/download/<i class="fa fa-external-link-alt"></i></span></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="视频解码器：LAVFilters"><a href="#视频解码器：LAVFilters" class="headerlink" title="视频解码器：LAVFilters"></a>视频解码器：LAVFilters</h4><p>下载地址如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">https://github.com/Nevcairiel/LAVFilters/releases</code></pre><p>安装：</p><p><img src="/images/2020/12/1606913349452.png" alt="1606913349452" loading="lazy"></p><p>安装 LAV Video（x64）</p><p><img src="/images/2020/12/1606913401256.png" alt="1606913401256" loading="lazy"></p><h4 id="视频渲染器：madVR"><a href="#视频渲染器：madVR" class="headerlink" title="视频渲染器：madVR"></a>视频渲染器：madVR</h4><p><strong>下载地址</strong>：<span class="exturl" data-url="aHR0cDovL3d3dy5tYWR2ci5jb20v">http://www.madVR.com/<i class="fa fa-external-link-alt"></i></span></p><p><strong>下载软件</strong>：</p><p><img src="/images/2020/12/1606914039961.png" alt="1606914039961" loading="lazy"></p><p><strong>安装软件</strong></p><p>右键点击 install.bat，以管理员身份运行</p><p><img src="/images/2020/12/1606914072646.png" alt="1606914072646" loading="lazy"></p><p>安装成功显示：</p><p><img src="/images/2020/12/1606913478055.png" alt="1606913478055" loading="lazy"></p><h3 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h3><p>按 F5 进入滤镜，激活条件改为<strong>不使用</strong>，<strong>取消勾选</strong>使内置视频编解码器 / 图像处理那行，然后应用、确定。</p><p><img src="/images/2020/12/1606914217121.png" alt="1606914217121" loading="lazy"></p><p>进入滤镜子选项：全局滤镜优先权</p><ol><li><p>添加系统滤镜，增加系统滤镜，增加 LAV 和 madVR</p><p><img src="/images/2020/12/1606914266875.png" alt="1606914266875" loading="lazy"></p></li><li><p>优先顺序改为强制使用</p><p><img src="/images/2020/12/1606914328106.png" alt="1606914328106" loading="lazy"></p></li><li><p>应用、确定</p></li></ol><h3 id="验证插件"><a href="#验证插件" class="headerlink" title="验证插件"></a>验证插件</h3><p>重启软件，并播放视频，按下 Tab 键。</p><p>此时，视频解码器是 LAV，视频渲染器是 madVR。</p><p><img src="/images/2020/12/1606914490789.png" alt="1606914490789" loading="lazy"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;madVR-介绍&quot;&gt;&lt;a href=&quot;#madVR-介绍&quot; class=&quot;headerlink&quot; title=&quot;madVR 介绍&quot;&gt;&lt;/a&gt;madVR 介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;madVR&lt;/strong&gt; 是一款超强的视频插件，其配合高清播放软件，可以做到目前 &lt;strong&gt;PC&lt;/strong&gt; 上播放高清视频的最强画质。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;madVR&lt;/strong&gt; 这款视频渲染器比市面上大多数播放器自带的渲染器有着更精确的颜色处理，更高质量的图像缩放缩放、以及更低的颜色错误率。这就使得它所渲染出来的视频在颜色上更趋于真实，在画质细节上也要强于其他渲染器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;madVR&lt;/strong&gt; 支持各类显卡，包括 &lt;strong&gt;NVIDIA&lt;/strong&gt; 和 &lt;strong&gt;AMD&lt;/strong&gt; 的独显以及英特尔的核芯显卡。不过用户在使用 &lt;strong&gt;madVR&lt;/strong&gt; 渲染视频时，会占用大量的 &lt;strong&gt;GPU&lt;/strong&gt; 资源和 &lt;strong&gt;CPU&lt;/strong&gt; 资源。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="软件" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Windows" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/Windows/"/>
    
    
    <category term="软件" scheme="https://jueee.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Windows" scheme="https://jueee.github.io/tags/Windows/"/>
    
    <category term="视频" scheme="https://jueee.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
    <category term="Potplayer" scheme="https://jueee.github.io/tags/Potplayer/"/>
    
  </entry>
  
  <entry>
    <title>Vue 可拖拽组件 vue-grid-layout 使用入门</title>
    <link href="https://jueee.github.io/2020/12/2020-12-01-Vue%E5%8F%AF%E6%8B%96%E6%8B%BD%E7%BB%84%E4%BB%B6vue-grid-layout%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>https://jueee.github.io/2020/12/2020-12-01-Vue%E5%8F%AF%E6%8B%96%E6%8B%BD%E7%BB%84%E4%BB%B6vue-grid-layout%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</id>
    <published>2020-12-01T00:00:00.000Z</published>
    <updated>2020-12-08T10:52:48.155Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9qYmF5c29sdXRpb25zLmdpdGh1Yi5pby92dWUtZ3JpZC1sYXlvdXQv">https://jbaysolutions.github.io/vue-grid-layout/<i class="fa fa-external-link-alt"></i></span></li><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2piYXlzb2x1dGlvbnMvdnVlLWdyaWQtbGF5b3V0">https://github.com/jbaysolutions/vue-grid-layout<i class="fa fa-external-link-alt"></i></span></li><li>npmjs：<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdnVlLWdyaWQtbGF5b3V0">https://www.npmjs.com/package/vue-grid-layout<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>可拖拽</li><li>可调整大小</li><li>静态部件（不可拖拽、调整大小）</li><li>拖拽和调整大小时进行边界检查</li><li>增减部件时避免重建栅格</li><li>可序列化和还原的布局</li><li>自动化 RTL 支持</li><li>响应式</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> vue-grid-layout --save</code></pre><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><h4 id="GridLayout"><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h4><ul><li><p><strong>layout</strong></p><p>数据源。值必须为 <code>Array</code>，其数据项为 <code>Object</code>。 每条数据项必须有 <code>i</code>, <code>x</code>, <code>y</code>, <code>w</code> 和 <code>h</code> 属性。 请参考下面的 <code>GridItem</code>。</p></li><li><p><strong>responsiveLayouts</strong></p><p>如果 <code>responsive</code> 设置为 <code>true</code>，该配置将作为栅格中每个断点的初始布局。键值是断点名称，每项的值都是类似 <code>layout</code> 属性定义的数据结构，值必须为 <code>Array</code>，其数据项为 <code>Object</code>。例如： <code>{lg: [layout items], md: [layout items]}</code>。需要注意的是，在创建栅格布局后设置该属性无效。</p></li><li><p><strong>colNum</strong></p><p>定义栅格系统的列数，其值需为自然数。</p></li><li><p><strong>rowHeight</strong></p><p>每行的高度，单位像素。</p></li><li><p><strong>maxRows</strong></p><p>定义最大行数。</p></li><li><p><strong>margin</strong></p><p>定义栅格中的元素边距。</p><p>值必须是包含两个 <code>Number</code> 的数组，数组中第一个元素表示水平边距，第二个表示垂直边距，单位为像素。</p></li><li><p><strong>isDraggable</strong></p><p>标识栅格中的元素是否可拖拽。</p></li><li><p><strong>isResizable</strong></p><p>标识栅格中的元素是否可调整大小。</p></li><li><p><strong>isMirrored</strong></p><p>标识栅格中的元素是否可镜像反转。</p></li><li><p><strong>autoSize</strong></p><p>标识容器是否自动调整大小。</p></li><li><p><strong>verticalCompact</strong></p><p>标识布局是否垂直压缩。</p></li><li><p><strong>useCssTransforms</strong></p><p>标识是否使用 CSS 属性 <code>transition-property: transform;</code>。</p></li><li><p><strong>responsive</strong></p><p>标识布局是否为响应式。</p></li><li><p><strong>breakpoints</strong></p><p>为响应式布局设置断点。</p></li><li><p><strong>cols</strong></p><p>设置每个断点对应的列数。</p></li><li><p><strong>useStyleCursor</strong></p><p>标识是否使用动态鼠标指针样式。当拖动出现卡顿时，将此值设为 <code>false</code> 也许可以缓解布局问题。</p></li></ul><h4 id="GridItem"><a href="#GridItem" class="headerlink" title="GridItem"></a>GridItem</h4><ul><li><p><strong>i</strong>：栅格中元素的 ID。</p></li><li><p><strong>x</strong>：标识栅格元素位于第几列，需为自然数。</p></li><li><p><strong>y</strong>：标识栅格元素位于第几行，需为自然数。</p></li><li><p><strong>w</strong>：标识栅格元素的初始宽度，值为 <code>colWidth</code> 的倍数。</p></li><li><p><strong>h</strong>：标识栅格元素的初始高度，值为 <code>rowHeight</code> 的倍数。</p></li><li><p><strong>minW</strong>：栅格元素的最小宽度，值为 <code>colWidth</code> 的倍数。如果 <code>w</code> 小于 <code>minW</code>，则 <code>minW</code> 的值会被 <code>w</code> 覆盖。</p></li><li><p><strong>minH</strong>：栅格元素的最小高度，值为 <code>rowHeight</code> 的倍数。如果 <code>h</code> 小于 <code>minH</code>，则 <code>minH</code> 的值会被 <code>h</code> 覆盖。</p></li><li><p><strong>maxW</strong>：栅格元素的最大宽度，值为 <code>colWidth</code> 的倍数。如果 <code>w</code> 大于 <code>maxW</code>，则 <code>maxW</code> 的值会被 <code>w</code> 覆盖。</p></li><li><p><strong>maxH</strong>：栅格元素的最大高度，值为 <code>rowHeight</code> 的倍数。如果 <code>h</code> 大于 <code>maxH</code>，则 <code>maxH</code> 的值会被 <code>h</code> 覆盖。</p></li><li><p><strong>isDraggable</strong>：标识栅格元素是否可拖拽。如果值为 <code>null</code> 则取决于父容器。</p></li><li><p><strong>isResizable</strong>：标识栅格元素是否可调整大小。如果值为 <code>null</code> 则取决于父容器。</p></li><li><p><strong>static</strong>：标识栅格元素是否为静态的（无法拖拽、调整大小或被其他元素移动）。</p></li><li><p><strong>dragIgnoreFrom</strong>：标识栅格元素中哪些子元素无法触发拖拽事件，值为 <code>css-like</code> 选择器。</p><p>请参考 <span class="exturl" data-url="aHR0cDovL2ludGVyYWN0anMuaW8vZG9jcy8jaWdub3JhYmxlLXNlbGVjdG9ycw==">interact.js docs<i class="fa fa-external-link-alt"></i></span> 中的 <code>ignoreFrom</code>。</p></li><li><p><strong>dragAllowFrom</strong>：标识栅格元素中哪些子元素可以触发拖拽事件，值为 <code>css-like</code> 选择器。如果值为 <code>null</code> 则表示所有子元素（<code>dragIgnoreFrom</code> 的除外）。</p><p>请参考 <span class="exturl" data-url="aHR0cDovL2ludGVyYWN0anMuaW8vZG9jcy8jaWdub3JhYmxlLXNlbGVjdG9ycw==">interact.js docs<i class="fa fa-external-link-alt"></i></span> 中的 <code>allowFrom</code>。</p></li><li><p><strong>resizeIgnoreFrom</strong>：标识栅格元素中哪些子元素无法触发调整大小的事件，值为 <code>css-like</code> 选择器。</p><p>请参考 <span class="exturl" data-url="aHR0cDovL2ludGVyYWN0anMuaW8vZG9jcy8jaWdub3JhYmxlLXNlbGVjdG9ycw==">interact.js docs<i class="fa fa-external-link-alt"></i></span> 中的 <code>ignoreFrom</code>。</p></li></ul><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><ol><li><p>引入</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> VueGridLayout <span class="token keyword">from</span> <span class="token string">'vue-grid-layout'</span><span class="token punctuation">;</span></code></pre></li><li><p>加入到 Vue 组件</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  components<span class="token operator">:</span> <span class="token punctuation">{</span>      GridLayout<span class="token operator">:</span> VueGridLayout<span class="token punctuation">.</span>GridLayout<span class="token punctuation">,</span>      GridItem<span class="token operator">:</span> VueGridLayout<span class="token punctuation">.</span>GridItem  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      layoutData<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>layoutData <span class="token operator">=</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"0"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"1"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"2"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"3"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"4"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"5"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"6"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"7"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"8"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"9"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"10"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"11"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"12"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"13"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"14"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"15"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"16"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"17"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"18"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span><span class="token string">"x"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"y"</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"h"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"i"</span><span class="token operator">:</span><span class="token string">"19"</span><span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>加入网格</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dashboard-container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-layout</span>            <span class="token attr-name">:layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layoutData<span class="token punctuation">"</span></span>            <span class="token attr-name">:col-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span>            <span class="token attr-name">:row-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-resizable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-mirrored</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">:vertical-compact</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[10, 10]<span class="token punctuation">"</span></span>            <span class="token attr-name">:use-css-transforms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>                   <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>                   <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>                   <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>                   <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>                   <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            {{item.i}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-layout</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></code></pre></li><li><p>加上点背景颜色</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.vue-grid-item</span> <span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>预览效果</p><p><img src="/images/2020/12/image-20201201164548293.png" alt="image-20201201164548293" loading="lazy"></p></li></ol><h3 id="添加右键事件"><a href="#添加右键事件" class="headerlink" title="添加右键事件"></a>添加右键事件</h3><p>在基础使用的基础上，增加如下配置：</p><ol><li><p>增加按钮</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dashboard-container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>contextmenu<span class="token punctuation">'</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menuConfig.visible<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span>menuConfig.left+<span class="token string">'px'</span><span class="token punctuation">,</span><span class="token property">top</span><span class="token punctuation">:</span>menuConfig.top+<span class="token string">'px'</span><span class="token punctuation">}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test(1)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test(2)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test(3)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-layout</span>            <span class="token attr-name">:layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layoutData<span class="token punctuation">"</span></span>            <span class="token attr-name">:col-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span>            <span class="token attr-name">:row-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-resizable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:is-mirrored</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">:vertical-compact</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name">:margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[10, 10]<span class="token punctuation">"</span></span>            <span class="token attr-name">:use-css-transforms</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>grid-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in layoutData<span class="token punctuation">"</span></span>                   <span class="token attr-name">:x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.x<span class="token punctuation">"</span></span>                   <span class="token attr-name">:y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.y<span class="token punctuation">"</span></span>                   <span class="token attr-name">:w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.w<span class="token punctuation">"</span></span>                   <span class="token attr-name">:h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.h<span class="token punctuation">"</span></span>                   <span class="token attr-name">:i</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span>                   <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.i<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>layout-Box<span class="token punctuation">"</span></span> <span class="token attr-name">@contextmenu.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>openMenu(item, $event)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            {{ item.i }}          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-item</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>grid-layout</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></code></pre></li><li><p>增加 Data 相关配置</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    menuConfig<span class="token operator">:</span> <span class="token punctuation">{</span> visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>methods<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 右键打开菜单</span>  <span class="token function">openMenu</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>menuConfig<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>menuConfig<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX    <span class="token keyword">this</span><span class="token punctuation">.</span>menuConfig<span class="token punctuation">.</span>top <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">// 关闭菜单</span>  <span class="token function">closeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>menuConfig<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">// 测试方法</span>  <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>watch<span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token string">'menuConfig.visible'</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>oldval</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>menuConfig<span class="token punctuation">.</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>closeMenu<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>closeMenu<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>CSS</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.layout-Box</span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.contextmenu</span> <span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px 0<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 2px 2px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .3<span class="token punctuation">)</span><span class="token selector">;  li</span> <span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 7px 16px<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token selector">;    &amp;:hover</span> <span class="token punctuation">{</span>      <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>预览效果：</p><p><img src="/images/2020/12/image-20201201184914907.png" alt="image-20201201184914907" loading="lazy"></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;官网：&lt;a href=&quot;https://jbaysolutions.github.io/vue-grid-layout/&quot;&gt;https://jbaysolutions.github.io/vue-grid-layout/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub：&lt;a href=&quot;https://github.com/jbaysolutions/vue-grid-layout&quot;&gt;https://github.com/jbaysolutions/vue-grid-layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;npmjs：&lt;a href=&quot;https://www.npmjs.com/package/vue-grid-layout&quot;&gt;https://www.npmjs.com/package/vue-grid-layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jueee.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jueee.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Java 获取 Kafka 的 topic 列表</title>
    <link href="https://jueee.github.io/2020/11/2020-11-30-Java%E8%8E%B7%E5%8F%96Kafka%E7%9A%84topic%E5%88%97%E8%A1%A8/"/>
    <id>https://jueee.github.io/2020/11/2020-11-30-Java%E8%8E%B7%E5%8F%96Kafka%E7%9A%84topic%E5%88%97%E8%A1%A8/</id>
    <published>2020-11-30T00:00:00.000Z</published>
    <updated>2020-11-30T07:58:22.172Z</updated>
    
    <content type="html"><![CDATA[<h3 id="命令行获取"><a href="#命令行获取" class="headerlink" title="命令行获取"></a>命令行获取</h3><p>根据 zookeeper 地址获取 topic：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ bin/kafka-topics.sh --list --zookeeper <span class="token number">127.0</span>.0.1:2181</code></pre><a id="more"></a><h3 id="引入依赖获取"><a href="#引入依赖获取" class="headerlink" title="引入依赖获取"></a>引入依赖获取</h3><h4 id="根据-kafka-地址"><a href="#根据-kafka-地址" class="headerlink" title="根据 kafka 地址"></a>根据 kafka 地址</h4><p>引入依赖</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kafka-clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${kafka.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><p>根据 kafka 地址获取 topic 的 Java 方法</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Properties</span> pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pro<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"bootstrap.servers"</span><span class="token punctuation">,</span> KAFKA_BOOTSTRAP_SERVERS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ListTopicsResult</span> result <span class="token operator">=</span> <span class="token class-name">KafkaAdminClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>pro<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KafkaFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">names</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> topicSet <span class="token operator">=</span> set<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="根据-zookeeper-地址"><a href="#根据-zookeeper-地址" class="headerlink" title="根据 zookeeper 地址"></a>根据 zookeeper 地址</h4><p>引入依赖</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>kafka_2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${kafka.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><p>根据 zookeeper 地址获取 topic 的 Java 方法</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">ZkUtils</span> zkUtils <span class="token operator">=</span> <span class="token class-name">ZkUtils</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>KAFKA_ZOOKEEPER_SERVERS<span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token class-name">JaasUtils</span><span class="token punctuation">.</span><span class="token function">isZkSecurityEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Seq</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> topicSeq <span class="token operator">=</span> zkUtils<span class="token punctuation">.</span><span class="token function">getAllTopics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> allTopicList <span class="token operator">=</span> <span class="token class-name">JavaConversions</span><span class="token punctuation">.</span><span class="token function">seqAsJavaList</span><span class="token punctuation">(</span>topicSeq<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;命令行获取&quot;&gt;&lt;a href=&quot;#命令行获取&quot; class=&quot;headerlink&quot; title=&quot;命令行获取&quot;&gt;&lt;/a&gt;命令行获取&lt;/h3&gt;&lt;p&gt;根据 zookeeper 地址获取 topic：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bin/kafka-topics.sh --list --zookeeper &lt;span class=&quot;token number&quot;&gt;127.0&lt;/span&gt;.0.1:2181&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaClass" scheme="https://jueee.github.io/categories/Java/JavaClass/"/>
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Kafka" scheme="https://jueee.github.io/categories/Apache/Kafka/"/>
    
    
    <category term="JavaClass" scheme="https://jueee.github.io/tags/JavaClass/"/>
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="Kafka" scheme="https://jueee.github.io/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>Java 获取 Kafka 指定 topic 的消息总量</title>
    <link href="https://jueee.github.io/2020/11/2020-11-29-Java%E8%8E%B7%E5%8F%96Kafka%E6%8C%87%E5%AE%9Atopic%E7%9A%84%E6%B6%88%E6%81%AF%E6%80%BB%E9%87%8F/"/>
    <id>https://jueee.github.io/2020/11/2020-11-29-Java%E8%8E%B7%E5%8F%96Kafka%E6%8C%87%E5%AE%9Atopic%E7%9A%84%E6%B6%88%E6%81%AF%E6%80%BB%E9%87%8F/</id>
    <published>2020-11-29T00:00:00.000Z</published>
    <updated>2020-11-30T07:58:16.392Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Kafka-Consumer-API"><a href="#Kafka-Consumer-API" class="headerlink" title="Kafka Consumer API"></a>Kafka Consumer API</h3><p>Kafka 提供了两套 API 给 Consumer</p><ul><li>The high-level Consumer API</li><li>The SimpleConsumer API </li></ul><p>第一种高度抽象的 Consumer API，它使用起来简单、方便，但是对于某些特殊的需求我们可能要用到第二种更底层的 API。</p><a id="more"></a><h4 id="SimpleConsumer优势"><a href="#SimpleConsumer优势" class="headerlink" title="SimpleConsumer优势"></a>SimpleConsumer 优势</h4><p>那么第二种 <code>The SimpleConsumer API </code> 能够帮助我们做哪些事情？</p><ul><li>一个消息读取多次</li><li>在一个处理过程中只消费 Partition 其中的一部分消息</li><li>添加事务管理机制以保证消息被处理且仅被处理一次</li></ul><h4 id="SimpleConsumer弊端"><a href="#SimpleConsumer弊端" class="headerlink" title="SimpleConsumer弊端"></a>SimpleConsumer 弊端</h4><p>使用 SimpleConsumer 有哪些弊端呢？</p><ul><li>必须在程序中跟踪 offset 值</li><li>必须找出指定 Topic Partition 中的 lead broker</li><li> 必须处理 broker 的变动</li></ul><h4 id="SimpleConsumer步骤"><a href="#SimpleConsumer步骤" class="headerlink" title="SimpleConsumer步骤"></a>SimpleConsumer 步骤</h4><p>使用 SimpleConsumer 的步骤</p><ol><li>从所有活跃的 broker 中找出哪个是指定 Topic Partition 中的 leader broker</li><li> 找出指定 Topic Partition 中的所有备份 broker</li><li> 构造请求</li><li>发送请求查询数据</li><li>处理 leader broker 变更</li></ol><h3 id="命令行获取topic信息总量"><a href="#命令行获取topic信息总量" class="headerlink" title="命令行获取topic信息总量"></a>命令行获取 topic 信息总量</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list XXX1:9092 --topic topicName1 --time -1topicName1:2:73454topicName1:5:73006topicName1:4:73511topicName1:1:73493topicName1:3:73019topicName1:0:72983$ bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list XXX1:9092 --topic topicName1 --time -2topicName1:2:0topicName1:5:0topicName1:4:0topicName1:1:0topicName1:3:0topicName1:0:0</code></pre><p><strong>--time -1</strong> 表示要获取指定 topic 所有分区当前的最大位移，**--time -2** 表示获取当前最早位移。</p><p>两个命令的输出结果相减便可得到所有分区当前的消息总数。</p><blockquote><p>分区当前的消息总数 = [--time-1] - [--time-2]</p></blockquote><p>相减是因为随着 kafka 的运行，topic 中有的消息可能会被删除，因此 <strong>--time -1</strong> 的结果其实表示的是历史上该 topic 生产的最大消息数，如果用户要统计当前的消息总数就必须减去 <strong>--time -2</strong> 的结果。</p><p>本例中没有任何消息被删除，故 <strong>--time -2</strong> 的结果全是 0，表示最早位移都是 0，消息总数等于历史上发送的消息总数。</p><h3 id="Java获取topic消息总量"><a href="#Java获取topic消息总量" class="headerlink" title="Java获取topic消息总量"></a>Java 获取 topic 消息总量</h3><h4 id="high-level-Consumer"><a href="#high-level-Consumer" class="headerlink" title="high-level Consumer"></a>high-level Consumer</h4><p>The high-level Consumer API  获取 Kafka 指定 topic 的消息总量：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">KafkaConsumer</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">TopicPartition</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaOffsetTools</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">KafkaOffsetTools</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KAFKA_BOOTSTRAP_SERVERS <span class="token operator">=</span> <span class="token string">"XXX1:9092,XXX2:9092,XXX3:9092"</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> TOPIC_LIST <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"topicName1"</span><span class="token punctuation">,</span><span class="token string">"topicName2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token operator">:</span> TOPIC_LIST<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">long</span> totolNum <span class="token operator">=</span> <span class="token function">totalMessageCount</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> KAFKA_BOOTSTRAP_SERVERS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>topic<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>totolNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">totalMessageCount</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">String</span> brokerList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"bootstrap.servers"</span><span class="token punctuation">,</span> brokerList<span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"group.id"</span><span class="token punctuation">,</span> <span class="token string">"test-group"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"enable.auto.commit"</span><span class="token punctuation">,</span> <span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"key.deserializer"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.kafka.common.serialization.StringDeserializer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"value.deserializer"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.kafka.common.serialization.StringDeserializer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicPartition</span><span class="token punctuation">&gt;</span></span> tps <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>consumer<span class="token punctuation">.</span><span class="token function">partitionsFor</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>info <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">TopicPartition</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicPartition</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> beginOffsets <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">beginningOffsets</span><span class="token punctuation">(</span>tps<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicPartition</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> endOffsets <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">endOffsets</span><span class="token punctuation">(</span>tps<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> tps<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span>tp <span class="token operator">-&gt;</span> endOffsets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tp<span class="token punctuation">)</span> <span class="token operator">-</span> beginOffsets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>输出结果：</p><pre class="language-none"><code class="language-none">topicName1:5301171topicName2:439466</code></pre><h4 id="SimpleConsumer"><a href="#SimpleConsumer" class="headerlink" title="SimpleConsumer"></a>SimpleConsumer</h4><p>The SimpleConsumer API  获取 Kafka 指定 topic 的消息总量：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token class-name">Entry</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">PartitionOffsetRequestInfo</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">TopicAndPartition</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">OffsetRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">OffsetResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">PartitionMetadata</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">TopicMetadata</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">TopicMetadataRequest</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span></span><span class="token class-name">TopicMetadataResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">SimpleConsumer</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaOffsetTools</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">KafkaOffsetTools</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KAFKA_BOOTSTRAP_SERVERS <span class="token operator">=</span> <span class="token string">"XXX1:9092,XXX2:9092,XXX3:9092"</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> TOPIC_LIST <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"topicName1"</span><span class="token punctuation">,</span><span class="token string">"topicName2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> kafkaHosts <span class="token operator">=</span> KAFKA_BOOTSTRAP_SERVERS<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> seeds <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>kafkaHosts<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">KafkaOffsetTools</span> kot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaOffsetTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> topicNumMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> topicName <span class="token operator">:</span> TOPIC_LIST<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">PartitionMetadata</span><span class="token punctuation">&gt;</span></span> metadatas <span class="token operator">=</span> kot<span class="token punctuation">.</span><span class="token function">findLeader</span><span class="token punctuation">(</span>seeds<span class="token punctuation">,</span> topicName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> logSize <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">PartitionMetadata</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> metadatas<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> partition <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> leadBroker <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">host</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> clientName <span class="token operator">=</span> <span class="token string">"Client_"</span> <span class="token operator">+</span> topicName <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">+</span> partition<span class="token punctuation">;</span><span class="token class-name">SimpleConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleConsumer</span><span class="token punctuation">(</span>leadBroker<span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">port</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> clientName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> readOffset <span class="token operator">=</span> <span class="token function">getLastOffset</span><span class="token punctuation">(</span>consumer<span class="token punctuation">,</span> topicName<span class="token punctuation">,</span> partition<span class="token punctuation">,</span> kafka<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token class-name">OffsetRequest</span><span class="token punctuation">.</span><span class="token class-name">LatestTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clientName<span class="token punctuation">)</span><span class="token punctuation">;</span>logSize <span class="token operator">+=</span> readOffset<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>consumer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>consumer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>topicNumMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>topicName<span class="token punctuation">,</span> logSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>topicNumMap<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">PartitionMetadata</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLeader</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> a_seedBrokers<span class="token punctuation">,</span> <span class="token class-name">String</span> a_topic<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">PartitionMetadata</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">PartitionMetadata</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> seed <span class="token operator">:</span> a_seedBrokers<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">SimpleConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hostAndPort <span class="token operator">=</span> seed<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleConsumer</span><span class="token punctuation">(</span>hostAndPort<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>hostAndPort<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">64</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token string">"leaderLookup"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>a_topic<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">TopicMetadataRequest</span> req <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicMetadataRequest</span><span class="token punctuation">(</span>topics<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">TopicMetadataResponse</span> resp <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicMetadata</span><span class="token punctuation">&gt;</span></span> metaData <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">topicsMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TopicMetadata</span> item <span class="token operator">:</span> metaData<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">PartitionMetadata</span> part <span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token function">partitionsMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">partitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> part<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Broker ["</span> <span class="token operator">+</span> seed <span class="token operator">+</span> <span class="token string">"] to find Leader for ["</span> <span class="token operator">+</span> a_topic <span class="token operator">+</span> <span class="token string">"] Reason: "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>consumer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>consumer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> map<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">getLastOffset</span><span class="token punctuation">(</span><span class="token class-name">SimpleConsumer</span> consumer<span class="token punctuation">,</span> <span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token keyword">int</span> partition<span class="token punctuation">,</span> <span class="token keyword">long</span> whichTime<span class="token punctuation">,</span><span class="token class-name">String</span> clientName<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">TopicAndPartition</span> topicAndPartition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicAndPartition</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> partition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicAndPartition</span><span class="token punctuation">,</span> <span class="token class-name">PartitionOffsetRequestInfo</span><span class="token punctuation">&gt;</span></span> requestInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicAndPartition</span><span class="token punctuation">,</span> <span class="token class-name">PartitionOffsetRequestInfo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>requestInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>topicAndPartition<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PartitionOffsetRequestInfo</span><span class="token punctuation">(</span>whichTime<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">OffsetRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> kafka<span class="token punctuation">.</span>javaapi<span class="token punctuation">.</span><span class="token class-name">OffsetRequest</span><span class="token punctuation">(</span>requestInfo<span class="token punctuation">,</span> kafka<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token class-name">OffsetRequest</span><span class="token punctuation">.</span><span class="token class-name">CurrentVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clientName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">OffsetResponse</span> response <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">getOffsetsBefore</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">hasError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Error fetching data Offset Data the Broker. Reason: "</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">errorCode</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> partition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> offsets <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">offsets</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> partition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> offsets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>输出结果：</p><pre class="language-none"><code class="language-none">{topicName1=5301171, topicName2=439466}</code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Kafka-Consumer-API&quot;&gt;&lt;a href=&quot;#Kafka-Consumer-API&quot; class=&quot;headerlink&quot; title=&quot;Kafka Consumer API&quot;&gt;&lt;/a&gt;Kafka Consumer API&lt;/h3&gt;&lt;p&gt;Kafka 提供了两套 API 给 Consumer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The high-level Consumer API&lt;/li&gt;
&lt;li&gt;The SimpleConsumer API &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一种高度抽象的 Consumer API，它使用起来简单、方便，但是对于某些特殊的需求我们可能要用到第二种更底层的 API。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaClass" scheme="https://jueee.github.io/categories/Java/JavaClass/"/>
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Kafka" scheme="https://jueee.github.io/categories/Apache/Kafka/"/>
    
    
    <category term="JavaClass" scheme="https://jueee.github.io/tags/JavaClass/"/>
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="Kafka" scheme="https://jueee.github.io/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch 集成 Spring 之 ElasticsearchTemplate 示例</title>
    <link href="https://jueee.github.io/2020/11/2020-11-27-ElasticSearch%E9%9B%86%E6%88%90Spring%E4%B9%8BElasticsearchTemplate%E7%A4%BA%E4%BE%8B/"/>
    <id>https://jueee.github.io/2020/11/2020-11-27-ElasticSearch%E9%9B%86%E6%88%90Spring%E4%B9%8BElasticsearchTemplate%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-11-27T00:00:00.000Z</published>
    <updated>2020-12-04T10:42:15.164Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ElasticsearchTemplate"><a href="#ElasticsearchTemplate" class="headerlink" title="ElasticsearchTemplate"></a>ElasticsearchTemplate</h3><p>ElasticsearchTemplate 是 Spring 对 ElasticSearch 的 Java api 进行的封装，提供了大量的相关的类来完成各种各样的查询。</p><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><a id="more"></a><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><p><strong>索引是否存在</strong></p><pre class="language-java" data-language="java"><code class="language-java">elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">indexExists</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></code></pre><p><strong>创建索引并初始化 Mapping</strong></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> createResult <span class="token operator">=</span> elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"[createResult]"</span><span class="token operator">+</span>createResult<span class="token punctuation">)</span><span class="token punctuation">;</span>elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">putMapping</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>分页查询并计算总数量</strong></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token comment">// 特别注意：es的分页从0页开始</span><span class="token class-name">SearchQuery</span> searchQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativeSearchQueryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withQuery</span><span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withPageable</span><span class="token punctuation">(</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> perPage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">queryForPage</span><span class="token punctuation">(</span>searchQuery<span class="token punctuation">,</span> <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>elasticsearchTemplate<span class="token punctuation">.</span><span class="token function">queryForPage</span><span class="token punctuation">(</span>searchQuery<span class="token punctuation">,</span> <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SearchResultMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">mapSearchHit</span><span class="token punctuation">(</span><span class="token class-name">SearchHit</span> searchHit<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AggregatedPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">mapResults</span><span class="token punctuation">(</span><span class="token class-name">SearchResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">,</span> <span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span> <span class="token punctuation">{</span>paginator<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;ElasticsearchTemplate&quot;&gt;&lt;a href=&quot;#ElasticsearchTemplate&quot; class=&quot;headerlink&quot; title=&quot;ElasticsearchTemplate&quot;&gt;&lt;/a&gt;ElasticsearchTemplate&lt;/h3&gt;&lt;p&gt;ElasticsearchTemplate 是 Spring 对 ElasticSearch 的 Java api 进行的封装，提供了大量的相关的类来完成各种各样的查询。&lt;/p&gt;
&lt;h4 id=&quot;引入依赖&quot;&gt;&lt;a href=&quot;#引入依赖&quot; class=&quot;headerlink&quot; title=&quot;引入依赖&quot;&gt;&lt;/a&gt;引入依赖&lt;/h4&gt;&lt;pre class=&quot;language-xml&quot; data-language=&quot;xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.springframework.data&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;spring-data-elasticsearch&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;3.2.1.RELEASE&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaClass" scheme="https://jueee.github.io/categories/Java/JavaClass/"/>
    
    <category term="ElasticSearch" scheme="https://jueee.github.io/categories/ElasticSearch/"/>
    
    
    <category term="JavaClass" scheme="https://jueee.github.io/tags/JavaClass/"/>
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="ElasticSearch" scheme="https://jueee.github.io/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>RAID 管理工具 MegaCli 的安装使用</title>
    <link href="https://jueee.github.io/2020/11/2020-11-26-RAID%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7MegaCli%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>https://jueee.github.io/2020/11/2020-11-26-RAID%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7MegaCli%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2020-11-26T00:00:00.000Z</published>
    <updated>2020-11-24T09:45:48.681Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MegaCli-介绍"><a href="#MegaCli-介绍" class="headerlink" title="MegaCli 介绍"></a>MegaCli 介绍</h3><p>MegaCli 是一款管理维护硬件 RAID 软件，可以通过它来了解当前 raid 卡的所有信息，包括 raid 卡的型号，raid 的阵列类型，raid 上各磁盘状态，等等。</p><a id="more"></a><h3 id="MegaCli-安装"><a href="#MegaCli-安装" class="headerlink" title="MegaCli 安装"></a>MegaCli 安装</h3><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p>方案一</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> alien<span class="token function">wget</span> --user<span class="token operator">=</span>hetzner --password<span class="token operator">=</span>download http://download.hetzner.de/tools/LSI/tools/MegaCLI/8.07.14_MegaCLI.zip<span class="token function">unzip</span> <span class="token number">8.07</span>.14_MegaCLI.zip -d megacli<span class="token builtin class-name">cd</span> megacli/Linux<span class="token function">sudo</span> alien MegaCli-8.07.14-1.noarch.rpm<span class="token function">sudo</span> dpkg -i megacli_8.07.14-2_all.deb<span class="token function">ln</span> -s /opt/MegaRAID/MegaCli/MegaCli64 /usr/bin/megacli</code></pre><p>方案二</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> -y <span class="token function">install</span>  rpm2cpio libsysfs2 libsysfs-dev <span class="token function">unzip</span><span class="token function">unzip</span> <span class="token number">8.00</span>.48_Linux_MegaCLI.zip<span class="token function">unzip</span> MegaCliLin.ziprpm2cpio Lib_Utils-1.00-09.noarch.rpm <span class="token operator">|</span> cpio -idmvrpm2cpio MegaCli-8.00.48-1.i386.rpm <span class="token operator">|</span> cpio -idmv<span class="token function">ln</span> -s opt/MegaRAID/MegaCli/MegaCli64 /usr/bin/megacli64<span class="token function">ln</span> -s opt/MegaRAID/MegaCli/MegaCli /usr/bin/megacli</code></pre><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><pre class="language-bash" data-language="bash"><code class="language-bash">$  megacli -v      MegaCLI SAS RAID Management Tool  Ver <span class="token number">8.07</span>.14 Dec <span class="token number">16</span>, <span class="token number">2013</span>    <span class="token punctuation">(</span>c<span class="token punctuation">)</span>Copyright <span class="token number">2013</span>, LSI Corporation, All Rights Reserved.Exit Code: 0x00</code></pre><h4 id="安装异常"><a href="#安装异常" class="headerlink" title="安装异常"></a>安装异常</h4><p>问题：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ megaclimegacli: error <span class="token keyword">while</span> loading shared libraries: libncurses.so.5: cannot <span class="token function">open</span> shared object file: No such <span class="token function">file</span> or directory</code></pre><p>解决</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">apt-get</span> <span class="token function">install</span> libncurses5</code></pre><h3 id="命令汇总"><a href="#命令汇总" class="headerlink" title="命令汇总"></a>命令汇总</h3><ul><li><p>查看 raid 卡日志</p><p>megacli -FwTermLog -Dsply -aALL</p></li><li><p>显示适配器个数</p><p>megacli -adpCount</p></li><li><p>显示适配器时间</p><p>megacli -AdpGetTime –aALL</p></li><li><p>显示所有适配器信息</p><p>megacli -AdpAllInfo -aAll</p></li><li><p>显示所有逻辑磁盘组信息</p><p>megacli -LDInfo -LALL -aAll</p></li><li><p>查 raid 卡信息 (生产商、电池信息及所支持的 raid 级别)</p><p>megacli -AdpAllInfo -aALL |grep -E "Product Name|BBU|Memory Size|RAID Level Supported"</p></li><li><p>查看虚拟化 (vd) 和物理盘 (pd) 的信息，比如查看物理硬盘数，是否有硬盘 offline 或者 degraded</p><p>megacli -AdpAllInfo -aALL |grep -E "Device Present" -A9</p></li><li><p>查看硬盘是否 online</p><p>megacli -PDList -aALL |grep "Firmware state"</p></li><li><p>查看硬盘是否存在物理错误 (error 不为 0，可能会有硬盘故障即将发生)</p><p>megacli -PDList -aALL |grep -i error</p></li><li><p>查看电池信息 (电池类型、电池状态、充电状态、温度等)</p><p>megacli -AdpBbuCmd -aAll</p></li><li><p>raid 卡个数</p><p>megacli –adpCount</p></li><li><p>检测磁盘 ID 注意，该 ID 值用于标注磁盘</p><p>megacli -PDlist -aALL | grep "ID" | uniq</p></li><li><p>显示所有逻辑磁盘组信息 (做了几组 raid，raid cache 的默认和当前策略，做好 raid 后的虚拟盘容量)</p><p>megacli -LDInfo -LALL -aAll</p></li><li><p>显示所有物理盘 (物理磁盘个数、大小、是否存在 error)</p><p>megacli -PDList -aAll</p></li><li><p>显示所有物理盘物理错误</p><p>megacli -PDList -aAll |grep -i error</p></li><li><p>查看充电状态</p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL |grep 'Charger Status'</p></li><li><p>显示 BBU 状态信息，比如电池是否，如果 issohgood 为 Yes 为正常，No 为异常</p></li></ul><p>  megacli -AdpBbuCmd -GetBbuStatus -aALL|grep -i issohgood</p><ul><li><p>显示 BBU 状态信息</p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL</p></li><li><p>显示 BBU 容量信息</p><p>megacli -AdpBbuCmd -GetBbuCapacityInfo -aALL</p></li><li><p>显示 BBU 设计参数</p><p>megacli -AdpBbuCmd -GetBbuDesignInfo -aALL</p></li><li><p>显示当前 BBU 属性</p><p>megacli -AdpBbuCmd -GetBbuProperties -aALL</p></li><li><p>显示 Raid 卡型号，cache 大小、Raid 设置，cache 策略、Disk 相关信息</p><p>megacli -cfgdsply -aALL |egrep "PDs|VDs|Product Name|Memory|BBU:"</p></li><li><p>查看磁盘缓存策略 (查看 vd 的)</p><p>megacli -LDGetProp -Cache -LALL -aALL</p></li><li><p>查看磁盘缓存策略 (查看 pd 的)</p><p>megacli -LDGetProp -DskCache -LALL -aALL</p></li><li><p>查看物理磁盘重建进度</p><p>megacli -PDRbld -ShowProg -PhysDrv [1:5] -a0</p></li><li><p>以动态可视化文字界面显示</p><p>megacli -PDRbld -ProgDsply -PhysDrv [1:5] -a0</p></li><li><p>关闭缓存</p><p>megacli -LDSetProp -DisDskCache -L0 -a0</p></li><li><p>显示 Rebuid 进度</p><p>megacli -PDRbld -ShowProg -physdrv[20:2] -aALL</p></li><li><p>查看 E S</p><p>megacli -PDList -aAll -NoLog | grep -Ei "(enclosure|slot)"</p></li><li><p>查看所有硬盘的状态</p><p>megacli -PDList -aAll -NoLog</p></li><li><p>查看所有 Virtual Disk 的状态</p><p>megacli -LdPdInfo -aAll -NoLog</p></li><li><p>在线做 Raid</p><p>megacli -CfgLdAdd -r0[0:11] WB NORA Direct CachedBadBBU -strpsz64 -a0 -NoLog</p><p>megacli -CfgLdAdd -r5 [12:2,12:3,12:4,12:5,12:6,12:7] WB Direct -a0</p></li><li><p>点亮指定硬盘 (定位)</p><p>megacli -PdLocate -start -physdrv[252:2] -a0</p></li><li><p>清除 Foreign 状态</p><p>megacli -CfgForeign -Clear -a0</p></li><li><p>查看 RAID 阵列中掉线的盘</p><p>megacli -pdgetmissing -a0</p></li><li><p>替换坏掉的模块</p><p>megacli -pdreplacemissing -physdrv[12:10] -Array5 -row0 -a0</p></li><li><p>手动开启 rebuid</p><p>megacli -pdrbld -start -physdrv[12:10] -a0</p></li><li><p>查看 Megacli 的 log</p><p>megacli -FwTermLog dsply -a0 &gt; adp2.log</p></li><li><p>设置 HotSpare</p><p>megacli -pdhsp -set [-Dedicated [-Array2]] [-EnclAffinity] [-nonRevertible] -PhysDrv[4:11] -a0</p><p>megacli -pdhsp -set [-EnclAffinity] [-nonRevertible] -PhysDrv[32：1}] -a0</p></li><li><p>关闭 Rebuild</p><p>megacli -AdpAutoRbld -Dsbl -a0</p></li><li><p>设置 rebuild 的速率</p><p>megacli -AdpSetProp RebuildRate -30 -a0</p></li><li><p>创建一个 raid5 阵列，由物理盘 2,3 4 构成，该阵列的热备盘是物理盘 5</p><p>megacli-CfgLdA d -r5 [1:2,1:3,1:4] WB Direct -Hsp[1:5] -a0</p></li><li><p>创建阵列，不指定热备</p><p>megacli-CfgLdA d -r5 [1:2,1:3,1:4] WB Direct -a0</p></li><li><p>删除阵列</p><p>megacli-CfgLdDel -L1 -a0</p></li><li><p>在线添加磁盘</p><p>megacli-LDRecon -Star - 5 Ad -PhysDrv[1:4] -L1 -a0</p></li><li><p>阵列创建完后，会有一个初始化同步块的过程，可以看 其进度。</p><p>megacli-LDInit -ShowProg -LA L -aAL</p></li><li><p>以动态可视化文字界面显示</p><p>megacli-LDInit -ProgDsply -LA L -aAL</p></li><li><p>查看阵列后台初始化进度</p><p>megacli-LDBI -ShowProg -LA L -aAL</p></li><li><p>或者以动态可视化文字界面显示</p><p>megacli-LDBI -ProgDsply -LA L -aAL</p></li><li><p>指定第 5 块盘作为全局热备</p><p>megacli-PDHSP -Set [-EnclAf in ty] [-no Rev rtible] -PhysDrv[1:5] -a0</p></li><li><p>指定为某个阵列的专用热备</p><p>megacli-PDHSP -Set [-Dedicated [-Ar ay1] [-EnclAf in ty] [-no Rev rtible] -PhysDrv[1:5] -a0</p></li><li><p>删除全局热备</p><p>megacli-PDHSP -Rmv -PhysDrv[1:5] -a0</p></li><li><p>将某块物理盘下线 / 上线</p><p>megacli -PDOffline -PhysDrv [1:4] -a0</p><p>megacli -PDOnline -PhysDrv [1:4] -a0</p></li><li><p>查看物理磁盘重建进度</p><p>megacli-PDRbld -ShowProg -PhysDrv [1:5] -a0</p></li><li><p>或者以动态可视化文字界面显示</p><p>megacli -PDRbld -ProgDsply -PhysDrv [1:5] -a0</p></li><li><p>查看做 raid 的情况</p><p>megacli -LDInfo -Lal -aAL | grep -E "RAID Lev l|Strip Size|NumberOf Drives|Span Depth|^Size"</p></li><li><p>取 Enclosure Device ID</p><p>uiqnum=<code> megacli -PDlist -aAL | grep "ID" | uniq |awk -F: '{print $2}' | awk '{print $1}'</code></p></li><li><p>取 Slot Number</p><p>disknum=<code>megacli -PDList -aAL | grep -E "DISK GROUP|Slot Number|postion:|Firmware sta e:" | grep Slot | awk -F[: ] '{print $NF}'</code></p></li><li><p>算出总数</p><p>diskto al=<code>megacli -PDList -aAL | grep -E "DISK GROUP|Slot Number|postion:|Firmware sta e:" | grep Slot | awk -F[: ] '{print $NF}' | wc -l</code><br>ar ay=($disknum)</p></li><li><p>查看当前 raid 缓存状态，raid 缓存状态设置为 wb 的话要注意电池放电事宜，设置电池放电模式为自动学习模式</p><p>megacli   -ldgetprop  -dskcache -lall  -aall</p></li><li><p>raid 电池设置相关</p><ul><li><p>查看电池状态信息 (Display BBU Status Information)</p><p>megacli -AdpBbuCmd -GetBbuStatus -aN|-a0,1,2|-aALL</p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL</p></li><li><p>查看电池容量（Display BBU Capacity Information）</p><p>megacli -AdpBbuCmd -GetBbuCapacityInfo -aN|-a0,1,2|-aALL</p><p>megacli -AdpBbuCmd -GetBbuCapacityInfo –aALL</p></li><li><p>查看电池设计参数 (Display BBU Design Parameters)</p><p>megacli -AdpBbuCmd -GetBbuDesignInfo -aN|-a0,1,2|-aALL</p><p>megacli -AdpBbuCmd -GetBbuDesignInfo –aALL</p></li><li><p>查看电池属性（Display Current BBU Properties）</p><p>megacli -AdpBbuCmd -GetBbuProperties -aN|-a0,1,2|-aALL</p><p>megacli -AdpBbuCmd -GetBbuProperties –aALL</p></li><li><p>设置电池为学习模式为循环模式（Start BBU Learning Cycle）</p><p>megacli -AdpBbuCmd -BbuLearn -aN|-a0,1,2|-aALL</p></li></ul></li><li><p>查询 raid 级别，磁盘数量，容量，条带大小。</p><p>megacli -cfgdsply -aALL |grep Policy</p></li><li><p>查询控制器 cache 策略</p><p>megacli -LDSetProp WB -L0 -a0</p></li><li><p>设置 write back 功能</p><p>megacli -LDSetProp CachedBadBBU -L0 -a0</p></li><li><p>设置即使电池坏了还是保持 WB 功能</p><p>megacli -AdpBbuCmd -BbuLearn a0</p></li><li><p>手动充电</p><p>megacli -FwTermLog -Dsply -aALL</p></li><li><p>显示适配器个数： </p><p>megacli -adpCount</p></li><li><p>显示所有适配器信息： </p><p>megacli -AdpAllInfo -aAll</p></li><li><p>显示所有逻辑磁盘组信息： </p><p>megacli -LDInfo -LALL -aAll</p></li><li><p>显示所有的物理信息： </p><p>megacli -PDList -aAll<br>Media</p></li><li><p>查看充电状态： </p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL</p></li><li><p>显示 BBU (后备电池) 状态信息： </p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL</p></li><li><p>显示 BBU 容量信息： </p><p>megacli -AdpBbuCmd -GetBbuCapacityInfo -aALL</p></li><li><p>显示 BBU 设计参数： </p><p>megacli -AdpBbuCmd -GetBbuDesignInfo -aALL</p></li><li><p>显示当前 BBU 属性： </p><p>megacli -AdpBbuCmd -GetBbuProperties -aALL</p></li><li><p>显示 Raid 卡型号，Raid 设置，Disk 相关信息： </p><p>megacli -cfgdsply -aALL</p></li><li><p>查看 Cache 策略设置： </p><p>megacli -cfgdsply -aALL |grep -i Policy</p></li><li><p>查看充电进度百分比： </p><p>megacli -AdpBbuCmd -GetBbuStatus -aALL</p></li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9pZGMud2FueXVuc2h1anUuY29tL2N5bS82NDYuaHRtbA==">https://idc.wanyunshuju.com/cym/646.html<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZnhrcmF1cy81OTVhYjgyZTA3Y2Q2ZjhlMDU3ZDMxYmMwYmM1ZTc3OQ==">https://gist.github.com/fxkraus/595ab82e07cd6f8e057d31bc0bc5e779<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpbnFpZGlhbl94aWFvL2FydGljbGUvZGV0YWlscy84MDk0MDMwNg==">https://blog.csdn.net/xinqidian_xiao/article/details/80940306<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;MegaCli-介绍&quot;&gt;&lt;a href=&quot;#MegaCli-介绍&quot; class=&quot;headerlink&quot; title=&quot;MegaCli 介绍&quot;&gt;&lt;/a&gt;MegaCli 介绍&lt;/h3&gt;&lt;p&gt;MegaCli 是一款管理维护硬件 RAID 软件，可以通过它来了解当前 raid 卡的所有信息，包括 raid 卡的型号，raid 的阵列类型，raid 上各磁盘状态，等等。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/categories/Linux/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="RAID" scheme="https://jueee.github.io/tags/RAID/"/>
    
  </entry>
  
  <entry>
    <title>Excel 文件导入导出工具 ExcelKit</title>
    <link href="https://jueee.github.io/2020/11/2020-11-25-Excel%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7ExcelKit/"/>
    <id>https://jueee.github.io/2020/11/2020-11-25-Excel%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7ExcelKit/</id>
    <published>2020-11-25T00:00:00.000Z</published>
    <updated>2020-11-24T03:46:49.940Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ExcelKit-介绍"><a href="#ExcelKit-介绍" class="headerlink" title="ExcelKit 介绍"></a>ExcelKit 介绍</h3><p>ExcelKit 是简单、好用且轻量级的海量 Excel 文件导入导出解决方案。</p><ul><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dlbnpld29vL0V4Y2VsS2l0">https://github.com/wenzewoo/ExcelKit<i class="fa fa-external-link-alt"></i></span></li><li>Gitee：<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vd3V3ZW56ZS9FeGNlbEtpdC8=">https://gitee.com/wuwenze/ExcelKit/<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h4 id="ExcelKit-引入"><a href="#ExcelKit-引入" class="headerlink" title="ExcelKit 引入"></a>ExcelKit 引入</h4><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.wuwenze<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ExcelKit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.72<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="ExcelKit-示例"><a href="#ExcelKit-示例" class="headerlink" title="ExcelKit 示例"></a>ExcelKit 示例</h3><h4 id="ExcelMapping"><a href="#ExcelMapping" class="headerlink" title="ExcelMapping"></a>ExcelMapping</h4><p>ExcelMapping (配置 Excel 与实体之间的映射关系)</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"tb_user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"编号"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户名"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"昵称"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"邮箱"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"电话号码"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> phoneNumber<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> dateFormat <span class="token operator">=</span> <span class="token string">"yyyy年MM月dd日 HH:mm:ss"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> dateFormat <span class="token operator">=</span> <span class="token string">"yyyy年MM月dd日 HH:mm:ss"</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> modifiedTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span><span class="token comment">//</span>            value <span class="token operator">=</span> <span class="token string">"性别"</span><span class="token punctuation">,</span>            readConverterExp <span class="token operator">=</span> <span class="token string">"男=1,女=0"</span><span class="token punctuation">,</span>            writeConverterExp <span class="token operator">=</span> <span class="token string">"1=男,0=女"</span>            <span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">50</span>    <span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> sex<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"密码盐值"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> salt<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span><span class="token comment">//</span>            value <span class="token operator">=</span> <span class="token string">"用户类型"</span><span class="token punctuation">,</span>            readConverterExp <span class="token operator">=</span> <span class="token string">"超级管理员=0,普通用户=1"</span><span class="token punctuation">,</span>            writeConverterExp <span class="token operator">=</span> <span class="token string">"0=超级管理员,1=普通用户"</span>            <span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">80</span>    <span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> type<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户密码"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"出生日期"</span><span class="token punctuation">,</span> dateFormat <span class="token operator">=</span> <span class="token string">"yyyy/MM/dd"</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> birth<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> departmentId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"头像url"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> avatar<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> is_corp<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="下载-Controller"><a href="#下载-Controller" class="headerlink" title="下载 Controller"></a>下载 Controller</h4><p>使用 ExcelKit 提供的 API 构建导入模板，会根据配置生成批注，下拉框等</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/excel"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ExcelKit</span><span class="token punctuation">.</span>$<span class="token class-name">Export</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downXlsx</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="下载-HEML"><a href="#下载-HEML" class="headerlink" title="下载 HEML"></a>下载 HEML</h4><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>downExcel<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-icon-download<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>导出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span></code></pre><h4 id="下载-Script"><a href="#下载-Script" class="headerlink" title="下载 Script"></a>下载 Script</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">downExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> $<span class="token keyword">this</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> axios    <span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token operator">:</span> <span class="token string">"/user/excel"</span><span class="token punctuation">,</span>        method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>        responseType<span class="token operator">:</span> <span class="token string">"blob"</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">"content-type"</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> $<span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>                <span class="token string">"Subject does not have permission [user:export]"</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>        <span class="token keyword">let</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将二进制文件转化为可访问的url</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>        a<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">"用户列表.xls"</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="下载效果"><a href="#下载效果" class="headerlink" title="下载效果"></a>下载效果</h4><p>下载文件：</p><p><img src="/images/2020/11/image-20201124114137155.png" alt="image-20201124114137155" loading="lazy"></p><p>打开效果：</p><p><img src="/images/2020/11/image-20201124114254144.png" alt="image-20201124114254144" loading="lazy"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;ExcelKit-介绍&quot;&gt;&lt;a href=&quot;#ExcelKit-介绍&quot; class=&quot;headerlink&quot; title=&quot;ExcelKit 介绍&quot;&gt;&lt;/a&gt;ExcelKit 介绍&lt;/h3&gt;&lt;p&gt;ExcelKit 是简单、好用且轻量级的海量 Excel 文件导入导出解决方案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub：&lt;a href=&quot;https://github.com/wenzewoo/ExcelKit&quot;&gt;https://github.com/wenzewoo/ExcelKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gitee：&lt;a href=&quot;https://gitee.com/wuwenze/ExcelKit/&quot;&gt;https://gitee.com/wuwenze/ExcelKit/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="JavaJar" scheme="https://jueee.github.io/categories/Java/JavaJar/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="JavaJar" scheme="https://jueee.github.io/tags/JavaJar/"/>
    
    <category term="Excel" scheme="https://jueee.github.io/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>Shell 中 kill 掉指定名称的进程</title>
    <link href="https://jueee.github.io/2020/11/2020-11-24-Shell%E4%B8%ADkill%E6%8E%89%E6%8C%87%E5%AE%9A%E5%90%8D%E7%A7%B0%E7%9A%84%E8%BF%9B%E7%A8%8B/"/>
    <id>https://jueee.github.io/2020/11/2020-11-24-Shell%E4%B8%ADkill%E6%8E%89%E6%8C%87%E5%AE%9A%E5%90%8D%E7%A7%B0%E7%9A%84%E8%BF%9B%E7%A8%8B/</id>
    <published>2020-11-24T00:00:00.000Z</published>
    <updated>2020-11-24T03:43:50.192Z</updated>
    
    <content type="html"><![CDATA[<p>在 Linux 开发中我们时常会遇到对于之前进程 kill 掉，然后再运行当前进程或程序的情况，此时我们是不知道需要 kill 的进程号的，那么就需要通过一个 shell 命令组合来实现这个需求。</p><a id="more"></a><h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p>如下命令可以实现：</p><pre class="language-shell" data-language="shell"><code class="language-shell">ps a | grep -w nameprocess | grep -v grep| cut -c 1-5 | xargs kill -9</code></pre><p>说明：</p><ul><li>管道符 “|” 用来隔开两个命令，管道符左边命令的输出会作为管道符右边命令的输入。 </li><li>“ps a” 是查看所有进程的命令。这时检索出的进程将作为下一条命令 “grep“的输入，注意要结束其它程序时，请将上面命令中的 nameprocess 替换成其它程序名，-w 'nameprocess' 强制 PATTERN 仅完全匹配字词。</li><li>“grep -v grep” 是在列出的进程中去除含有关键字 “grep” 的进程。</li><li>“cut -c 1-5” 是截取输入行的第 1 个字符到第 5 个字符，而这正好是进程号 PID，或者根据自己实际的情况可以调整字符的截取位置。</li><li>“xargs kill -9” 中的 xargs 命令是用来把前面命令的输出结果（PID）作为 “kill -9” 命令的参数，并执行该命令。</li><li>“kill -9” 会强行杀掉指定进程，这样就成功清除了同名进程。</li></ul><h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><pre class="language-shell" data-language="shell"><code class="language-shell">ps axu|grep nameprocess | awk '{print "kill -9 "}'</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Linux 开发中我们时常会遇到对于之前进程 kill 掉，然后再运行当前进程或程序的情况，此时我们是不知道需要 kill 的进程号的，那么就需要通过一个 shell 命令组合来实现这个需求。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    <category term="Shell" scheme="https://jueee.github.io/categories/Linux/Shell/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
    <category term="Shell" scheme="https://jueee.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>安装 debian 无法启动的解决办法</title>
    <link href="https://jueee.github.io/2020/11/2020-11-19-%E5%AE%89%E8%A3%85debian%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://jueee.github.io/2020/11/2020-11-19-%E5%AE%89%E8%A3%85debian%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-11-24T00:00:00.000Z</published>
    <updated>2020-11-24T11:23:15.031Z</updated>
    
    <content type="html"><![CDATA[<p>安装了几次 debian，一直无法启动。一直闪烁光标。后来发现是默认的问题。</p><a id="more"></a><h3 id="Debian-安装"><a href="#Debian-安装" class="headerlink" title="Debian 安装"></a>Debian 安装</h3><p>关键在于最后的 GRUB 的选择。如下图：</p><p><img src="/images/2020/11/image-20201124185648813.png" alt="image-20201124185648813" loading="lazy"></p><p><img src="/images/2020/11/image-20201124185711361.png" alt="image-20201124185711361" loading="lazy"></p><h3 id="Debian-发行版本"><a href="#Debian-发行版本" class="headerlink" title="Debian 发行版本"></a>Debian 发行版本</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy8=">https://www.debian.org/releases/<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="Debian-官网下载"><a href="#Debian-官网下载" class="headerlink" title="Debian 官网下载"></a>Debian 官网下载</h3><ul><li>Debian 5（lenny）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy9sZW5ueS9kZWJpYW4taW5zdGFsbGVyLw==">https://www.debian.org/releases/lenny/debian-installer/<i class="fa fa-external-link-alt"></i></span></li><li>Debian 6（squeeze）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy9zcXVlZXplL2RlYmlhbi1pbnN0YWxsZXIv">https://www.debian.org/releases/squeeze/debian-installer/<i class="fa fa-external-link-alt"></i></span></li><li>Debian 7（wheezy）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy93aGVlenkvZGViaWFuLWluc3RhbGxlci8=">https://www.debian.org/releases/wheezy/debian-installer/<i class="fa fa-external-link-alt"></i></span></li><li>Debian 8（jessie）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy9qZXNzaWUvZGViaWFuLWluc3RhbGxlci8=">https://www.debian.org/releases/jessie/debian-installer/<i class="fa fa-external-link-alt"></i></span></li><li>Debian 9（stretch）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy9zdHJldGNoL2RlYmlhbi1pbnN0YWxsZXIv">https://www.debian.org/releases/stretch/debian-installer/<i class="fa fa-external-link-alt"></i></span></li><li>Debian 10（buster）：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGViaWFuLm9yZy9yZWxlYXNlcy9idXN0ZXIvZGViaWFuLWluc3RhbGxlci8=">https://www.debian.org/releases/buster/debian-installer/<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;安装了几次 debian，一直无法启动。一直闪烁光标。后来发现是默认的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Docker 使用 Supervisor 来管理进程</title>
    <link href="https://jueee.github.io/2020/11/2020-11-23-Docker%E4%BD%BF%E7%94%A8Supervisor%E6%9D%A5%E7%AE%A1%E7%90%86%E8%BF%9B%E7%A8%8B/"/>
    <id>https://jueee.github.io/2020/11/2020-11-23-Docker%E4%BD%BF%E7%94%A8Supervisor%E6%9D%A5%E7%AE%A1%E7%90%86%E8%BF%9B%E7%A8%8B/</id>
    <published>2020-11-23T00:00:00.000Z</published>
    <updated>2020-11-23T06:08:49.616Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Docker</strong> 容器在启动的时候开启单个进程。但我们经常需要在一个机器上开启多个服务，这可以有很多方法，最简单的就是把多个启动命令放到一个启动脚本里面，启动的时候直接启动这个脚本，另外就是安装进程管理工具。</p><p>本小节将使用进程管理工具 supervisor 来管理容器中的多个进程。使用 Supervisor 可以更好的控制、管理、重启我们希望运行的进程。</p><a id="more"></a><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><h4 id="Dockerfile-配置"><a href="#Dockerfile-配置" class="headerlink" title="Dockerfile 配置"></a>Dockerfile 配置</h4><p>执行 apt 安装时注意加入 <code>-y --no-install-recommends</code>，并且在安装完成后执行 <code>rm -rf /var/lib/apt/lists/* &amp;&amp; apt-get clean</code> 命令，可以有效减小镜像的体积。</p><pre class="language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">COPY sources.list /etc/apt/RUN apt-get update &amp;&amp; \    apt-get install -y --no-install-recommends \    cron supervisor &amp;&amp; \    rm -rf /var/lib/apt/lists/* &amp;&amp; \    apt-get cleanCOPY run-cron /etc/cron.d/run-cronRUN chmod 0644 /etc/cron.d/run-cronRUN crontab /etc/cron.d/run-cronCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.confCMD ["/usr/bin/supervisord"]</code></pre><p>其中，run-cron 文件内容如下：</p><pre class="language-none"><code class="language-none">PATH="/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"* * * * * echo `date` &gt;&gt; /tmp/crontab-date* * * * * /java-app-dir/healthCheck.sh</code></pre><p>这样安装完 cron 服务后，crontab 服务并不会自启动，还需要 <code>/etc/init.d/cron start</code> 的启动命令。</p><pre class="language-none"><code class="language-none"># 保存环境变量，开启crontab服务env &gt;&gt; /etc/default/locale/etc/init.d/cron start</code></pre><p><code>/etc/init.d/cron start</code> 用于启动 crontab 服务，但这样启动的 crontab 服务中配置的定时命令是没有 Dockerfile 中设置的环境变量的。</p><p>因此还需要在这之前执行 <code>env &gt;&gt; /etc/default/locale</code>，这样有 Dockerfile 中通过 <code>ENV</code> 设置的环境变量在 crontab 中就可以正常读取了。</p><h4 id="supervisor配置"><a href="#supervisor配置" class="headerlink" title="supervisor配置"></a>supervisor 配置</h4><p>supervisor 配置文件内容</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[supervisord]</span><span class="token constant">nodaemon</span><span class="token attr-value"><span class="token punctuation">=</span>true</span><span class="token selector">[program:cron]</span><span class="token constant">command</span><span class="token attr-value"><span class="token punctuation">=</span>/etc/init.d/cron start</span><span class="token selector">[program:javaapp]</span><span class="token constant">command</span><span class="token attr-value"><span class="token punctuation">=</span>/bin/bash -c "/java-app-dir/appCtrl.sh start &amp;&amp; tail -f /dev/null"</span></code></pre><p>配置文件包含目录和进程：</p><ul><li>第一段 supervsord 配置软件本身，使用 nodaemon 参数来运行。</li><li>第二段包含要控制的 2 个服务。每一段包含一个服务的目录和启动这个服务的命令。</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>创建镜像。</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> docker build -t test/supervisord <span class="token builtin class-name">.</span></code></pre><p>启动 supervisor 容器。</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> docker run -t -i test/supervisords<span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:53,271 INFO Included extra <span class="token function">file</span> <span class="token string">"/etc/supervisor/conf.d/supervisord.conf"</span> during parsing<span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:53,282 INFO RPC interface <span class="token string">'supervisor'</span> initialized<span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:53,282 CRIT Server <span class="token string">'unix_http_server'</span> running without any HTTP authentication checking<span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:53,282 INFO supervisord started with pid <span class="token number">1</span><span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:54,284 INFO spawned: <span class="token string">'cron'</span> with pid <span class="token number">8</span><span class="token number">2020</span>-11-23 <span class="token number">13</span>:48:54,286 INFO spawned: <span class="token string">'javaapp'</span> with pid <span class="token number">9</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; 容器在启动的时候开启单个进程。但我们经常需要在一个机器上开启多个服务，这可以有很多方法，最简单的就是把多个启动命令放到一个启动脚本里面，启动的时候直接启动这个脚本，另外就是安装进程管理工具。&lt;/p&gt;
&lt;p&gt;本小节将使用进程管理工具 supervisor 来管理容器中的多个进程。使用 Supervisor 可以更好的控制、管理、重启我们希望运行的进程。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://jueee.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://jueee.github.io/tags/Docker/"/>
    
    <category term="Supervisor" scheme="https://jueee.github.io/tags/Supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Debian 下配置网络的方法</title>
    <link href="https://jueee.github.io/2020/11/2020-11-20-Debian%E4%B8%8B%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://jueee.github.io/2020/11/2020-11-20-Debian%E4%B8%8B%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2020-11-20T00:00:00.000Z</published>
    <updated>2020-11-23T08:40:14.241Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><h4 id="配置网卡"><a href="#配置网卡" class="headerlink" title="配置网卡"></a>配置网卡</h4><p>修改 /etc/network/interfaces 添加如下</p><pre class="language-none"><code class="language-none"># #号后面是备注，不要添加哦！ auto eth0 #开机自动激活iface eth0 inte static #静态IPaddress 192.168.0.56 #本机IPnetmask 255.255.255.0 #子网掩码gateway 192.168.0.254 #路由网关 #因为我是通过路由上网的，所以配置为静态IP和网关</code></pre><p>如果是用 DHCP 自动获取，请在配置文件里添加如下：</p><pre class="language-none"><code class="language-none">iface eth0 inet dhcp</code></pre><h4 id="设置DNS"><a href="#设置DNS" class="headerlink" title="设置DNS"></a>设置 DNS</h4><pre class="language-none"><code class="language-none">echo "nameserver 202.96.128.86" &gt;&gt; /etc/resolv.conf#请设置为你当地的DNS</code></pre><p>到这里配置好以后，重启一下网络。</p><h4 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h4><pre class="language-none"><code class="language-none">/etc/init.d/networking restart</code></pre><h3 id="网卡配置"><a href="#网卡配置" class="headerlink" title="网卡配置"></a>网卡配置</h3><p><strong>ifup 命令</strong> 用于激活指定的网络接口。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动网卡eth1</span><span class="token function">ifup</span> eth1</code></pre><p><strong>ifdown 命令</strong> 用于禁用指定的网络接口。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 停止网卡eth1</span><span class="token function">ifdown</span> eth1</code></pre><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p>问题描述：</p><p>配置完 /etc/networking/interfaces 后，使用 /etc/init.d/networking restart 出现启动失败，根据提示输入 systemctl status networking.service 发现不认识 /etc/networking/interfaces 中配置的虚拟网卡 (或者是因为虚拟机的重新移动导致的设备不匹配问题等)</p><p>解决方法：</p><p>首先可以查看 etc/udev/rules.d/70-persistent-net.rules 是否存在，如果存在，则删除 rm etc/udev/rules.d/70-persistent-net.rules，重启即可</p><p>如果 etc/udev/rules.d/70-persistent-net.rules 不存在，则 ifconfig -a 查看全部网卡，修改 /etc/networking/interfaces 中的网卡名和 ifconfig -a 命令显示的网卡名匹配，重启网络即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;网络配置&quot;&gt;&lt;a href=&quot;#网络配置&quot; class=&quot;headerlink&quot; title=&quot;网络配置&quot;&gt;&lt;/a&gt;网络配置&lt;/h3&gt;&lt;h4 id=&quot;配置网卡&quot;&gt;&lt;a href=&quot;#配置网卡&quot; class=&quot;headerlink&quot; title=&quot;配置网卡&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
