<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小决的专栏</title>
  
  <subtitle>进一寸有一寸的欢喜</subtitle>
  <link href="https://jueee.github.io/atom.xml" rel="self"/>
  
  <link href="https://jueee.github.io/"/>
  <updated>2022-01-19T08:47:35.644Z</updated>
  <id>https://jueee.github.io/</id>
  
  <author>
    <name>小决</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式之环视边界匹配</title>
    <link href="https://jueee.github.io/2022/01/2022-01-19-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B9%8B%E7%8E%AF%E8%A7%86%E8%BE%B9%E7%95%8C%E5%8C%B9%E9%85%8D/"/>
    <id>https://jueee.github.io/2022/01/2022-01-19-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B9%8B%E7%8E%AF%E8%A7%86%E8%BE%B9%E7%95%8C%E5%8C%B9%E9%85%8D/</id>
    <published>2022-01-19T00:00:00.000Z</published>
    <updated>2022-01-19T08:47:35.644Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式大家都比较熟悉了，基础的语法就不多介绍了。今天主要分享下一种叫做 “环视边界” 的匹配规则，在特定场景下，是一个非常有用的技巧。</p><a id="more"></a><h3 id="环视边界匹配规则"><a href="#环视边界匹配规则" class="headerlink" title="环视边界匹配规则"></a>环视边界匹配规则</h3><p>顾名思义，环视边界匹配仍然是一种边界匹配。而环视的字面意思就是左右看看，需要左右符合一些条件，本质上，它也是匹配边界，对边界有一些要求，这个要求是针对左边或右边的字符串的。</p><p>根据要求不同，分为 4 种环视：</p><ol><li>肯定顺序环视，语法是 (? =...)，要求右边的字符串匹配指定的表达式。比如表达式 abc (? =def), (? =def) 在字符 c 右面，即匹配 c 右面的边界。对这个边界的要求是：它的右边有 def，比如 abcdef，如果没有，比如 abcd，则不匹配。</li><li>否定顺序环视，语法是 (? ! ...)，要求右边的字符串不能匹配指定的表达式。比如表达式 s (? ! ing)，匹配一般的 s，但不匹配后面有 ing 的 s。注意：避免与排除型字符组混淆，比如 <code>s[^ing]</code>,<code>s[^ing]</code>&nbsp;匹配的是两个字符，第一个是 s，第二个是 i、n、g 以外的任意一个字符。</li><li>肯定逆序环视，语法是 (? &lt;=...)，要求左边的字符串匹配指定的表达式。比如表达式 (? &lt;=\s) abc, (? &lt;=\s) 在字符 a 左边，即匹配 a 左边的边界。对这个边界的要求是：它的左边必须是空白字符。</li><li>否定逆序环视，语法是 (? &lt;! ...)，要求左边的字符串不能匹配指定的表达式。比如表达式 (? &lt;! \w) cat, (? &lt;! \w) 在字符 c 左边，即匹配 c 左边的边界。对这个边界的要求是：它的左边不能是单词字符。</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="邮编"><a href="#邮编" class="headerlink" title="邮编"></a>邮编</h4><p>国内的邮编为 6 位数字，那么最简单的规则就是</p><blockquote><p>[0-9]{6}</p></blockquote><p>这个规则可用于判断给定的一个字符串是否是邮编，但是这个正则用于查找是不够的，比如输入 1234567，7 个字符，同样也满足这个表达式，但这肯定不是一个邮编。这怎么办呢？可以使用环视边界匹配，对于左边界，它前面的字符不能是数字，环视表达式为：</p><blockquote><p>(?&lt;![0-9])</p></blockquote><p>对于右边界，它右边的字符不能是数字，环视表达式为：</p><blockquote><p>(?![0-9])</p></blockquote><p>那么完整的表达式就是：</p><blockquote><p>(?&lt;![0-9])[0-9]{6}(?![0-9])</p></blockquote><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>邮编是相对比较简单的例子，对于其他复杂的表达式，我们都可以按照这个方法，在原有的表达式基础上，加上环视边界规则，这样，我们的正则表达式不仅可以用于判断，也可以用于查找。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;正则表达式大家都比较熟悉了，基础的语法就不多介绍了。今天主要分享下一种叫做 “环视边界” 的匹配规则，在特定场景下，是一个非常有用的技巧。&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://jueee.github.io/categories/Blog/"/>
    
    
    <category term="Blog" scheme="https://jueee.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>使用 gzip 压缩优化 Vue 的项目</title>
    <link href="https://jueee.github.io/2022/01/2022-01-12-%E4%BD%BF%E7%94%A8gzip%E5%8E%8B%E7%BC%A9%E4%BC%98%E5%8C%96Vue%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
    <id>https://jueee.github.io/2022/01/2022-01-12-%E4%BD%BF%E7%94%A8gzip%E5%8E%8B%E7%BC%A9%E4%BC%98%E5%8C%96Vue%E7%9A%84%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-01-12T00:00:00.000Z</published>
    <updated>2022-01-19T08:47:35.642Z</updated>
    
    <content type="html"><![CDATA[<p>因 chunk-vendors 过大导致首屏加载太慢的优化。</p><a id="more"></a><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装 compression-webpack-plugin 插件。</p><p>前端将文件打包成.gz 文件，然后通过 nginx 的配置，让浏览器直接解析.gz 文件，可以大大提升文件加载的速度。</p><p>npm 使用下面命令安装</p><pre class="language-none"><code class="language-none">npm install --save-dev compression-webpack-plugin</code></pre><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>修改 vue 的配置文件 vue.config.js：</p><pre class="language-none"><code class="language-none">const webpack = require('webpack')const CompressionWebpackPlugin = require('compression-webpack-plugin')const productionGzipExtensions = ['js', 'css']module.exports = {  configureWebpack: {    plugins: [      // 配置compression-webpack-plugin压缩      new CompressionWebpackPlugin({        algorithm: 'gzip',        test: new RegExp('\\.(' + productionGzipExtensions.join('|') + ')$'),        threshold: 10240,        minRatio: 0.8      }),      new webpack.optimize.LimitChunkCountPlugin({        maxChunks: 5,         minChunkSize: 100      })    ]  }}</code></pre><h3 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h3><pre class="language-none"><code class="language-none">server{    listen 8087;    server_name localhost;    gzip on;    gzip_min_length 1k;    gzip_comp_level 9;    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;    gzip_vary on;    gzip_disable "MSIE [1-6]\.";    location /appShare {       client_max_body_size    10m;       root /home/test/webIndex/appShare;       try_files $uri $uri/ /appShare/index.html;       index index.htm index.html;    }}</code></pre><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>打包的时候报了如下错误：</p><pre class="language-none"><code class="language-none">ERROR  TypeError: Cannot read property 'tapPromise' of undefinedTypeError: Cannot read property 'tapPromise' of undefined</code></pre><p>这是插件版本的问题。</p><p>安装这个插件的时候安装的是最新版本，但脚手架配置 gzip 打包还不支持这个版本的。</p><p>在降低版本后发现使用正常：</p><pre class="language-none"><code class="language-none">npm install compression-webpack-plugin@6.1.1 --save-dev</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;因 chunk-vendors 过大导致首屏加载太慢的优化。&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jueee.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jueee.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 开启 https 访问模式</title>
    <link href="https://jueee.github.io/2022/01/2022-01-11-Vue%E5%BC%80%E5%90%AFhttps%E8%AE%BF%E9%97%AE%E6%A8%A1%E5%BC%8F/"/>
    <id>https://jueee.github.io/2022/01/2022-01-11-Vue%E5%BC%80%E5%90%AFhttps%E8%AE%BF%E9%97%AE%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-01-11T00:00:00.000Z</published>
    <updated>2022-01-19T08:47:35.640Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数字证书"><a href="#数字证书" class="headerlink" title="数字证书"></a>数字证书</h3><p>数字证书是一种用于电脑的身份识别机制。</p><p>由数字证书颁发机构（CA）对使用私钥创建的签名请求文件做的签名（盖章），表示 CA 结构对证书持有者的认可。</p><p>数字证书拥有以下几个优点：</p><ol><li>使用数字证书能够提高用户的可信度</li><li>数字证书中的公钥，能够与服务端的私钥配对使用，实现数据传输过程中的加密和解密</li><li>在证认使用者身份期间，使用者的敏感个人数据并不会被传输至证书持有者的网络系统上</li></ol><a id="more"></a><h3 id="X-509-证书"><a href="#X-509-证书" class="headerlink" title="X.509 证书"></a>X.509 证书</h3><p>在密码学中，X.509 是一个标准，规范了公开秘钥认证、证书吊销列表、授权凭证、凭证路径验证算法等。</p><p>浏览器检查一个证书是否仍然有效有两种方法： </p><ul><li>OCSP (Online Certificate Status Protocol，在线证书状态协议) 。</li><li>CRL（Certificate Revoke List，证书吊销列表）。</li></ul><p>X.509 证书包含三个文件：key，csr，crt。</p><ol><li>key 是服务器上的私钥文件，用于对发送给客户端数据的加密，以及对从客户端接收到数据的解密。</li><li>csr 是证书签名请求文件，用于提交给证书颁发机构（CA）对证书签名</li><li> crt 是由证书颁发机构（CA）签名后的证书，或者是开发者自签名的证书，包含证书持有人的信息，持有人的公钥，以及签署者的签名等信息。</li></ol><h3 id="生成本地证书"><a href="#生成本地证书" class="headerlink" title="生成本地证书"></a>生成本地证书</h3><p>检查是否安装 openssl</p><pre class="language-none"><code class="language-none">$ openssl version -aOpenSSL 1.0.2g  1 Mar 2016built on: reproducible build, date unspecifiedplatform: mingw64options:  bn(64,64) rc4(16x,int) des(idx,cisc,2,long) idea(int) blowfish(idx)compiler: gcc -I. -I.. -I../include -I/mingw64/include -D_WINDLL -DOPENSSL_PIC -DZLIB_SHARED -DZLIB -DOPENSSL_THREADS -D_MT -DDSO_WIN32 -DL_ENDIAN -O3 -Wall -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASMOPENSSLDIR: "/mingw64/ssl"</code></pre><p>生成证书：</p><ol><li><p>在 buid 文件夹下新建 cert 文件夹，在 cert 目录下打开 git bash 输入以下命令生成私钥 .key 文件</p><pre class="language-none"><code class="language-none">$ openssl genrsa -out private.key 2048</code></pre><p><img src="/images/2022/01/image-20220111151414571.png" alt="image-20220111151414571" loading="lazy"></p></li><li><p>通过上面生成的私钥文件生成 CSR 证书签名，根据要求填写一些相关信息，可一路按回车即可</p><pre class="language-none"><code class="language-none">$ openssl req -new -key private.key -out csr.key</code></pre><p><img src="/images/2022/01/image-20220111151507258.png" alt="image-20220111151507258" loading="lazy"></p></li><li><p>根据上述私钥文件和 csr 证书签名文件生成证书文件：</p><pre class="language-none"><code class="language-none">$ openssl x509 -req -days 3650 -in csr.key -signkey private.key -out file.crt</code></pre><p><img src="/images/2022/01/image-20220111151552974.png" alt="image-20220111151552974" loading="lazy"></p></li></ol><p>执行完成后，cert 目录下分别生成 private.key、csr.key、file.crt 三个文件。</p><p>如果报错：</p><pre class="language-none"><code class="language-none">&lt;s&gt; [webpack.Progress] 10% building 2/2 modules 0 active ERROR  Error: error:140AB18F:SSL routines:SSL_CTX_use_certificate:ee key too smallError: error:140AB18F:SSL routines:SSL_CTX_use_certificate:ee key too small    at Object.createSecureContext (_tls_common.js:135:17)    at Server (_tls_wrap.js:870:27)    at new Server (https.js:62:14)    at Object.createServer (https.js:85:10)    at Server.createServer (……/node_modules/webpack-dev-server/lib/Server.js:677:35)    at new Server (……/node_modules/webpack-dev-server/lib/Server.js:128:10)    at serve (……/node_modules/@vue/cli-service/lib/commands/serve.js:172:20)    at process._tickCallback (internal/process/next_tick.js:68:7)    at Function.Module.runMain (internal/modules/cjs/loader.js:832:11)    at startup (internal/bootstrap/node.js:283:19)    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)</code></pre><p>原因是使用的私钥长度太短了，需要高于 1024 位，这里我们再重新生成一个 2048 位的密钥和证书。</p><p>替换掉上面的私钥和证书文件就可以了。</p><h3 id="配置-https"><a href="#配置-https" class="headerlink" title="配置 https"></a>配置 https</h3><p>在 <code>vue.config.js</code> 中添加代码：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'https'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token comment">// All configuration item explanations can be find in https://cli.vuejs.org/config/</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>    https<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    https<span class="token operator">:</span> <span class="token punctuation">{</span>       key<span class="token operator">:</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./build/cert/private.key'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       cert<span class="token operator">:</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./build/cert/file.crt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       ca<span class="token operator">:</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'./build/cert/file.crt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;数字证书&quot;&gt;&lt;a href=&quot;#数字证书&quot; class=&quot;headerlink&quot; title=&quot;数字证书&quot;&gt;&lt;/a&gt;数字证书&lt;/h3&gt;&lt;p&gt;数字证书是一种用于电脑的身份识别机制。&lt;/p&gt;
&lt;p&gt;由数字证书颁发机构（CA）对使用私钥创建的签名请求文件做的签名（盖章），表示 CA 结构对证书持有者的认可。&lt;/p&gt;
&lt;p&gt;数字证书拥有以下几个优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用数字证书能够提高用户的可信度&lt;/li&gt;
&lt;li&gt;数字证书中的公钥，能够与服务端的私钥配对使用，实现数据传输过程中的加密和解密&lt;/li&gt;
&lt;li&gt;在证认使用者身份期间，使用者的敏感个人数据并不会被传输至证书持有者的网络系统上&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jueee.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jueee.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>实现前端 Excel 导出 (支持多 Sheet)</title>
    <link href="https://jueee.github.io/2021/12/2021-12-23-%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%20Excel%20%E5%AF%BC%E5%87%BA(%E6%94%AF%E6%8C%81%E5%A4%9ASheet)/"/>
    <id>https://jueee.github.io/2021/12/2021-12-23-%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%20Excel%20%E5%AF%BC%E5%87%BA(%E6%94%AF%E6%8C%81%E5%A4%9ASheet)/</id>
    <published>2021-12-23T00:00:00.000Z</published>
    <updated>2022-01-11T09:11:20.265Z</updated>
    
    <content type="html"><![CDATA[<p>实现纯前端的 Excel 导出 (支持多 sheet)。</p><a id="more"></a><h3 id="HTML-JS-导出"><a href="#HTML-JS-导出" class="headerlink" title="HTML+JS 导出"></a>HTML+JS 导出</h3><p>依赖：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/xlsx/dist/xlsx.core.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><p>样例：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>展示 用xlsx库 导出excel，含多个sheet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>展示 用xlsx库 导出excel，含多个sheet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>export<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">padding</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #69f<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>downloadExcel()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> 导出excel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/xlsx/dist/xlsx.core.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      <span class="token comment">// 将workbook装化成blob对象</span>     <span class="token keyword">function</span> <span class="token function">workbook2blob</span><span class="token punctuation">(</span><span class="token parameter">workbook</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment">// 生成excel的配置项</span>         <span class="token keyword">var</span> wopts <span class="token operator">=</span> <span class="token punctuation">{</span>             <span class="token comment">// 要生成的文件类型</span>             bookType<span class="token operator">:</span> <span class="token string">"xlsx"</span><span class="token punctuation">,</span>             <span class="token comment">// // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性</span>             bookSST<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>             type<span class="token operator">:</span> <span class="token string">"binary"</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> wbout <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> wopts<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 将字符串转ArrayBuffer</span>                 <span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">s2ab</span><span class="token punctuation">(</span>wbout<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>             type<span class="token operator">:</span> <span class="token string">"application/octet-stream"</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> blob<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">s2ab</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> buf<span class="token punctuation">;</span>     <span class="token punctuation">}</span>         <span class="token comment">// 将blob对象创建bloburl，然后用a标签实现弹出下载框</span>     <span class="token keyword">function</span> <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> blob <span class="token operator">==</span> <span class="token string">"object"</span> <span class="token operator">&amp;&amp;</span> blob <span class="token keyword">instanceof</span> <span class="token class-name">Blob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             blob <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建blob地址</span>         <span class="token punctuation">}</span>         <span class="token keyword">var</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> blob<span class="token punctuation">;</span>         <span class="token comment">// HTML5新增的属性，指定保存文件名，可以不要后缀，注意，有时候 file:///模式下不会生效</span>         aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> event<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>MouseEvent<span class="token punctuation">)</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//   移动端</span>         <span class="token keyword">else</span> <span class="token punctuation">{</span>             event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">"MouseEvents"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             event<span class="token punctuation">.</span><span class="token function">initMouseEvent</span><span class="token punctuation">(</span> <span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> window<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         aLink<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">downloadExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">debugger</span><span class="token punctuation">;</span> <span class="token comment">// 用的例子</span> <span class="token keyword">let</span> sheet1data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> department<span class="token operator">:</span> <span class="token string">"行政部"</span><span class="token punctuation">,</span> count<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> department<span class="token operator">:</span> <span class="token string">"前端部"</span><span class="token punctuation">,</span> count<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">let</span> sheet2data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token keyword">do</span><span class="token operator">:</span> <span class="token string">"整理文件"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token keyword">do</span><span class="token operator">:</span> <span class="token string">"打印"</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">let</span> sheet3data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"张大人"</span><span class="token punctuation">,</span> <span class="token keyword">do</span><span class="token operator">:</span> <span class="token string">"vue"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">"李大人"</span><span class="token punctuation">,</span> <span class="token keyword">do</span><span class="token operator">:</span> <span class="token string">"react"</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">var</span> sheet1 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheet1data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">var</span> sheet2 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheet2data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">var</span> sheet3 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheet3data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* create a new blank workbook */</span> <span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet1<span class="token punctuation">,</span> <span class="token string">"部门统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet2<span class="token punctuation">,</span> <span class="token string">"行政部"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet3<span class="token punctuation">,</span> <span class="token string">"前端部"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">const</span> workbookBlob <span class="token operator">=</span> <span class="token function">workbook2blob</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>workbookBlob<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">部门统计.xlsx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="Vue-导出"><a href="#Vue-导出" class="headerlink" title="Vue 导出"></a>Vue 导出</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p><code>npm install xlsx --save</code></p><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>在组件中导入 xlsx</p><pre class="language-html" data-language="html"><code class="language-html">import XLSX from 'xlsx';</code></pre><h4 id="导出方法"><a href="#导出方法" class="headerlink" title="导出方法"></a>导出方法</h4><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">workbookData</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">const</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> res <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"analysisTask/edit/"</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>res_type <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>res_type<span class="token punctuation">;</span>        <span class="token keyword">const</span> accountRes <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>account_res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> tradeRes <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>trade_res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> operationRes <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>operation_res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheetData1 <span class="token operator">=</span> accountRes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'登录帐号'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>mainAccount<span class="token punctuation">,</span>            <span class="token string">'手机'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>            <span class="token string">'邮箱'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>email<span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheetData2 <span class="token operator">=</span> tradeRes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'登录帐号'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>mainAccount<span class="token punctuation">,</span>            <span class="token string">'手机'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>            <span class="token string">'邮箱'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>email<span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheetData3 <span class="token operator">=</span> operationRes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'登录帐号'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>mainAccount<span class="token punctuation">,</span>            <span class="token string">'手机'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>            <span class="token string">'邮箱'</span><span class="token operator">:</span> item<span class="token punctuation">.</span>email<span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheet1 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheetData1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheet2 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheetData2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> sheet3 <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">json_to_sheet</span><span class="token punctuation">(</span>sheetData3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet1<span class="token punctuation">,</span> <span class="token string">'账户信息1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet2<span class="token punctuation">,</span> <span class="token string">'账户信息2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> sheet3<span class="token punctuation">,</span> <span class="token string">'账户信息3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取Excel数据失败:"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> wb<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">/**  * 加载菜单表格  */</span><span class="token keyword">async</span> <span class="token function">downExcel</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> wb <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">workbookData</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token keyword">const</span> workbookBlob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">workbook2blob</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 导出最后的总表</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>workbookBlob<span class="token punctuation">,</span> <span class="token string">'任务结果.xlsx'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><h4 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h4><h5 id="openDownloadDialog"><a href="#openDownloadDialog" class="headerlink" title="openDownloadDialog"></a>openDownloadDialog</h5><p>将 blob 对象创建 bloburl，然后用 a 标签实现弹出下载框：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">openDownloadDialog</span><span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> blob <span class="token operator">==</span> <span class="token string">"object"</span> <span class="token operator">&amp;&amp;</span> blob <span class="token keyword">instanceof</span> <span class="token class-name">Blob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        blob <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建blob地址</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> blob<span class="token punctuation">;</span>    <span class="token comment">// HTML5新增的属性，指定保存文件名，可以不要后缀，注意，有时候 file:///模式下不会生效</span>    aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> event<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>MouseEvent<span class="token punctuation">)</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//   移动端</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">"MouseEvents"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        event<span class="token punctuation">.</span><span class="token function">initMouseEvent</span><span class="token punctuation">(</span> <span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> window<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    aLink<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><h5 id="workbook2blob"><a href="#workbook2blob" class="headerlink" title="workbook2blob"></a>workbook2blob</h5><p>将 workbook 装化成 blob 对象：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token function">workbook2blob</span><span class="token punctuation">(</span><span class="token parameter">workbook</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// 生成excel的配置项</span>    <span class="token keyword">var</span> wopts <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token comment">// 要生成的文件类型</span>        bookType<span class="token operator">:</span> <span class="token string">"xlsx"</span><span class="token punctuation">,</span>        <span class="token comment">// // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性</span>        bookSST<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        type<span class="token operator">:</span> <span class="token string">"binary"</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> wbout <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> wopts<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 将字符串转ArrayBuffer</span>    <span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">s2ab</span><span class="token punctuation">(</span>wbout<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        type<span class="token operator">:</span> <span class="token string">"application/octet-stream"</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> blob<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">s2ab</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> view<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> buf<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><h3 id="压缩包导出"><a href="#压缩包导出" class="headerlink" title="压缩包导出"></a>压缩包导出</h3><h4 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre class="language-shell" data-language="shell"><code class="language-shell">npm i jszip -Snpm i file-saver -S </code></pre><h4 id="增加按钮"><a href="#增加按钮" class="headerlink" title="增加按钮"></a>增加按钮</h4><p>实现多选非常简单：手动添加一个 <code>el-table-column</code>，设 <code>type</code> 属性为 <code>selection</code> 即可</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-icon-circle-plus-outline<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>batchDownload<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>批量下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span>          <span class="token attr-name">border</span>          <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>          <span class="token attr-name">v-loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span>          <span class="token attr-name">stripe</span>          <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>analysisTaskData<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">          <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>          <span class="token attr-name">@selection-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleSelectionChange<span class="token punctuation">"</span></span>        <span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selection<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ID<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>类型<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">&gt;</span></span></code></pre><p>对应方法</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      multipleSelection<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function">handleSelectionChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection <span class="token operator">=</span> val<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">batchDownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"批量下载成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="下载方法"><a href="#下载方法" class="headerlink" title="下载方法"></a>下载方法</h4><pre class="language-vue" data-language="vue"><code class="language-vue">import JSZip from 'jszip'import FileSaver from 'file-saver'</code></pre><p>下载方法</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">batchDownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">const</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id    <span class="token keyword">const</span> wb <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">workbookData</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token keyword">const</span> file_name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>multipleSelection<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token operator">+</span><span class="token string">'-任务结果('</span><span class="token operator">+</span>id<span class="token operator">+</span><span class="token string">').xlsx'</span>    zip<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">workbook2blob</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> binary<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> zipName <span class="token operator">=</span> <span class="token string">'批量下载'</span>  zip<span class="token punctuation">.</span><span class="token function">generateAsync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span><span class="token string">"blob"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">content</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>     <span class="token comment">//生成zip文件包</span>    FileSaver<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>zipName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"批量下载成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
    
    
    <summary type="html">&lt;p&gt;实现纯前端的 Excel 导出 (支持多 sheet)。&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://jueee.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://jueee.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Logstash 修改日志输出索引默认模版中的分片和备份</title>
    <link href="https://jueee.github.io/2021/12/2021-12-20-Logstash%E4%BF%AE%E6%94%B9%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA%E7%B4%A2%E5%BC%95%E9%BB%98%E8%AE%A4%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%88%86%E7%89%87%E5%92%8C%E5%A4%87%E4%BB%BD/"/>
    <id>https://jueee.github.io/2021/12/2021-12-20-Logstash%E4%BF%AE%E6%94%B9%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA%E7%B4%A2%E5%BC%95%E9%BB%98%E8%AE%A4%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%88%86%E7%89%87%E5%92%8C%E5%A4%87%E4%BB%BD/</id>
    <published>2021-12-20T00:00:00.000Z</published>
    <updated>2021-12-21T09:30:32.917Z</updated>
    
    <content type="html"><![CDATA[<p>在 kibana 执行</p><pre class="language-ruby" data-language="ruby"><code class="language-ruby"><span class="token constant">GET</span> <span class="token operator">/</span>_template<span class="token operator">/</span>logstash</code></pre><p>获取 es 中 logstash 的模版信息。</p><a id="more"></a><p><img src="/images/2021/12/image-20211220164106126.png" alt="image-20211220164106126" loading="lazy"></p><h3 id="修改模板"><a href="#修改模板" class="headerlink" title="修改模板"></a>修改模板</h3><p>通过 PUT 命令修改 logstash 的默认模版如下:</p><pre class="language-json" data-language="json"><code class="language-json">PUT /_template/logstash<span class="token punctuation">{</span>  <span class="token property">"logstash"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"order"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"version"</span> <span class="token operator">:</span> <span class="token number">60001</span><span class="token punctuation">,</span>    <span class="token property">"index_patterns"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"logstash-*"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"settings"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"index"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"lifecycle"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"tenday_policy"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"routing"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"allocation"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"exclude"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"tag"</span> <span class="token operator">:</span> <span class="token string">"hot"</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"refresh_interval"</span> <span class="token operator">:</span> <span class="token string">"5s"</span><span class="token punctuation">,</span>        <span class="token property">"number_of_shards"</span> <span class="token operator">:</span> <span class="token string">"10"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"mappings"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"dynamic_templates"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          <span class="token property">"message_field"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"path_match"</span> <span class="token operator">:</span> <span class="token string">"message"</span><span class="token punctuation">,</span>            <span class="token property">"mapping"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"norms"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"text"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"match_mapping_type"</span> <span class="token operator">:</span> <span class="token string">"string"</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"string_fields"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"mapping"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"norms"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>              <span class="token property">"fields"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"keyword"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>                  <span class="token property">"ignore_above"</span> <span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">,</span>                  <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"keyword"</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"match_mapping_type"</span> <span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>            <span class="token property">"match"</span> <span class="token operator">:</span> <span class="token string">"*"</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"properties"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"@timestamp"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"date"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"geoip"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"dynamic"</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token property">"properties"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"ip"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"ip"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"latitude"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"half_float"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"location"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"geo_point"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"longitude"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"half_float"</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"@version"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"type"</span> <span class="token operator">:</span> <span class="token string">"keyword"</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"aliases"</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="检查修改"><a href="#检查修改" class="headerlink" title="检查修改"></a>检查修改</h3><p>设置成功后我们执行</p><pre class="language-ruby" data-language="ruby"><code class="language-ruby"><span class="token constant">GET</span> <span class="token operator">/</span>_template<span class="token operator">/</span>logstash</code></pre><p>查看名为 logstash 的模版名的模版信息。</p><p>可以看到，分片数据已经修改成功了！</p><h3 id="Put-方法"><a href="#Put-方法" class="headerlink" title="Put 方法"></a>Put 方法</h3><p>put 方法完全参考官方的模版设置方法：</p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS83LjQvaW5kaWNlcy10ZW1wbGF0ZXMuaHRtbA==">https://www.elastic.co/guide/en/elasticsearch/reference/7.4/indices-templates.html<i class="fa fa-external-link-alt"></i></span></p></blockquote><p>可以根据需要设置相关信息。</p><p>另外注意设置的时候不能光设置 setting，其他比如 mapping 不设置的话，默认为给置为空。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 kibana 执行&lt;/p&gt;
&lt;pre class=&quot;language-ruby&quot; data-language=&quot;ruby&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;&lt;span class=&quot;token constant&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;_template&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;logstash&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取 es 中 logstash 的模版信息。&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Linux" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/Linux/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Logstash" scheme="https://jueee.github.io/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>Logstash 的搭建和安装</title>
    <link href="https://jueee.github.io/2021/12/2021-12-18-Logstash%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E5%AE%89%E8%A3%85/"/>
    <id>https://jueee.github.io/2021/12/2021-12-18-Logstash%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E5%AE%89%E8%A3%85/</id>
    <published>2021-12-18T00:00:00.000Z</published>
    <updated>2021-12-21T09:30:32.915Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Logstash-介绍"><a href="#Logstash-介绍" class="headerlink" title="Logstash 介绍"></a>Logstash 介绍</h3><p>Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的 “存储库” 中。</p><a id="more"></a><ul><li>官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9wcm9kdWN0cy9sb2dzdGFzaA==">https://www.elastic.co/cn/products/logstash<i class="fa fa-external-link-alt"></i></span></li><li> 下载：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvbG9nc3Rhc2g=">https://www.elastic.co/cn/downloads/logstash<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="Logstash-安装"><a href="#Logstash-安装" class="headerlink" title="Logstash 安装"></a>Logstash 安装</h3><pre class="language-none"><code class="language-none">$ wget https://artifacts.elastic.co/downloads/logstash/logstash-7.5.1.tar.gz$ tar -xvf logstash-7.5.1.tar.gz</code></pre><h3 id="Logstash-测试"><a href="#Logstash-测试" class="headerlink" title="Logstash 测试"></a>Logstash 测试</h3><p>通过最基本的 Logstash 管道来测试一下刚才安装的 Logstash：</p><pre class="language-none"><code class="language-none">$ ./logstash -e 'input { stdin {} } output { stdout {} }'hello worldThread.exclusive is deprecated, use Thread::MutexSending Logstash logs to /home/ant/logstash-7.5.1/logs which is now configured via log4j2.properties[2021-12-20T17:03:31,600][WARN ][logstash.config.source.multilocal] Ignoring the 'pipelines.yml' file because modules or command line options are specified[2021-12-20T17:03:31,837][INFO ][logstash.runner          ] Starting Logstash {"logstash.version"=&gt;"7.5.1"}[2021-12-20T17:03:35,048][INFO ][org.reflections.Reflections] Reflections took 60 ms to scan 1 urls, producing 20 keys and 40 values[2021-12-20T17:03:38,149][WARN ][org.logstash.instrument.metrics.gauge.LazyDelegatingGauge][main] A gauge metric of an unknown type (org.jruby.RubyArray) has been create for key: cluster_uuids. This may result in invalid serialization.  It is recommended to log an issue to the responsible developer/development team.[2021-12-20T17:03:38,178][INFO ][logstash.javapipeline    ][main] Starting pipeline {:pipeline_id=&gt;"main", "pipeline.workers"=&gt;40, "pipeline.batch.size"=&gt;125, "pipeline.batch.delay"=&gt;50, "pipeline.max_inflight"=&gt;5000, "pipeline.sources"=&gt;["config string"], :thread=&gt;"#&lt;Thread:0x3e417478 run&gt;"}[2021-12-20T17:03:38,373][INFO ][logstash.javapipeline    ][main] Pipeline started {"pipeline.id"=&gt;"main"}The stdin plugin is now waiting for input:[2021-12-20T17:03:38,503][INFO ][logstash.agent           ] Pipelines running {:count=&gt;1, :running_pipelines=&gt;[:main], :non_running_pipelines=&gt;[]}[2021-12-20T17:03:38,976][INFO ][logstash.agent           ] Successfully started Logstash API endpoint {:port=&gt;9600}/home/ant/logstash-7.5.1/vendor/bundle/jruby/2.5.0/gems/awesome_print-1.7.0/lib/awesome_print/formatters/base_formatter.rb:31: warning: constant ::Fixnum is deprecated{       "message" =&gt; "hello world",      "@version" =&gt; "1",          "host" =&gt; "dm31.jd.163.org",    "@timestamp" =&gt; 2021-12-20T09:03:38.481Z}</code></pre><h3 id="启动-Logstash"><a href="#启动-Logstash" class="headerlink" title="启动 Logstash"></a>启动 Logstash</h3><p>在 config 文件夹下新增配置 first-pipeline.conf：</p><pre class="language-none"><code class="language-none"># Sample Logstash configuration for creating a simple# Beats -&gt; Logstash -&gt; Elasticsearch pipeline.input {  beats {    port =&gt; 5044  }}output {  elasticsearch {    hosts =&gt; ["localhost:9200"]    index =&gt; "logstash-%{[@metadata][beat]}-%{+YYYY.MM}"    #user =&gt; "elastic"    #password =&gt; "changeme"  }}</code></pre><p>启动 Logstash：</p><pre class="language-none"><code class="language-none">$ ./bin/logstash -f config/first-pipeline.conf </code></pre><p>--config.reload.automatic 选项的意思是启用自动配置加载，以至于每次你修改完配置文件以后无需停止然后重启 Logstash</p><pre class="language-none"><code class="language-none">$ ./bin/logstash -f config/first-pipeline.conf --config.reload.automatic &amp;</code></pre><p>--config.test_and_exit 选项的意思是解析配置文件并报告任何错误</p><pre class="language-none"><code class="language-none">$ ./bin/logstash -f config/first-pipeline.conf --config.test_and_exit &amp;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Logstash-介绍&quot;&gt;&lt;a href=&quot;#Logstash-介绍&quot; class=&quot;headerlink&quot; title=&quot;Logstash 介绍&quot;&gt;&lt;/a&gt;Logstash 介绍&lt;/h3&gt;&lt;p&gt;Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的 “存储库” 中。&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Linux" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/Linux/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
    <category term="软件" scheme="https://jueee.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Logstash" scheme="https://jueee.github.io/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>Springboot 启用 https 安全协议</title>
    <link href="https://jueee.github.io/2021/12/2021-12-17-Springboot%E5%90%AF%E7%94%A8https%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/"/>
    <id>https://jueee.github.io/2021/12/2021-12-17-Springboot%E5%90%AF%E7%94%A8https%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/</id>
    <published>2021-12-17T00:00:00.000Z</published>
    <updated>2021-12-20T09:18:27.240Z</updated>
    
    <content type="html"><![CDATA[<p>有时候我们需要使用 https 安全协议，本文记录在 SpringBoot 项目启用 https。</p><a id="more"></a><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><h4 id="自签名证书"><a href="#自签名证书" class="headerlink" title="自签名证书"></a>自签名证书</h4><p>使用 java jdk 自带的生成 SSL 证书的工具 keytool 生成自己的证书</p><p>打开 cmd，输入命令生成证书：</p><pre class="language-shell" data-language="shell"><code class="language-shell">keytool -genkeypair -alias tomcat_https -keypass <span class="token number">123456</span> -keyalg RSA -keysize <span class="token number">1024</span> -validity <span class="token number">365</span> -keystore e:/tomcat_https.keystore -storepass <span class="token number">123456</span></code></pre><p>如下图所示：</p><p><img src="/images/2021/12/image-20211217150947402.png" alt="image-20211217150947402" loading="lazy"></p><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><p>把生成的 tomcat_https.keystore 放在 resources 里：</p><p><img src="/images/2021/12/image-20211217151120125.png" alt="image-20211217151120125" loading="lazy"></p><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>在 <code>application.properties</code> 配置文件中增加配置：</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#https默认端口：443，http默认端口：80</span><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">443</span><span class="token attr-name">server.http-port</span><span class="token punctuation">=</span><span class="token attr-value">80</span><span class="token comment">#开启https，配置跟证书一一对应</span><span class="token attr-name">server.ssl.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token comment">#指定证书</span><span class="token attr-name">server.ssl.key-store</span><span class="token punctuation">=</span><span class="token attr-value">classpath:tomcat_https.keystore</span><span class="token attr-name">server.ssl.key-store-type</span><span class="token punctuation">=</span><span class="token attr-value">JKS</span><span class="token comment">#别名</span><span class="token attr-name">server.ssl.key-alias</span><span class="token punctuation">=</span><span class="token attr-value">tomcat_https</span><span class="token comment">#密码</span><span class="token attr-name">server.ssl.key-password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token attr-name">server.ssl.key-store-password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">springboot-https</span></code></pre><h4 id="加载keystore文件"><a href="#加载keystore文件" class="headerlink" title="加载keystore文件"></a>加载 keystore 文件</h4><p>Springboot 工程可能出现不能加载<code>.keystore</code> 文件的情况 (can not load .keystore)</p><p>明明是加入到了类路径，但却没有加载，于是到编译生成的 target\class 去找 tomcat_https.keystore 文件，发现确实没有这个文件，那么就是在编译的时候将这个 tomcat_https.keystore 文件排除了。</p><p>注意 tomcat_https.keystore 文件是二进制文件，应该是这个插件将这个过滤了。</p><p>此时，需要在项目 pom 文件中增加如下配置：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>*.keystore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>*.keystore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="测试功能"><a href="#测试功能" class="headerlink" title="测试功能"></a>测试功能</h3><p>测试类：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/info"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"init info.."</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success!!!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>访问：<span class="exturl" data-url="aHR0cHM6Ly8xMjcuMC4wLjEvaGVsbG8vaW5mbw==">https://127.0.0.1:443/hello/info<i class="fa fa-external-link-alt"></i></span></p><p><img src="/images/2021/12/image-20211217152249160.png" alt="image-20211217152249160" loading="lazy"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;有时候我们需要使用https安全协议，本文记录在SpringBoot项目启用https。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/categories/Java/SpringBoot/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/tags/SpringBoot/"/>
    
    <category term="keytool" scheme="https://jueee.github.io/tags/keytool/"/>
    
    <category term="https" scheme="https://jueee.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>应用 ELK 收集各模块日志处理流程</title>
    <link href="https://jueee.github.io/2021/12/2021-12-16-%E5%BA%94%E7%94%A8ELK%E6%94%B6%E9%9B%86%E5%90%84%E6%A8%A1%E5%9D%97%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/"/>
    <id>https://jueee.github.io/2021/12/2021-12-16-%E5%BA%94%E7%94%A8ELK%E6%94%B6%E9%9B%86%E5%90%84%E6%A8%A1%E5%9D%97%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B/</id>
    <published>2021-12-16T00:00:00.000Z</published>
    <updated>2021-12-21T09:39:24.720Z</updated>
    
    <content type="html"><![CDATA[<h3 id="日志处理流程"><a href="#日志处理流程" class="headerlink" title="日志处理流程"></a>日志处理流程</h3><p><img src="/images/2021/12/1589975604187.png" alt="1589975604187" loading="lazy"></p><a id="more"></a><h3 id="Java-项目改造"><a href="#Java-项目改造" class="headerlink" title="Java 项目改造"></a>Java 项目改造</h3><h4 id="一、log4j2-xml-项目改造"><a href="#一、log4j2-xml-项目改造" class="headerlink" title="一、log4j2.xml 项目改造"></a>一、log4j2.xml 项目改造</h4><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appenders</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- kafka的appender配置 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Kafka</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>KafkaAppender<span class="token punctuation">"</span></span> <span class="token attr-name">topic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logger-channel<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DEBUG<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ACCEPT<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webphishing|%d|%level|%logger{15} - %m<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bootstrap.servers<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>localhost:9092<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Kafka</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appenders</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>loggers</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.apache.kafka<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>KafkaAppender<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>loggers</span><span class="token punctuation">&gt;</span></span></code></pre><ul><li><code>localhost:9092</code> 需要替换为 kafka 地址即可。</li><li><code>logger-channel</code> 为 kafka 中的 topic 名称。</li></ul><h4 id="二、Springboot-项目改造"><a href="#二、Springboot-项目改造" class="headerlink" title="二、Springboot 项目改造"></a>二、Springboot 项目改造</h4><p>引入 maven 包：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.danielwegener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-kafka-appender<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.2.0-RC2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre><p>配置 logback-spring.xml</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- 模块名称配置，对应 application.properties 中的 spring.application.name --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProperty</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>context<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spring.application.name<span class="token punctuation">"</span></span>  <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>undefinded<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!-- Kafka 配置，对应 application.properties 中的 spring.kafka.bootstrap-servers --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProperty</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>context<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bootstrapServers<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spring.kafka.bootstrap-servers<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>localhost:9092<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>   <span class="token comment">&lt;!-- kafka的appender配置 --&gt;</span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>KafkaAppender<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.github.danielwegener.logback.kafka.KafkaAppender<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>${module}|%d|%level|%logger{15} - %msg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>topic</span><span class="token punctuation">&gt;</span></span>logger-channel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>topic</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keyingStrategy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>deliveryStrategy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>producerConfig</span><span class="token punctuation">&gt;</span></span>bootstrap.servers=${bootstrapServers}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>producerConfig</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>KafkaAppender<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span></code></pre><p>对应 <code>application.properties</code> 配置参考</p><pre class="language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">uploades</span><span class="token attr-name">spring.kafka.bootstrap-servers</span><span class="token punctuation">=</span><span class="token attr-value">127.0.0.1:9092</span></code></pre><p>开源 Git：</p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhbmllbHdlZ2VuZXIvbG9nYmFjay1rYWZrYS1hcHBlbmRlcg==">https://github.com/danielwegener/logback-kafka-appender<i class="fa fa-external-link-alt"></i></span></p></blockquote><h5 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h5><p>出现异常：</p><pre class="language-none"><code class="language-none">09:39:22,934 |-ERROR in ch.qos.logback.core.joran.spi.Interpreter@11:100 - no applicable action for [springProperty], current ElementPath is [[configuration][springProperty]]09:39:22,940 |-ERROR in ch.qos.logback.core.joran.spi.Interpreter@18:143 - no applicable action for [springProperty], current ElementPath is [[configuration][springProperty]]09:39:22,941 |-ERROR in ch.qos.logback.core.joran.spi.Interpreter@27:114 - no applicable action for [springProperty], current ElementPath is [[configuration][springProperty]]09:39:22,941 |-ERROR in ch.qos.logback.core.joran.spi.Interpreter@28:113 - no applicable action for [springProperty], current ElementPath is [[configuration][springProperty]]09:39:22,941 |-ERROR in ch.qos.logback.core.joran.spi.Interpreter@29:124 - no applicable action for [springProperty], current ElementPath is [[configuration][springProperty]]</code></pre><p>原因：如果项目中配置的日志文件的名称是 logback.xml 的话，logback 会先与 Spring 之前加载日志配置，这时日志文件中的 springProfile 的配置是无效的。按照官方文档的说法将 logback.xml 改为 logback-spring.xml 就可以了。</p><p>为什么 Spring Boot 推荐使用 logback-spring.xml 来替代 logback.xml 来配置 logback 日志的问题分析</p><p>最根本的原因：</p><p><img src="/images/2021/12/image-20210924151936675.png" alt="image-20210924151936675" loading="lazy"></p><p>即，logback.xml 加载早于 application.properties，所以如果你在 logback.xml 使用了变量时，而恰好这个变量是写在 application.properties 时，那么就会获取不到，只要改成 logback-spring.xml 就可以解决。</p><h3 id="LogStash-配置"><a href="#LogStash-配置" class="headerlink" title="LogStash 配置"></a>LogStash 配置</h3><p>配置 <code>config/core.conf</code>：</p><pre class="language-conf" data-language="conf"><code class="language-conf">input {  kafka {    id =&gt; "my_plugin_id"    bootstrap_servers =&gt; "127.0.0.1:9092"    topics =&gt; ["logger-channel"]    auto_offset_reset =&gt; "latest"    codec =&gt; plain {        charset =&gt; "UTF-8"    }  }}filter {   grok {      patterns_dir =&gt; ["./patterns"]            match =&gt; { "message" =&gt; "%{USERNAME:module}\|%{LOGBACKTIME:timestamp}\|%{LOGLEVEL:level}\|%{JAVACLASS:class} - %{JAVALOGMESSAGE:logmessage}" }    }}output {  stdout { codec =&gt; rubydebug }  elasticsearch {    hosts =&gt; ["127.0.0.1:9200"]    index =&gt; "logstash-%{+YYYY.MM}"  }}</code></pre><p>其中：</p><ul><li><code>index =&gt; "logstash-%{+YYYY.MM}"</code> 为 elasticsearch 的索引名称，在此表示按月建立索引。</li></ul><p>配置 <code>patterns/file</code>：</p><pre class="language-none"><code class="language-none">LOGBACKTIME 20%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:?%{MINUTE}(?::?%{SECOND})</code></pre><h4 id="时区配置"><a href="#时区配置" class="headerlink" title="时区配置"></a>时区配置</h4><p>LogStash 的 docker 容器时间不正确可以通过以下方式进行配置：</p><pre class="language-shell" data-language="shell"><code class="language-shell">docker run -it -d -p 5044:5044 -p 5045:5045         -v /usr/local/docker/logstash/config/:/usr/share/logstash/config/          -v /usr/local/docker/logstash/pipeline/:/usr/share/logstash/pipeline/          -v /usr/local/docker/logstash/jars/:/usr/share/logstash/logstash-core/lib/jars/          -e TZ="Asia/Shanghai"   # 重点：设置时区        -v /etc/localtime:/etc/localtime:ro  # 重点：宿主机的时钟要正确        --name=logstash   logstash:7.16.1</code></pre><h3 id="解析效果"><a href="#解析效果" class="headerlink" title="解析效果"></a>解析效果</h3><p><img src="/images/2021/12/1589975976799.png" alt="1589975976799" loading="lazy"></p><h3 id="方式优劣"><a href="#方式优劣" class="headerlink" title="方式优劣"></a>方式优劣</h3><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ul><li>模块改动最小，只需要改动日志配置。</li><li>不需要其他应用程序进行 Kafka 解析。</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>需要引入 Logstash 组件。</li><li>日志格式需要统一固定。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;日志处理流程&quot;&gt;&lt;a href=&quot;#日志处理流程&quot; class=&quot;headerlink&quot; title=&quot;日志处理流程&quot;&gt;&lt;/a&gt;日志处理流程&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/2021/12/1589975604187.png&quot; alt=&quot;1589975604187&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Logging Services" scheme="https://jueee.github.io/categories/Apache/Logging-Services/"/>
    
    
    <category term="Apache" scheme="https://jueee.github.io/tags/Apache/"/>
    
    <category term="Logging Services" scheme="https://jueee.github.io/tags/Logging-Services/"/>
    
  </entry>
  
  <entry>
    <title>Linux 批量替换文本相关使用汇总</title>
    <link href="https://jueee.github.io/2021/12/2021-12-15-Linux%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E6%9C%AC%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8%E6%B1%87%E6%80%BB/"/>
    <id>https://jueee.github.io/2021/12/2021-12-15-Linux%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E6%9C%AC%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8%E6%B1%87%E6%80%BB/</id>
    <published>2021-12-15T00:00:00.000Z</published>
    <updated>2021-12-20T09:18:27.234Z</updated>
    
    <content type="html"><![CDATA[<h4 id="sed-批量替换文件内容"><a href="#sed-批量替换文件内容" class="headerlink" title="sed 批量替换文件内容"></a>sed 批量替换文件内容</h4><p>格式：sed -i "s / 查找字段 / 替换字段 /g" 文件名</p><p>要求：将文件 1.txt 内的文字 “garden” 替换成 “mirGarden”</p><p>使用：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">sed</span> -i <span class="token string">"s/garden/mirGarden/g"</span> <span class="token number">1</span>.txt</code></pre><p>要求：将当前目录下的所有文件内的 “garden” 替换成 “mirGarden”</p><p>使用：（其实也就是 ls 出多个文件名而已）</p><pre class="language-none"><code class="language-none">sed -i "s/garden/mirGarden/g" `ls`</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;sed-批量替换文件内容&quot;&gt;&lt;a href=&quot;#sed-批量替换文件内容&quot; class=&quot;headerlink&quot; title=&quot;sed 批量替换文件内容&quot;&gt;&lt;/a&gt;sed 批量替换文件内容&lt;/h4&gt;&lt;p&gt;格式：sed -i &quot;s / 查找字段 / 替换字段 /g&quot;</summary>
      
    
    
    
    <category term="Linux" scheme="https://jueee.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://jueee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Apache Log4j2 安全漏洞修复及验证</title>
    <link href="https://jueee.github.io/2021/12/2021-12-13-Apache%20Log4j2%20%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%8F%8A%E9%AA%8C%E8%AF%81/"/>
    <id>https://jueee.github.io/2021/12/2021-12-13-Apache%20Log4j2%20%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%8F%8A%E9%AA%8C%E8%AF%81/</id>
    <published>2021-12-13T00:00:00.000Z</published>
    <updated>2021-12-20T09:18:27.233Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题链接"><a href="#问题链接" class="headerlink" title="问题链接"></a>问题链接</h3><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9sb2dnaW5nLmFwYWNoZS5vcmcvbG9nNGovMi54L3NlY3VyaXR5Lmh0bWw=">https://logging.apache.org/log4j/2.x/security.html<i class="fa fa-external-link-alt"></i></span></p></blockquote><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>受影响的版本：所有 <code>log4j-core</code> 版本 &gt;=2.0-beta9 和 &lt;=2.14.1</p><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Apache Log4j &lt;=2.14.1 在配置、日志消息和参数中使用的 JNDI 功能不能防止攻击者控制的 LDAP 和其他 JNDI 相关端点。当启用消息查找替换时，可以控制日志消息或日志消息参数的攻击者可以执行从 LDAP 服务器加载的任意代码。从 log4j 2.15.0 开始，默认情况下已禁用此行为。</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>可以将 log4j2 升级到 2.15.0 版本，修复解决该问题。</p><p>对于其他版本：</p><ul><li>对于 &gt;= 2.10 的版本，这种行为可以通过设定任一减轻系统属性 <code>log4j2.formatMsgNoLookups</code> 或环境变量 <code>LOG4J_FORMAT_MSG_NO_LOOKUPS=true</code>。</li><li>对于 &gt;=2.7 和 &lt;=2.14.1 的版本，<code>PatternLayout</code> 可以修改所有模式以将消息转换器指定为 ，<code>%m{nolookups}</code> 而不仅仅是 <code>%m</code>。</li><li>对于 &gt;= 2.0-beta9 和 &lt;= 2.10.0 的版本，可以去除 <code>JndiLookup</code> 从类路径类：<code>zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class</code>。</li></ul><h3 id="初步验证"><a href="#初步验证" class="headerlink" title="初步验证"></a>初步验证</h3><h4 id="Java-文件"><a href="#Java-文件" class="headerlink" title="Java 文件"></a>Java 文件</h4><p>Log4jCoreTest.java 文件：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Constants</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Log4jCoreTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">boolean</span> value <span class="token operator">=</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span>FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS<span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"value is:"</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>依赖 Jar 放入 lib 文件夹下：</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">ls</span>lib  Log4jCoreTest.class  Log4jCoreTest.java$ <span class="token function">ls</span> lib/log4j-api-2.13.3.jar  log4j-core-2.13.3.jar</code></pre><p>编译 Java 文件</p><pre class="language-shell" data-language="shell"><code class="language-shell">javac -encoding UTF-8 -classpath lib/log4j-core-2.13.3.jar Log4jCoreTest.java</code></pre><p>运行 Java 文件</p><pre class="language-shell" data-language="shell"><code class="language-shell">java -classpath .:./lib/*   Log4jCoreTest</code></pre><h4 id="加参数解决"><a href="#加参数解决" class="headerlink" title="加参数解决"></a>加参数解决</h4><pre class="language-shell" data-language="shell"><code class="language-shell">$ java -classpath .:./lib/*   Log4jCoreTestvalue is:false$ java -classpath .:./lib/*  -Dlog4j2.formatMsgNoLookups<span class="token operator">=</span>true  Log4jCoreTestvalue is:true</code></pre><h4 id="环境变量解决"><a href="#环境变量解决" class="headerlink" title="环境变量解决"></a>环境变量解决</h4><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token assign-left variable">LOG4J_FORMAT_MSG_NO_LOOKUPS</span><span class="token operator">=</span>false$ java -classpath .:./lib/*   Log4jCoreTestvalue is:false$ <span class="token assign-left variable">LOG4J_FORMAT_MSG_NO_LOOKUPS</span><span class="token operator">=</span>true$ java -classpath .:./lib/*   Log4jCoreTestvalue is:true$ <span class="token assign-left variable">LOG4J_FORMAT_MSG_NO_LOOKUPS</span><span class="token operator">=</span>false$ java -classpath .:./lib/*   Log4jCoreTestvalue is:false</code></pre><p>修改环境变量：</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">vi</span> .bash_profile<span class="token builtin class-name">export</span> <span class="token assign-left variable">LOG4J_FORMAT_MSG_NO_LOOKUPS</span><span class="token operator">=</span>true$ <span class="token builtin class-name">source</span> .bash_profile</code></pre><p>环境变量参考：</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9sb2dnaW5nLmFwYWNoZS5vcmcvbG9nNGovMi54L3NlY3VyaXR5Lmh0bWw=">官网<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9sb2dnaW5nLWxvZzRqMi9jb21taXQvM2JkNjhjMWRiOWIzNzJjNWMzMzhiYTkxMDhhZjEwODI4NTg5MTU3YSNkaWZmLThiZGMxNzRiMTVmOTZiZDkwMjdkNWQ2MzFmNWE3ZTc5ZDQwZGIwYTE3OTgzZGFlYTQ3MWU0MTk3Zjc1ZTAxYmM=">GitHub 代码提交<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9sb2dnaW5nLWxvZzRqMi9wdWxsLzYxNA==">GitDoc<i class="fa fa-external-link-alt"></i></span></li></ul><h4 id="升级-Jar-版本为-2-15-0"><a href="#升级-Jar-版本为-2-15-0" class="headerlink" title="升级 Jar 版本为 2.15.0+"></a>升级 Jar 版本为 2.15.0+</h4><pre class="language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">ls</span> lib/log4j-api-2.15.0.jar  log4j-core-2.15.0.jar$ java -classpath .:./lib/*   Log4jCoreTestvalue is:true</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题链接&quot;&gt;&lt;a href=&quot;#问题链接&quot; class=&quot;headerlink&quot; title=&quot;问题链接&quot;&gt;&lt;/a&gt;问题链接&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9sb2dnaW</summary>
      
    
    
    
    <category term="Apache" scheme="https://jueee.github.io/categories/Apache/"/>
    
    <category term="Logging Services" scheme="https://jueee.github.io/categories/Apache/Logging-Services/"/>
    
    
    <category term="Apache" scheme="https://jueee.github.io/tags/Apache/"/>
    
    <category term="Logging Services" scheme="https://jueee.github.io/tags/Logging-Services/"/>
    
  </entry>
  
  <entry>
    <title>Java 编译 class 并运行文件的 main 方法</title>
    <link href="https://jueee.github.io/2021/12/2021-12-10-Java%E7%BC%96%E8%AF%91class%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84main%E6%96%B9%E6%B3%95/"/>
    <id>https://jueee.github.io/2021/12/2021-12-10-Java%E7%BC%96%E8%AF%91class%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84main%E6%96%B9%E6%B3%95/</id>
    <published>2021-12-10T00:00:00.000Z</published>
    <updated>2021-12-20T09:18:27.230Z</updated>
    
    <content type="html"><![CDATA[<p>验证 jvm 参数对 Jar 包中参数值的影响。</p><a id="more"></a><h3 id="Java-文件"><a href="#Java-文件" class="headerlink" title="Java 文件"></a>Java 文件</h3><p>Log4jCoreTest.java 文件：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Constants</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Log4jCoreTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">boolean</span> value <span class="token operator">=</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span>FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS<span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"value is:"</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="依赖-Jar"><a href="#依赖-Jar" class="headerlink" title="依赖 Jar"></a>依赖 Jar</h3><p>放入 lib 文件夹下：</p><pre class="language-none"><code class="language-none">$ lslib  Log4jCoreTest.class  Log4jCoreTest.java$ ls lib/log4j-api-2.15.1.jar  log4j-core-2.15.1.jar</code></pre><h3 id="编译-Java-文件"><a href="#编译-Java-文件" class="headerlink" title="编译&nbsp;Java 文件"></a>编译&nbsp;Java 文件</h3><pre class="language-none"><code class="language-none">javac -encoding UTF-8 -classpath lib/log4j-core-2.13.3.jar Log4jCoreTest.java</code></pre><h3 id="运行-Java-文件"><a href="#运行-Java-文件" class="headerlink" title="运行 Java 文件"></a>运行 Java 文件</h3><pre class="language-none"><code class="language-none">java -classpath .:./lib/*   Log4jCoreTest</code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>如果是 2.13.3 版本：</p><pre class="language-none"><code class="language-none">$ java -classpath .:./lib/*   Log4jCoreTestvalue is:false$ java -classpath .:./lib/*  -Dlog4j2.formatMsgNoLookups=true  Log4jCoreTestvalue is:true</code></pre><p>如果是 2.15.1 版本：</p><pre class="language-none"><code class="language-none">$ java -classpath .:./lib/*   Log4jCoreTestvalue is:true</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;验证 jvm 参数对 Jar 包中参数值的影响。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>基于 colResizable-1.6 实现一个表头固定、列宽可调的 table</title>
    <link href="https://jueee.github.io/2021/11/2021-11-30-%E5%9F%BA%E4%BA%8EcolResizable-1.6%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%A1%A8%E5%A4%B4%E5%9B%BA%E5%AE%9A%E3%80%81%E5%88%97%E5%AE%BD%E5%8F%AF%E8%B0%83%E7%9A%84table/"/>
    <id>https://jueee.github.io/2021/11/2021-11-30-%E5%9F%BA%E4%BA%8EcolResizable-1.6%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%A1%A8%E5%A4%B4%E5%9B%BA%E5%AE%9A%E3%80%81%E5%88%97%E5%AE%BD%E5%8F%AF%E8%B0%83%E7%9A%84table/</id>
    <published>2021-11-30T00:00:00.000Z</published>
    <updated>2021-12-10T11:14:56.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="colResizable"><a href="#colResizable" class="headerlink" title="colResizable"></a>colResizable</h3><ul><li>官网：<span class="exturl" data-url="aHR0cDovL3d3dy5iYWN1YmFjdS5jb20vY29scmVzaXphYmxlLw==">http://www.bacubacu.com/colresizable/<i class="fa fa-external-link-alt"></i></span></li><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsdmFyby1wcmlldG8vY29sUmVzaXphYmxl">https://github.com/alvaro-prieto/colResizable<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ul><li>能够实现各列完全对齐</li><li>能够兼容有无滚动条两种情况</li><li>只能在表头部分拖动改变列宽（不能在表体列边框上拖动）</li></ul><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token selector">table</span> <span class="token punctuation">{</span>        <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token comment">/* 关键样式 */</span>        <span class="token property">table-layout</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.table-header tr th</span> <span class="token punctuation">{</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.table-body-wrapper</span> <span class="token punctuation">{</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 75px<span class="token punctuation">;</span>        <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">.table-body tr td</span> <span class="token punctuation">{</span>        <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>        <span class="token comment">/* 关键样式：不设置padding:0会导致无法完全对齐 */</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">padding-right</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-header-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-header<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span> header <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span> header header <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span> header <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-body-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-body<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span> cell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colResizable-1.6.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".table-header"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">colResizable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            liveDrag<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            onDrag<span class="token operator">:</span> syncCol        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//页面加载完成后，手动对齐一次</span>        <span class="token function">syncCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//window resize的时候，会出现列不完全对齐的情况，手动对齐</span>        <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">syncCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">syncCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.table-body tr:first-child td'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.table-header tr th:eq('</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></code></pre><h4 id="细节调整"><a href="#细节调整" class="headerlink" title="细节调整"></a>细节调整</h4><p>部分情况下，会出现上下列宽度不一致的情况，可再次微调：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">syncCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.table-body tr:first-child td'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> px <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.table-header tr th:eq('</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'px'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> pxN <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>px<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>pxN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;colResizable&quot;&gt;&lt;a href=&quot;#colResizable&quot; class=&quot;headerlink&quot; title=&quot;colResizable&quot;&gt;&lt;/a&gt;colResizable&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;官网：&lt;a href=&quot;http://www.bacubacu.com/colresizable/&quot;&gt;http://www.bacubacu.com/colresizable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub：&lt;a href=&quot;https://github.com/alvaro-prieto/colResizable&quot;&gt;https://github.com/alvaro-prieto/colResizable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://jueee.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://jueee.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JUNIT 运行错误 No tests were found</title>
    <link href="https://jueee.github.io/2021/11/2021-11-25-JUNIT%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AFNo%20tests%20were%20found/"/>
    <id>https://jueee.github.io/2021/11/2021-11-25-JUNIT%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AFNo%20tests%20were%20found/</id>
    <published>2021-11-25T00:00:00.000Z</published>
    <updated>2021-12-10T11:14:56.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="/images/2021/11/image-20211125145714774.png" alt="image-20211125145714774" loading="lazy"></p><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><ol><li>进行单元测试的方法不能有返回值，否则会报 No test were found</li><li> 进行单元测试的方法不能私有化</li><li> Junit 版本问题</li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>去掉单元测试的方法的返回值。</li><li>如果单元测试方法前有 <code>private</code> 等修饰符，需要去掉。</li></ol><p>如下图所示：</p><p><img src="/images/2021/11/image-20211125145846332.png" alt="image-20211125145846332" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/2021/11/image-20211125145714774.png&quot; alt=&quot;im</summary>
      
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>因为启用 WSL 导致 IDEA 启动报错解决</title>
    <link href="https://jueee.github.io/2021/11/2021-11-19-%E5%9B%A0%E4%B8%BA%E5%90%AF%E7%94%A8WSL%E5%AF%BC%E8%87%B4IDEA%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <id>https://jueee.github.io/2021/11/2021-11-19-%E5%9B%A0%E4%B8%BA%E5%90%AF%E7%94%A8WSL%E5%AF%BC%E8%87%B4IDEA%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</id>
    <published>2021-11-19T00:00:00.000Z</published>
    <updated>2021-11-19T09:46:44.051Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>因为启用 WSL 导致 IDEA 启动报错端口被占用。</p><a id="more"></a><p>错误如图：</p><p><img src="/images/2021/11/image-20211119170405922.png" alt="image-20211119170405922" loading="lazy"></p><p>IDEA 的启动日志路径：</p><blockquote><p>C:\Users\Administrator\AppData\Local\JetBrains\IdeaIC2021.1\log</p></blockquote><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>因为我要使用 docker，所以启用了 Hyper-V 和 WSL2，所以占用了 idea 的 more 端口</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>官方论坛给出了答案：<span class="exturl" data-url="aHR0cHM6Ly9pbnRlbGxpai1zdXBwb3J0LmpldGJyYWlucy5jb20vaGMvZW4tdXMvYXJ0aWNsZXMvMzYwMDA3NTY4NTU5">https://intellij-support.jetbrains.com/hc/en-us/articles/360007568559<i class="fa fa-external-link-alt"></i></span></p><p><img src="/images/2021/11/image-20211119170728493.png" alt="image-20211119170728493" loading="lazy"></p><ol><li><p>关闭 Hyper-V，可以在控制面板中关闭，也可以以管理员权限执行以下脚本，执行之后重启计算机</p><pre class="language-none"><code class="language-none">dism.exe /Online /Disable-Feature:Microsoft-Hyper-V</code></pre></li><li><p>更改端口，把端口号改成 6942~6991 间的任一个数字</p><pre class="language-none"><code class="language-none">netsh int ipv4 add excludedportrange protocol=tcp startport=&lt;端口号&gt; numberofports=1</code></pre></li><li><p>重新开启 Hyper-V，可以在控制面板开启或者以管理员执行下面脚本，执行之后重启计算机</p><pre class="language-none"><code class="language-none">dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All</code></pre></li></ol><p>问题解决，并且不影响 wsl 的使用。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;因为启用 WSL 导致 IDEA 启动报错端口被占用。&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Windows" scheme="https://jueee.github.io/categories/%E8%BD%AF%E4%BB%B6/Windows/"/>
    
    <category term="OS" scheme="https://jueee.github.io/categories/OS/"/>
    
    <category term="Windows" scheme="https://jueee.github.io/categories/OS/Windows/"/>
    
    
    <category term="Windows" scheme="https://jueee.github.io/tags/Windows/"/>
    
    <category term="OS" scheme="https://jueee.github.io/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>API 接口设计之 token+sign 具体架构与实现</title>
    <link href="https://jueee.github.io/2021/11/2021-11-09-API%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E4%B9%8Btoken+sign%E5%85%B7%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://jueee.github.io/2021/11/2021-11-09-API%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E4%B9%8Btoken+sign%E5%85%B7%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-11-09T00:00:00.000Z</published>
    <updated>2022-01-19T08:45:56.997Z</updated>
    
    <content type="html"><![CDATA[<p>在实际的业务中，难免会跟第三方系统进行数据的交互与传递，那么如何保证数据在传输过程中的安全呢（防窃取）？</p><p>除了 https 的协议之外，能不能加上通用的一套算法以及规范来保证传输的安全性呢？</p><a id="more"></a><h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><h4 id="token-简介"><a href="#token-简介" class="headerlink" title="token 简介"></a>token 简介</h4><p>Token：访问令牌 access token, 用于接口中，用于标识接口调用者的身份、凭证，减少用户名和密码的传输次数。一般情况下客户端 (接口调用方) 需要先向服务器端申请一个接口调用的账号，服务器会给出一个 appId 和一个 key, key 用于参数签名使用，注意 key 保存到客户端，需要做一些安全处理，防止泄露。</p><p>Token 的值一般是 UUID，服务端生成 Token 后需要将 token 做为 key，将一些和 token 关联的信息作为 value 保存到缓存服务器中 (redis)，当一个请求过来后，服务器就去缓存服务器中查询这个 Token 是否存在，存在则调用接口，不存在返回接口错误，一般通过拦截器或者过滤器来实现，Token 分为两种：</p><ul><li>API Token (接口令牌): 用于访问不需要用户登录的接口，如登录、注册、一些基本数据的获取等。 获取接口令牌需要拿 appId、timestamp 和 sign 来换，sign = 加密 (timestamp+key)</li><li>USER Token (用户令牌): 用于访问需要用户登录之后的接口，如：获取我的基本信息、保存、修改、删除等操作。获取用户令牌需要拿用户名和密码来换</li></ul><p>关于 Token 的时效性：token 可以是一次性的、也可以在一段时间范围内是有效的，具体使用哪种看业务需要。</p><p>一般情况下接口最好使用 https 协议，如果使用 http 协议，Token 机制只是一种减少被黑的可能性，其实只能防君子不能防小人。</p><p>一般 token、timestamp 和 sign 三个参数会在接口中会同时作为参数传递，每个参数都有各自的用途。</p><h4 id="timestamp-简介"><a href="#timestamp-简介" class="headerlink" title="timestamp 简介"></a>timestamp 简介</h4><p>timestamp: 时间戳，是客户端调用接口时对应的当前时间戳，时间戳用于防止 DoS 攻击。当黑客劫持了请求的 url 去 DoS 攻击，每次调用接口时接口都会判断服务器当前系统时间和接口中传的的 timestamp 的差值，如果这个差值超过某个设置的时间 (假如 5 分钟)，那么这个请求将被拦截掉，如果在设置的超时时间范围内，是不能阻止 DoS 攻击的。 timestamp 机制只能减轻 DoS 攻击的时间，缩短攻击时间。如果黑客修改了时间戳的值可通过 sign 签名机制来处理。</p><h5 id="DoS"><a href="#DoS" class="headerlink" title="DoS"></a>DoS</h5><p>DoS 是 Denial of Service 的简称，即拒绝服务，造成 DoS 的攻击行为被称为 DoS 攻击，其目的是使计算机或网络无法提供正常的服务。最常见的 DoS 攻击有计算机网络带宽攻击和连通性攻击。</p><p>DoS 攻击是指故意的攻击网络协议实现的缺陷或直接通过野蛮手段残忍地耗尽被攻击对象的资源，目的是让目标计算机或网络无法提供正常的服务或资源访问，使目标系统服务系统停止响应甚至崩溃，而在此攻击中并不包括侵入目标服务器或目标网络设备。这些服务资源包括网络带宽，文件系统空间容量，开放的进程或者允许的连接。这种攻击会导致资源的匮乏，无论计算机的处理速度多快、内存容量多大、网络带宽的速度多快都无法避免这种攻击带来的后果。</p><ul><li>Pingflood: 该攻击在短时间内向目的主机发送大量 ping 包，造成网络堵塞或主机资源耗尽。</li><li>Synflood: 该攻击以多个随机的源主机地址向目的主机发送 SYN 包，而在收到目的主机的 SYN ACK 后并不回应，这样，目的主机就为这些源主机建立了大量的连接队列，而且由于没有收到 ACK 一直维护着这</li></ul><p>些队列，造成了资源的大量消耗而不能向正常请求提供服务。</p><ul><li>Smurf：该攻击向一个子网的广播地址发一个带有特定请求（如 ICMP 回应请求）的包，并且将源地址伪装成想要攻击的主机地址。子网上所有主机都回应广播包请求而向被攻击主机发包，使该主机受到攻击。</li><li>Land-based：攻击者将一个包的源地址和目的地址都设置为目标主机的地址，然后将该包通过 IP 欺骗的方式发送给被攻击主机，这种包可以造成被攻击主机因试图与自己建立连接而陷入死循环，从而很大程度地降低了系统性能。</li><li>Ping of Death：根据 TCP/IP 的规范，一个包的长度最大为 65536 字节。尽管一个包的长度不能超过 65536 字节，但是一个包分成的多个片段的叠加却能做到。当一个主机收到了长度大于 65536 字节的包时，就是受到了 Ping of Death 攻击，该攻击会造成主机的宕机。</li><li>Teardrop：IP 数据包在网络传递时，数据包可以分成更小的片段。攻击者可以通过发送两段（或者更多）数据包来实现 TearDrop 攻击。第一个包的偏移量为 0，长度为 N，第二个包的偏移量小于 N。为了合并这些数据段，TCP/IP 堆栈会分配超乎寻常的巨大资源，从而造成系统资源的缺乏甚至机器的重新启动。</li><li>PingSweep：使用 ICMP Echo 轮询多个主机。</li></ul><h4 id="sign-简介"><a href="#sign-简介" class="headerlink" title="sign 简介"></a>sign 简介</h4><p>nonce：随机值，是客户端随机生成的值，作为参数传递过来，随机值的目的是增加 sign 签名的多变性。随机值一般是数字和字母的组合，6 位长度，随机值的组成和长度没有固定规则。</p><p>sign: 一般用于参数签名，防止参数被非法篡改，最常见的是修改金额等重要敏感参数， sign 的值一般是将所有非空参数按照升续排序然后 + token+key+timestamp+nonce (随机数) 拼接在一起，然后使用某种加密算法进行加密，作为接口中的一个参数 sign 来传递，也可以将 sign 放到请求头中。接口在网络传输过程中如果被黑客挟持，并修改其中的参数值，然后再继续调用接口，虽然参数的值被修改了，但是因为黑客不知道 sign 是如何计算出来的，不知道 sign 都有哪些值构成，不知道以怎样的顺序拼接在一起的，最重要的是不知道签名字符串中的 key 是什么，所以黑客可以篡改参数的值，但没法修改 sign 的值，当服务器调用接口前会按照 sign 的规则重新计算出 sign 的值然后和接口传递的 sign 参数的值做比较，如果相等表示参数值没有被篡改，如果不等，表示参数被非法篡改了，就不执行接口了。</p><h4 id="防止重复提交"><a href="#防止重复提交" class="headerlink" title="防止重复提交"></a>防止重复提交</h4><p>对于一些重要的操作需要防止客户端重复提交的 (如非幂等性重要操作)，具体办法是当请求第一次提交时将 sign 作为 key 保存到 redis，并设置超时时间，超时时间和 Timestamp 中设置的差值相同。当同一个请求第二次访问时会先检测 redis 是否存在该 sign，如果存在则证明重复提交了，接口就不再继续调用了。如果 sign 在缓存服务器中因过期时间到了，而被删除了，此时当这个 url 再次请求服务器时，因 token 的过期时间和 sign 的过期时间一直，sign 过期也意味着 token 过期，那样同样的 url 再访问服务器会因 token 错误会被拦截掉，这就是为什么 sign 和 token 的过期时间要保持一致的原因。拒绝重复调用机制确保 URL 被别人截获了也无法使用（如抓取数据）。</p><p>对于哪些接口需要防止重复提交可以自定义个注解来标记。</p><p>注意：所有的安全措施都用上的话有时候难免太过复杂，在实际项目中需要根据自身情况作出裁剪，比如可以只使用签名机制就可以保证信息不会被篡改，或者定向提供服务的时候只用 Token 机制就可以了。如何裁剪，全看项目实际情况和对接口安全性的要求。</p><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><ol><li>接口调用方 (客户端) 向接口提供方 (服务器) 申请接口调用账号，申请成功后，接口提供方会给接口调用方一个 appId 和一个 key 参数</li><li>客户端携带参数 appId、timestamp、sign 去调用服务器端的 API token，其中 sign = 加密 (appId + timestamp + key)</li><li> 客户端拿着 api_token 去访问不需要登录就能访问的接口</li><li>当访问用户需要登录的接口时，客户端跳转到登录页面，通过用户名和密码调用登录接口，登录接口会返回一个 usertoken, 客户端拿着 usertoken 去访问需要登录才能访问的接口</li></ol><p>sign 的作用是防止参数被篡改，客户端调用服务端时需要传递 sign 参数，服务器响应客户端时也可以返回一个 sign 用于客户度校验返回的值是否被非法篡改了。客户端传的 sign 和服务器端响应的 sign 算法可能会不同。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0p1ZWVlL2Jsb2ctcHJvamVjdC90cmVlL21haW4vaHR0cC1pbnRlcmZhY2UtdG9rZW4=">https://github.com/Jueee/blog-project/tree/main/http-interface-token<i class="fa fa-external-link-alt"></i></span></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;在实际的业务中，难免会跟第三方系统进行数据的交互与传递，那么如何保证数据在传输过程中的安全呢（防窃取）？&lt;/p&gt;
&lt;p&gt;除了 https 的协议之外，能不能加上通用的一套算法以及规范来保证传输的安全性呢？&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://jueee.github.io/categories/Java/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/categories/Java/SpringBoot/"/>
    
    
    <category term="Java" scheme="https://jueee.github.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="https://jueee.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>HTML 表格单元格增加双击复制功能</title>
    <link href="https://jueee.github.io/2021/10/2021-10-28-HTML%E8%A1%A8%E6%A0%BC%E5%8D%95%E5%85%83%E6%A0%BC%E5%A2%9E%E5%8A%A0%E5%8F%8C%E5%87%BB%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://jueee.github.io/2021/10/2021-10-28-HTML%E8%A1%A8%E6%A0%BC%E5%8D%95%E5%85%83%E6%A0%BC%E5%A2%9E%E5%8A%A0%E5%8F%8C%E5%87%BB%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/</id>
    <published>2021-10-28T00:00:00.000Z</published>
    <updated>2021-10-28T09:14:04.160Z</updated>
    
    <content type="html"><![CDATA[<p>在 HTML 表格中，单元格内容复制有些不方便，考虑增加双击复制功能。</p><a id="more"></a><h3 id="表格示例"><a href="#表格示例" class="headerlink" title="表格示例"></a>表格示例</h3><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>resultInfo<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>附件名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>附件MD5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>附件大小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">detailList</span> <span class="token attr-name">as</span> <span class="token attr-name">temp</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>${temp.attachName?default("")?html}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>${temp.attachMD5?default("")?html}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>${temp.attachSize?default("")?html}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">copyTableInfoById</span><span class="token punctuation">(</span><span class="token string">'mailAttachTaskResultInfo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><h3 id="复制单元格函数"><a href="#复制单元格函数" class="headerlink" title="复制单元格函数"></a>复制单元格函数</h3><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">copyTableInfoById</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> idInfo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> td<span class="token operator">=</span>idInfo<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//查询所有td标签,组成数组</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>td<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//循环绑定点击事件</span>      td<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">ondblclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//绑定点击事件</span>        <span class="token keyword">var</span> info <span class="token operator">=</span> <span class="token function">strip</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>info<span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            toastr<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">"复制内容为空，请确认！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span><span class="token function-variable function">oncopy</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">,</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>oncopy<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">'Copy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        toastr<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"已复制："</span><span class="token operator">+</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>其中：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">strip</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">var</span> tmp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   tmp<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">;</span>   <span class="token keyword">var</span> ulInfo <span class="token operator">=</span> tmp<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>ulInfo<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> ulInfo<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      ulInfo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token keyword">return</span> tmp<span class="token punctuation">.</span>textContent<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> tmp<span class="token punctuation">.</span>innerText<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="toastr-弹出框"><a href="#toastr-弹出框" class="headerlink" title="toastr 弹出框"></a>toastr 弹出框</h3><ul><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9jb2Rlc2V2ZW4uZ2l0aHViLmlvL3RvYXN0ci8=">https://codeseven.github.io/toastr/<i class="fa fa-external-link-alt"></i></span></li><li>GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NvZGVTZXZlbi90b2FzdHI=">https://github.com/CodeSeven/toastr<i class="fa fa-external-link-alt"></i></span></li><li>演示地址：<span class="exturl" data-url="aHR0cHM6Ly9jb2Rlc2V2ZW4uZ2l0aHViLmlvL3RvYXN0ci9kZW1vLmh0bWw=">https://codeseven.github.io/toastr/demo.html<i class="fa fa-external-link-alt"></i></span></li></ul><h4 id="toastr-引入"><a href="#toastr-引入" class="headerlink" title="toastr 引入"></a>toastr 引入</h4><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/toastr/2.1.4/toastr.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/toastr/2.1.4/toastr.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><p>注，toastr 是基于 jquery 的插件，需要先引入 jquery：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>libs/jquery-2.0.2.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>libs/jquery-ui-1.10.3.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre><h4 id="toastr-配置"><a href="#toastr-配置" class="headerlink" title="toastr 配置"></a>toastr 配置</h4><pre class="language-js" data-language="js"><code class="language-js">toastr<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token string">"positionClass"</span><span class="token operator">:</span> <span class="token string">"toast-center-center"</span><span class="token punctuation">,</span>  <span class="token comment">//弹出窗的位置</span>   <span class="token string">"showDuration"</span><span class="token operator">:</span> <span class="token string">"100"</span><span class="token punctuation">,</span><span class="token comment">//显示的动画时间</span>   <span class="token string">"hideDuration"</span><span class="token operator">:</span> <span class="token string">"300"</span><span class="token punctuation">,</span> <span class="token comment">//消失的动画时间</span>   <span class="token string">"timeOut"</span><span class="token operator">:</span> <span class="token string">"1000"</span> <span class="token comment">//展现时间</span><span class="token punctuation">}</span></code></pre><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>对于其他 API 调用，看到演示。</p><pre class="language-none"><code class="language-none">toastr.info('Are you the 6 fingered man?')</code></pre><p><strong>其他选项</strong></p><p>显示一个警告，没有标题</p><pre class="language-none"><code class="language-none">toastr.warning('My name is Inigo Montoya. You killed my father, prepare to die!')</code></pre><p>显示一个成功，标题</p><pre class="language-none"><code class="language-none">toastr.success('Have fun storming the castle!', 'Miracle Max Says')</code></pre><p>显示错误标题</p><pre class="language-none"><code class="language-none">toastr.error('I do not think that word means what you think it means.', 'Inconceivable!')</code></pre><p>清除当前的列表</p><pre class="language-none"><code class="language-none">toastr.clear()</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 HTML表格中，单元格内容复制有些不方便，考虑增加双击复制功能。&lt;/p&gt;</summary>
    
    
    
    <category term="HTML" scheme="https://jueee.github.io/categories/HTML/"/>
    
    
    <category term="HTML" scheme="https://jueee.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>k8s 数据清理</title>
    <link href="https://jueee.github.io/2021/10/2021-10-26-k8s%E6%95%B0%E6%8D%AE%E6%B8%85%E7%90%86/"/>
    <id>https://jueee.github.io/2021/10/2021-10-26-k8s%E6%95%B0%E6%8D%AE%E6%B8%85%E7%90%86/</id>
    <published>2021-10-26T00:00:00.000Z</published>
    <updated>2021-10-26T03:18:00.880Z</updated>
    
    <content type="html"><![CDATA[<p>批量删除状态为 <code>Evicted</code> 的 pod：</p><pre class="language-none"><code class="language-none">$ kubectl get pods | grep Evicted | awk '{print $1}' | xargs kubectl delete pod</code></pre><p>批量删除状态为 <code>Terminating</code> 的 pod：</p><pre class="language-none"><code class="language-none">$ kubectl get pods | grep Terminating | awk '{print $1}' | xargs kubectl delete pod --grace-period=0 --force</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;批量删除状态为 &lt;code&gt;Evicted&lt;/code&gt; 的 pod：&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;$ kubectl get pods | grep Evicted | awk &#39;{</summary>
      
    
    
    
    <category term="Container" scheme="https://jueee.github.io/categories/Container/"/>
    
    <category term="Kubernetes" scheme="https://jueee.github.io/categories/Container/Kubernetes/"/>
    
    
    <category term="Container" scheme="https://jueee.github.io/tags/Container/"/>
    
    <category term="Kubernetes" scheme="https://jueee.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Docker 命令查看并清理数据卷及磁盘</title>
    <link href="https://jueee.github.io/2021/10/2021-10-19-Docker%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E5%B9%B6%E6%B8%85%E7%90%86%E6%95%B0%E6%8D%AE%E5%8D%B7%E5%8F%8A%E7%A3%81%E7%9B%98/"/>
    <id>https://jueee.github.io/2021/10/2021-10-19-Docker%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E5%B9%B6%E6%B8%85%E7%90%86%E6%95%B0%E6%8D%AE%E5%8D%B7%E5%8F%8A%E7%A3%81%E7%9B%98/</id>
    <published>2021-10-19T00:00:00.000Z</published>
    <updated>2021-10-22T11:00:27.925Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 在长时间使用的情况下，经常需要删除旧的容器并创建新的容器，长此以往，Docker 的数据卷 volumes 会产生了非常多的僵尸文件。</p><p>以下介绍如何查看并清理这些僵尸文件。</p><a id="more"></a><h3 id="查询僵尸文件"><a href="#查询僵尸文件" class="headerlink" title="查询僵尸文件"></a>查询僵尸文件</h3><p>在 Docker 1.9 以上的版本中，官方提供用于查询僵尸文件的命令：</p><pre class="language-none"><code class="language-none">$ docker volume ls -qf dangling=true</code></pre><p>Docker 1.13 引入了类似于 Linux 上 df 的命令，用于查看 Docker 的磁盘使用情况</p><pre class="language-none"><code class="language-none">$ docker system dfTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLEImages              47                  47                  11.89GB             879.7MB (7%)Containers          156                 154                 868.7GB             0B (0%)Local Volumes       642                 28                  1.359TB             389.5GB (28%)Build Cache         0                   0                   0B                  0B</code></pre><p>上述信息可以看出：</p><ul><li>Docker 镜像占用了 11.89GB 磁盘，</li><li>Docker 容器占用了 868.7GB 磁盘，</li><li>Docker 数据卷占用了 1.359TB 磁盘。</li></ul><h3 id="删除无用数据卷"><a href="#删除无用数据卷" class="headerlink" title="删除无用数据卷"></a>删除无用数据卷</h3><h4 id="手动删除命令"><a href="#手动删除命令" class="headerlink" title="手动删除命令"></a>手动删除命令</h4><p>删除所有 dangling 数据卷（即无用的 Volume，僵尸文件）：</p><pre class="language-none"><code class="language-none">$ docker volume rm $(docker volume ls -qf dangling=true)</code></pre><p>删除所有 dangling 镜像（即无 tag 的镜像）：</p><pre class="language-none"><code class="language-none">$ docker rmi $(docker images | grep "^&lt;none&gt;" | awk "{print $3}")</code></pre><p>删除所有关闭的容器：</p><pre class="language-none"><code class="language-none">$ docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm</code></pre><h4 id="清理none对象"><a href="#清理none对象" class="headerlink" title="清理none对象"></a>清理 none 对象</h4><p>删除关闭的容器、无用的数据卷和网络，以及 dangling 镜像（即无 tag 的镜像）</p><p>注意，所有关闭的容器都会被删除，请核查是否存在关闭运行但是需要保留的容器！</p><p>删除关闭的容器、无用的数据卷和网络：</p><pre class="language-none"><code class="language-none">$ docker system pruneWARNING! This will remove:  - all stopped containers  - all networks not used by at least one container  - all dangling images  - all dangling build cacheAre you sure you want to continue? [y/N] y</code></pre><p>删除更彻底，可以将没有容器使用 Docker 镜像都删掉：</p><pre class="language-none"><code class="language-none">$ docker system prune -aWARNING! This will remove:  - all stopped containers  - all networks not used by at least one container  - all images without at least one container associated to them  - all build cacheAre you sure you want to continue? [y/N] y</code></pre><p><code>docker system prune</code> 命令是删除镜像、容器和网络的快捷方式。</p><p>在 Docker 17.06.0 及以前版本中，还可以删除卷。</p><p>在 Docker 17.06.1 及更高版本中必须为 docker system prune 命令明确指定 --volumes 标志才会删除卷。</p><pre class="language-none"><code class="language-none">$ docker system prune --volumesWARNING! This will remove:  - all stopped containers  - all networks not used by at least one container  - all volumes not used by at least one container  - all dangling images  - all dangling build cacheAre you sure you want to continue? [y/N] y</code></pre><h4 id="重启-Docker"><a href="#重启-Docker" class="headerlink" title="重启 Docker"></a>重启 Docker</h4><p>使用上面几个方法的命令可以有效清理 Docker 运行所产生的无用文件，且无需重启 Docker 即可生效。</p><p>但是 Docker 也许存在某些 bug（内核 3.13 版本的 Docker 确诊），导致 Docker 无法清理一些无用目录，不过重启 Docker 可以解决这个问题。</p><h4 id="再次查看占用"><a href="#再次查看占用" class="headerlink" title="再次查看占用"></a>再次查看占用</h4><pre class="language-none"><code class="language-none">$ docker system dfTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLEImages              16                  16                  5.072GB             86.04MB (1%)Containers          102                 102                 57.04MB             0B (0%)Local Volumes       32                  9                   206.5MB             241.7kB (0%)Build Cache         0                   0                   0B                  0B</code></pre><p>相比上次，占用明显降低了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker 在长时间使用的情况下，经常需要删除旧的容器并创建新的容器，长此以往，Docker 的数据卷 volumes 会产生了非常多的僵尸文件。&lt;/p&gt;
&lt;p&gt;以下介绍如何查看并清理这些僵尸文件。&lt;/p&gt;</summary>
    
    
    
    <category term="Container" scheme="https://jueee.github.io/categories/Container/"/>
    
    <category term="Docker" scheme="https://jueee.github.io/categories/Container/Docker/"/>
    
    
    <category term="Docker" scheme="https://jueee.github.io/tags/Docker/"/>
    
    <category term="Container" scheme="https://jueee.github.io/tags/Container/"/>
    
  </entry>
  
  <entry>
    <title>docker 命令批量删除状态为 Exited 的容器</title>
    <link href="https://jueee.github.io/2021/10/2021-10-18-docker%E5%91%BD%E4%BB%A4%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%8A%B6%E6%80%81%E4%B8%BAExited%E7%9A%84%E5%AE%B9%E5%99%A8/"/>
    <id>https://jueee.github.io/2021/10/2021-10-18-docker%E5%91%BD%E4%BB%A4%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%8A%B6%E6%80%81%E4%B8%BAExited%E7%9A%84%E5%AE%B9%E5%99%A8/</id>
    <published>2021-10-18T00:00:00.000Z</published>
    <updated>2021-10-22T11:00:27.923Z</updated>
    
    <content type="html"><![CDATA[<p>docker 启动的容器当中，经常有一些退出的容器，既然没有用了，就需要批量清理一下。</p><p>命令：</p><pre class="language-none"><code class="language-none">docker rm $(docker ps -q -f status=exited)</code></pre><p>解释： 利用 docker ps -f 选项可以找到 exited 的容器 -q 只显示容器 id 。</p><p>这样就可以批量删除了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker 启动的容器当中，经常有一些退出的容器，既然没有用了，就需要批量清理一下。&lt;/p&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre class=&quot;language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;docker rm $(docker ps -</summary>
      
    
    
    
    <category term="Container" scheme="https://jueee.github.io/categories/Container/"/>
    
    <category term="Docker" scheme="https://jueee.github.io/categories/Container/Docker/"/>
    
    
    <category term="Docker" scheme="https://jueee.github.io/tags/Docker/"/>
    
    <category term="Container" scheme="https://jueee.github.io/tags/Container/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 清理 binlog 日志的方法</title>
    <link href="https://jueee.github.io/2021/10/2021-10-11-MySQL%E6%B8%85%E7%90%86binlog%E6%97%A5%E5%BF%97%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://jueee.github.io/2021/10/2021-10-11-MySQL%E6%B8%85%E7%90%86binlog%E6%97%A5%E5%BF%97%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2021-10-11T00:00:00.000Z</published>
    <updated>2021-10-22T11:00:27.921Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL 中的 binlog 日志记录了数据库中数据的变动，便于对数据的基于时间点和基于位置的恢复，但是 binlog 也会日渐增大，占用很大的磁盘空间，因此，要对 binlog 使用正确安全的方法清理掉一部分没用的日志。</p><a id="more"></a><h3 id="自动清理"><a href="#自动清理" class="headerlink" title="自动清理"></a>自动清理</h3><p>通过设置 binlog 过期的时间，使系统自动删除 binlog 文件。</p><p>查看 binlog 过期日期配置：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; show variables like 'expire_logs_days';+------------------+-------+| Variable_name    | Value |+------------------+-------+| expire_logs_days | 7     |+------------------+-------+1 row in set (0.00 sec)</code></pre><p>设置 binlog 过期日期：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; set global expire_logs_days = 30;</code></pre><p>在 my.ini 中设置过期时间：</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[mysqld]</span><span class="token constant">expire_logs_days</span> <span class="token attr-value"><span class="token punctuation">=</span> 7</span></code></pre><h3 id="手动清理"><a href="#手动清理" class="headerlink" title="手动清理"></a>手动清理</h3><p>清理前的准备：</p><ol><li><p>查看主库和从库正在使用的 binlog 是哪个文件</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; show master status\Gmysql&gt; show slave status\G</code></pre></li><li><p>在删除 binlog 日志之前，首先对 binlog 日志备份，以防万一。</p></li></ol><p>删除指定日期以前的日志索引中 binlog 日志文件：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; purge master logs before '2021-10-11 17:20:00';</code></pre><p>删除指定日志文件的日志索引中 binlog 日志文件：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; purge master logs to 'mysql-bin.000022';</code></pre><p><strong>注意</strong>：</p><p>时间和文件名一定不可以写错，尤其是时间中的年和文件名中的序号，以防不小心将正在使用的 binlog 删除！</p><p><strong>切勿删除正在使用的 binlog！！！</strong></p><p>使用该语法，会将对应的文件和 mysql-bin.index 中的对应路径删除。</p><h3 id="清理脚本"><a href="#清理脚本" class="headerlink" title="清理脚本"></a>清理脚本</h3><p>自动清理 binlog ，只保留最近 50 个：</p><pre class="language-sh" data-language="sh"><code class="language-sh">#!/bin/sh# incr backup of mysqlcd /mysqldata# get the last binary logLASTBIN=`tail -n 50 mysql-bin.index| head -n 1`echo $LASTBINLASTBINFILE=`basename $LASTBIN`echo $LASTBINFILE# purge binary logs to the last binary log/bin/mysql --defaults-file=/mysql/my1.cnf  -uroot  -e"purge binary logs to '${LASTBINFILE}'"</code></pre><p>可以将该脚本配置进入 crontab。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>过期时间设置的要适当，对于主从复制等读取 binlog 的情况，要看从库的延迟决定过期时间，避免主库 binlog 还未传到从库便因过期而删除，导致主从不一致！！！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;MySQL 中的 binlog 日志记录了数据库中数据的变动，便于对数据的基于时间点和基于位置的恢复，但是 binlog 也会日渐增大，占用很大的磁盘空间，因此，要对 binlog 使用正确安全的方法清理掉一部分没用的日志。&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="https://jueee.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://jueee.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://jueee.github.io/tags/MySQL/"/>
    
    <category term="Database" scheme="https://jueee.github.io/tags/Database/"/>
    
  </entry>
  
</feed>
